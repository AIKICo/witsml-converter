////////////////////////////////////////////////////////////////////////
//
// Map21To20MapToWell.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map21To20
{

	public class Map21To20MapToWell : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_Well4Instance;
		// members
		#endregion //Members


		public void Run(String Well4SourceFilename, string Well2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input Well4Source = new Altova.IO.FileInput(Well4SourceFilename))
			// open target stream
			using (Altova.IO.Output Well2Target = new Altova.IO.FileOutput(Well2TargetFilename))
			{
				// run
				Run(Well4Source, Well2Target);
			}
		}

		public void Run(Altova.IO.Input Well4Source, Altova.IO.Output Well2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + Well4Source.Filename + "...\n");
			XmlDocument Well4DocSourceObject = XmlTreeOperations.LoadDocument(Well4Source);


			m_Well4Instance = Well4DocSourceObject;
			if (runDoesCloseAll)
				Well4Source.Close();
				// Create the target
				XmlDocument Well2Doc = (Well2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? Well2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_Well4Instance, Well4Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, Well2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				Well2Doc,
				Well2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					Well4Source.Close();
					Well2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_Well_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_Well_Instance
			)
			{
				this.var1_Well_Instance = var1_Well_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_Well;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_Well = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Well", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_Well_Instance));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Well", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq1_join(var2_Well)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_Well;

			public seq1_join(
				System.Collections.IEnumerable var1_Well
			)
			{
				this.var1_Well = var1_Well;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_Well;
				private IEnumerator var3_objectVersion;
				private IEnumerator var4_Well;
				private System.Collections.IEnumerable var5_InformationalGeograp;
				private IEnumerator var6_Aliases;
				private IEnumerator var7_CustomData;
				private IEnumerator var8_ExtensionNameValue;
				private IEnumerator var9_NameLegal;
				private IEnumerator var10_NumLicense;
				private IEnumerator var11_NumGovt;
				private IEnumerator var12_DTimLicense;
				private IEnumerator var13_Field;
				private IEnumerator var14_Country;
				private IEnumerator var15_State;
				private IEnumerator var16_County;
				private IEnumerator var17_Region;
				private IEnumerator var18_District;
				private IEnumerator var19_Block;
				private IEnumerator var20_TimeZone;
				private IEnumerator var21_Operator;
				private IEnumerator var22_OperatorDiv;
				private IEnumerator var23_OriginalOperator;
				private IEnumerator var24_PcInterest;
				private IEnumerator var25_NumAPI;
				private IEnumerator var26_StatusWell;
				private IEnumerator var27_PurposeWell;
				private IEnumerator var28_FluidWell;
				private IEnumerator var29_DirectionWell;
				private IEnumerator var30_DTimSpud;
				private IEnumerator var31_DTimPa;
				private IEnumerator var32_WaterDepth;
				private IEnumerator var33_filter;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("eml", "http://www.energistics.org/energyml/data/commonv2");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateNamespace("gco", "http://www.isotc211.org/2005/gco");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateNamespace("gmd", "http://www.isotc211.org/2005/gmd");
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateNamespace("gsr", "http://www.isotc211.org/2005/gsr");
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateNamespace("gts", "http://www.isotc211.org/2005/gts");
							pos++;
							return true;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateNamespace("gml", "http://www.opengis.net/gml/3.2");
							pos++;
							return true;
						case 7:
							state = 8;
							current = Altova.Functions.Core.CreateNamespace("xlink", "http://www.w3.org/1999/xlink");
							pos++;
							return true;
						case 8:
							state = 9;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.energistics.org/energyml/data/witsmlv2 file:///C:/Projects/Energistics/Repo/energyml/data/witsml/v2.0/xsd_schemas/Well.xsd"));
							pos++;
							return true;
						case 9:
							state = 10;
							var2_Well = (closure.var1_Well).GetEnumerator();
							goto case 10;
						case 10:
							state = 12;
							if (!var2_Well.MoveNext()) { state = 11; goto case 11; }
							var3_objectVersion = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("objectVersion", ""), (Altova.Mapforce.IMFNode)(var2_Well.Current))).GetEnumerator();
							goto case 12;
						case 11:
							state = 17;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Well); var2_Well = null;
							var4_Well = (closure.var1_Well).GetEnumerator();
							goto case 17;
						case 12:
							state = 12;
							if (!var3_objectVersion.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("objectVersion", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_objectVersion.Current))));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var3_objectVersion); var3_objectVersion = null;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("schemaVersion", ""), Altova.Functions.Core.Box("2.0"));
							pos++;
							return true;
						case 15:
							state = 10;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uuid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uuid", ""), (Altova.Mapforce.IMFNode)(var2_Well.Current))))));
							pos++;
							return true;
						case 17:
							state = 19;
							if (!var4_Well.MoveNext()) { state = 18; goto case 18; }
							var5_InformationalGeograp = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("InformationalGeographicLocationWGS84", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current)));
							var6_Aliases = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 19;
						case 18:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_Well); var4_Well = null;
							return false;
						case 19:
							state = 19;
							if (!var6_Aliases.MoveNext()) { state = 20; goto case 20; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Aliases", "http://www.energistics.org/energyml/data/commonv2"), (new seq2_join((Altova.Mapforce.IMFNode)(var6_Aliases.Current))));
							pos++;
							return true;
						case 20:
							state = 22;
							Altova.Mapforce.MFEnumerator.Dispose(var6_Aliases); var6_Aliases = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), (new seq3_join((Altova.Mapforce.IMFNode)(var4_Well.Current))));
							pos++;
							return true;
						case 22:
							state = 23;
							var7_CustomData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CustomData", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 23;
						case 23:
							state = 23;
							if (!var7_CustomData.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:CustomData", "http://www.energistics.org/energyml/data/commonv2"), (new seq4_join((Altova.Mapforce.IMFNode)(var7_CustomData.Current))));
							pos++;
							return true;
						case 24:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var7_CustomData); var7_CustomData = null;
							var8_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 26;
						case 26:
							state = 26;
							if (!var8_ExtensionNameValue.MoveNext()) { state = 27; goto case 27; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ExtensionNameValue", "http://www.energistics.org/energyml/data/commonv2"), tbf.tbf1_ExtensionNameValue.Eval((Altova.Mapforce.IMFNode)(var8_ExtensionNameValue.Current)));
							pos++;
							return true;
						case 27:
							state = 29;
							Altova.Mapforce.MFEnumerator.Dispose(var8_ExtensionNameValue); var8_ExtensionNameValue = null;
							var9_NameLegal = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NameLegal", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 29;
						case 29:
							state = 29;
							if (!var9_NameLegal.MoveNext()) { state = 30; goto case 30; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NameLegal", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var9_NameLegal.Current))));
							pos++;
							return true;
						case 30:
							state = 32;
							Altova.Mapforce.MFEnumerator.Dispose(var9_NameLegal); var9_NameLegal = null;
							var10_NumLicense = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NumLicense", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 32;
						case 32:
							state = 32;
							if (!var10_NumLicense.MoveNext()) { state = 33; goto case 33; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NumLicense", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var10_NumLicense.Current))));
							pos++;
							return true;
						case 33:
							state = 35;
							Altova.Mapforce.MFEnumerator.Dispose(var10_NumLicense); var10_NumLicense = null;
							var11_NumGovt = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NumGovt", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 35;
						case 35:
							state = 35;
							if (!var11_NumGovt.MoveNext()) { state = 36; goto case 36; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NumGovt", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var11_NumGovt.Current))));
							pos++;
							return true;
						case 36:
							state = 38;
							Altova.Mapforce.MFEnumerator.Dispose(var11_NumGovt); var11_NumGovt = null;
							var12_DTimLicense = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTimLicense", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 38;
						case 38:
							state = 38;
							if (!var12_DTimLicense.MoveNext()) { state = 39; goto case 39; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DTimLicense", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var12_DTimLicense.Current))))));
							pos++;
							return true;
						case 39:
							state = 41;
							Altova.Mapforce.MFEnumerator.Dispose(var12_DTimLicense); var12_DTimLicense = null;
							var13_Field = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Field", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 41;
						case 41:
							state = 41;
							if (!var13_Field.MoveNext()) { state = 42; goto case 42; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Field", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_Field.Current))));
							pos++;
							return true;
						case 42:
							state = 44;
							Altova.Mapforce.MFEnumerator.Dispose(var13_Field); var13_Field = null;
							var14_Country = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Country", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 44;
						case 44:
							state = 44;
							if (!var14_Country.MoveNext()) { state = 45; goto case 45; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Country", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var14_Country.Current))));
							pos++;
							return true;
						case 45:
							state = 47;
							Altova.Mapforce.MFEnumerator.Dispose(var14_Country); var14_Country = null;
							var15_State = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("State", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 47;
						case 47:
							state = 47;
							if (!var15_State.MoveNext()) { state = 48; goto case 48; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("State", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var15_State.Current))));
							pos++;
							return true;
						case 48:
							state = 50;
							Altova.Mapforce.MFEnumerator.Dispose(var15_State); var15_State = null;
							var16_County = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("County", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 50;
						case 50:
							state = 50;
							if (!var16_County.MoveNext()) { state = 51; goto case 51; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("County", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var16_County.Current))));
							pos++;
							return true;
						case 51:
							state = 53;
							Altova.Mapforce.MFEnumerator.Dispose(var16_County); var16_County = null;
							var17_Region = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Region", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 53;
						case 53:
							state = 53;
							if (!var17_Region.MoveNext()) { state = 54; goto case 54; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Region", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var17_Region.Current))));
							pos++;
							return true;
						case 54:
							state = 56;
							Altova.Mapforce.MFEnumerator.Dispose(var17_Region); var17_Region = null;
							var18_District = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("District", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 56;
						case 56:
							state = 56;
							if (!var18_District.MoveNext()) { state = 57; goto case 57; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("District", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var18_District.Current))));
							pos++;
							return true;
						case 57:
							state = 59;
							Altova.Mapforce.MFEnumerator.Dispose(var18_District); var18_District = null;
							var19_Block = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Block", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 59;
						case 59:
							state = 59;
							if (!var19_Block.MoveNext()) { state = 60; goto case 60; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Block", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var19_Block.Current))));
							pos++;
							return true;
						case 60:
							state = 62;
							Altova.Mapforce.MFEnumerator.Dispose(var19_Block); var19_Block = null;
							var20_TimeZone = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TimeZone", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 62;
						case 62:
							state = 62;
							if (!var20_TimeZone.MoveNext()) { state = 63; goto case 63; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TimeZone", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var20_TimeZone.Current))));
							pos++;
							return true;
						case 63:
							state = 65;
							Altova.Mapforce.MFEnumerator.Dispose(var20_TimeZone); var20_TimeZone = null;
							var21_Operator = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Operator", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 65;
						case 65:
							state = 65;
							if (!var21_Operator.MoveNext()) { state = 66; goto case 66; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Operator", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var21_Operator.Current))))));
							pos++;
							return true;
						case 66:
							state = 68;
							Altova.Mapforce.MFEnumerator.Dispose(var21_Operator); var21_Operator = null;
							var22_OperatorDiv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("OperatorDiv", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 68;
						case 68:
							state = 68;
							if (!var22_OperatorDiv.MoveNext()) { state = 69; goto case 69; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("OperatorDiv", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var22_OperatorDiv.Current))));
							pos++;
							return true;
						case 69:
							state = 71;
							Altova.Mapforce.MFEnumerator.Dispose(var22_OperatorDiv); var22_OperatorDiv = null;
							var23_OriginalOperator = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("OriginalOperator", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 71;
						case 71:
							state = 71;
							if (!var23_OriginalOperator.MoveNext()) { state = 72; goto case 72; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("OriginalOperator", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_seq_()));
							pos++;
							return true;
						case 72:
							state = 74;
							Altova.Mapforce.MFEnumerator.Dispose(var23_OriginalOperator); var23_OriginalOperator = null;
							var24_PcInterest = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PcInterest", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 74;
						case 74:
							state = 74;
							if (!var24_PcInterest.MoveNext()) { state = 75; goto case 75; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("PcInterest", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq4_join((Altova.Mapforce.IMFNode)(var24_PcInterest.Current))));
							pos++;
							return true;
						case 75:
							state = 77;
							Altova.Mapforce.MFEnumerator.Dispose(var24_PcInterest); var24_PcInterest = null;
							var25_NumAPI = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NumAPI", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 77;
						case 77:
							state = 77;
							if (!var25_NumAPI.MoveNext()) { state = 78; goto case 78; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NumAPI", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var25_NumAPI.Current))));
							pos++;
							return true;
						case 78:
							state = 80;
							Altova.Mapforce.MFEnumerator.Dispose(var25_NumAPI); var25_NumAPI = null;
							var26_StatusWell = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("StatusWell", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 80;
						case 80:
							state = 80;
							if (!var26_StatusWell.MoveNext()) { state = 81; goto case 81; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("StatusWell", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var26_StatusWell.Current))));
							pos++;
							return true;
						case 81:
							state = 83;
							Altova.Mapforce.MFEnumerator.Dispose(var26_StatusWell); var26_StatusWell = null;
							var27_PurposeWell = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PurposeWell", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 83;
						case 83:
							state = 83;
							if (!var27_PurposeWell.MoveNext()) { state = 84; goto case 84; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("PurposeWell", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var27_PurposeWell.Current))));
							pos++;
							return true;
						case 84:
							state = 86;
							Altova.Mapforce.MFEnumerator.Dispose(var27_PurposeWell); var27_PurposeWell = null;
							var28_FluidWell = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("FluidWell", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 86;
						case 86:
							state = 86;
							if (!var28_FluidWell.MoveNext()) { state = 87; goto case 87; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FluidWell", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var28_FluidWell.Current))));
							pos++;
							return true;
						case 87:
							state = 89;
							Altova.Mapforce.MFEnumerator.Dispose(var28_FluidWell); var28_FluidWell = null;
							var29_DirectionWell = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DirectionWell", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 89;
						case 89:
							state = 89;
							if (!var29_DirectionWell.MoveNext()) { state = 90; goto case 90; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DirectionWell", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var29_DirectionWell.Current))));
							pos++;
							return true;
						case 90:
							state = 92;
							Altova.Mapforce.MFEnumerator.Dispose(var29_DirectionWell); var29_DirectionWell = null;
							var30_DTimSpud = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTimSpud", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 92;
						case 92:
							state = 92;
							if (!var30_DTimSpud.MoveNext()) { state = 93; goto case 93; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DTimSpud", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var30_DTimSpud.Current))))));
							pos++;
							return true;
						case 93:
							state = 95;
							Altova.Mapforce.MFEnumerator.Dispose(var30_DTimSpud); var30_DTimSpud = null;
							var31_DTimPa = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTimPa", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 95;
						case 95:
							state = 95;
							if (!var31_DTimPa.MoveNext()) { state = 96; goto case 96; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DTimPa", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var31_DTimPa.Current))))));
							pos++;
							return true;
						case 96:
							state = 98;
							Altova.Mapforce.MFEnumerator.Dispose(var31_DTimPa); var31_DTimPa = null;
							var32_WaterDepth = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("WaterDepth", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 98;
						case 98:
							state = 98;
							if (!var32_WaterDepth.MoveNext()) { state = 99; goto case 99; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("WaterDepth", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq4_join((Altova.Mapforce.IMFNode)(var32_WaterDepth.Current))));
							pos++;
							return true;
						case 99:
							state = 101;
							Altova.Mapforce.MFEnumerator.Dispose(var32_WaterDepth); var32_WaterDepth = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GeographicLocationWGS84", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq6_join(var5_InformationalGeograp)));
							pos++;
							return true;
						case 101:
							state = 102;
							var33_filter = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("WellheadElevation", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Well.Current))).GetEnumerator();
							goto case 102;
						case 102:
							state = 102;
							if (!var33_filter.MoveNext()) { state = 103; goto case 103; }
							if (!((bool)Altova.Functions.Core.First((new seq9_CoreAny((new seq8_map((Altova.Mapforce.IMFNode)(var33_filter.Current)))))))) { state = 102; goto case 102;  }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("WellheadElevation", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq10_join((Altova.Mapforce.IMFNode)(var33_filter.Current))));
							pos++;
							return true;
						case 103:
							state = 17;
							Altova.Mapforce.MFEnumerator.Dispose(var33_filter); var33_filter = null;
							goto case 17;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_objectVersion); var3_objectVersion = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_Well); var2_Well = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_Aliases); var6_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_CustomData); var7_CustomData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_ExtensionNameValue); var8_ExtensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_NameLegal); var9_NameLegal = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_NumLicense); var10_NumLicense = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_NumGovt); var11_NumGovt = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_DTimLicense); var12_DTimLicense = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_Field); var13_Field = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_Country); var14_Country = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_State); var15_State = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_County); var16_County = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_Region); var17_Region = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_District); var18_District = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_Block); var19_Block = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_TimeZone); var20_TimeZone = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_Operator); var21_Operator = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_OperatorDiv); var22_OperatorDiv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var23_OriginalOperator); var23_OriginalOperator = null;
					Altova.Mapforce.MFEnumerator.Dispose(var24_PcInterest); var24_PcInterest = null;
					Altova.Mapforce.MFEnumerator.Dispose(var25_NumAPI); var25_NumAPI = null;
					Altova.Mapforce.MFEnumerator.Dispose(var26_StatusWell); var26_StatusWell = null;
					Altova.Mapforce.MFEnumerator.Dispose(var27_PurposeWell); var27_PurposeWell = null;
					Altova.Mapforce.MFEnumerator.Dispose(var28_FluidWell); var28_FluidWell = null;
					Altova.Mapforce.MFEnumerator.Dispose(var29_DirectionWell); var29_DirectionWell = null;
					Altova.Mapforce.MFEnumerator.Dispose(var30_DTimSpud); var30_DTimSpud = null;
					Altova.Mapforce.MFEnumerator.Dispose(var31_DTimPa); var31_DTimPa = null;
					Altova.Mapforce.MFEnumerator.Dispose(var32_WaterDepth); var32_WaterDepth = null;
					Altova.Mapforce.MFEnumerator.Dispose(var33_filter); var33_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_Well); var4_Well = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq2_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var2_Description;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("authority", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("authority", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Identifier", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Identifier", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var2_Description.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_Description.Current))));
							pos++;
							return true;
						case 5:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Description); var2_Description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Description); var2_Description = null;
				}
			}
		}
		class seq3_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq3_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_join closure;
				private Altova.Mapforce.IMFNode var2_Citation;
				private IEnumerator var3_Editor;
				private IEnumerator var4_LastUpdate;
				private IEnumerator var5_Description;
				private IEnumerator var6_DescriptiveKeywords;
				public Enumerator(seq3_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Citation = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), var2_Citation)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Originator", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Originator", "http://www.energistics.org/energyml/data/commonv2"), var2_Citation)))));
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Creation", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Creation", "http://www.energistics.org/energyml/data/commonv2"), var2_Citation)))))));
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Format", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Format", "http://www.energistics.org/energyml/data/commonv2"), var2_Citation)))));
							pos++;
							return true;
						case 5:
							state = 6;
							var3_Editor = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Editor", "http://www.energistics.org/energyml/data/commonv2"), var2_Citation)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var3_Editor.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Editor", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_Editor.Current))));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Editor); var3_Editor = null;
							var4_LastUpdate = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), var2_Citation)).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var4_LastUpdate.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_LastUpdate.Current))))));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var4_LastUpdate); var4_LastUpdate = null;
							var5_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/commonv2"), var2_Citation)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var5_Description.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_Description.Current))));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
							var6_DescriptiveKeywords = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DescriptiveKeywords", "http://www.energistics.org/energyml/data/commonv2"), var2_Citation)).GetEnumerator();
							goto case 15;
						case 15:
							state = 15;
							if (!var6_DescriptiveKeywords.MoveNext()) { state = 16; goto case 16; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:DescriptiveKeywords", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_DescriptiveKeywords.Current))));
							pos++;
							return true;
						case 16:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var6_DescriptiveKeywords); var6_DescriptiveKeywords = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Editor); var3_Editor = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_LastUpdate); var4_LastUpdate = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_DescriptiveKeywords); var6_DescriptiveKeywords = null;
				}
			}
		}
		class seq4_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq4_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_join closure;
				private IEnumerator var2_select_attributes;
				private IEnumerator var3_select_children;
				public Enumerator(seq4_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_select_attributes = (Altova.Functions.Core.SelectAttributes(closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_select_attributes.MoveNext()) { state = 3; goto case 3; }
							current = var2_select_attributes.Current;
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_select_attributes); var2_select_attributes = null;
							var3_select_children = (Altova.Functions.Core.SelectChildren(closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_select_children.MoveNext()) { state = 6; goto case 6; }
							current = var3_select_children.Current;
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_select_children); var3_select_children = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_select_attributes); var2_select_attributes = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_select_children); var3_select_children = null;
				}
			}
		}
		class seq5_seq_ : IEnumerable
		{

			public seq5_seq_(
			)
			{
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_seq_ closure;
				public Enumerator(seq5_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq6_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_InformationalGeograp;

			public seq6_join(
				System.Collections.IEnumerable var1_InformationalGeograp
			)
			{
				this.var1_InformationalGeograp = var1_InformationalGeograp;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_join closure;
				private IEnumerator var2_InformationalGeograp;
				private IEnumerator var3_InformationalGeograp;
				public Enumerator(seq6_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_InformationalGeograp = (closure.var1_InformationalGeograp).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_InformationalGeograp.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Latitude", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_PlaneAngleMeasure.Eval((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Latitude", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var2_InformationalGeograp.Current)))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_InformationalGeograp); var2_InformationalGeograp = null;
							var3_InformationalGeograp = (closure.var1_InformationalGeograp).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_InformationalGeograp.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Longitude", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_PlaneAngleMeasure.Eval((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Longitude", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var3_InformationalGeograp.Current)))));
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_InformationalGeograp); var3_InformationalGeograp = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Crs", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq7_join(closure.var1_InformationalGeograp)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_InformationalGeograp); var2_InformationalGeograp = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_InformationalGeograp); var3_InformationalGeograp = null;
				}
			}
		}
		class seq7_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_InformationalGeograp;

			public seq7_join(
				System.Collections.IEnumerable var1_InformationalGeograp
			)
			{
				this.var1_InformationalGeograp = var1_InformationalGeograp;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_join closure;
				private IEnumerator var2_InformationalGeograp;
				public Enumerator(seq7_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/commonv2}GeodeticUnknownCrs")));
							pos++;
							return true;
						case 2:
							state = 3;
							var2_InformationalGeograp = (closure.var1_InformationalGeograp).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var2_InformationalGeograp.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Unknown", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("GeographicCrs", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var2_InformationalGeograp.Current))))))));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_InformationalGeograp); var2_InformationalGeograp = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_InformationalGeograp); var2_InformationalGeograp = null;
				}
			}
		}
		class seq8_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq8_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq8_map closure;
				private IEnumerator var2_type;
				public Enumerator(seq8_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_type = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("type", "http://www.w3.org/2001/XMLSchema-instance"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_type.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Equal(Altova.CoreTypes.NodeToQName((Altova.Mapforce.IMFNode)(var2_type.Current)), Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/commonv2}ReferencePointElevation"));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
				}
			}
		}
		class seq9_CoreAny : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_sequence;

			public seq9_CoreAny(
				System.Collections.IEnumerable var1_sequence
			)
			{
				this.var1_sequence = var1_sequence;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq9_CoreAny closure;
				private IEnumerator var2_enum;
				public Enumerator(seq9_CoreAny closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_enum = (closure.var1_sequence).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_enum.MoveNext()) { state = 3; goto case 3; }
							if (!((bool)(var2_enum.Current))) { state = 2; goto case 2;  }
							current = Altova.CoreTypes.ParseBoolean("true");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.CoreTypes.ParseBoolean("false");
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_enum); var2_enum = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_enum); var2_enum = null;
				}
			}
		}
		class seq10_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq10_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq10_join closure;
				private Altova.Mapforce.IMFNode var2_Elevation;
				public Enumerator(seq10_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Elevation = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Elevation", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_Elevation)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("datum", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReferencePoint", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))))));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_Elevation)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_Well_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_Well_Instance
			)
			{
				this.var1_Well_Instance = var1_Well_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_Well;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Well = ((new main(closure.var1_Well_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_Well.MoveNext()) { state = 3; goto case 3; }
							current = var2_Well.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Well); var2_Well = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Well); var2_Well = null;
				}
			}
		}

	}
}
