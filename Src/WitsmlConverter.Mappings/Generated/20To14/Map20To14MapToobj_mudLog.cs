////////////////////////////////////////////////////////////////////////
//
// Map20To14MapToobj_mudLog.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map20To14
{

	public class Map20To14MapToobj_mudLog : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_MudLogReport2Instance;
		// members
		#endregion //Members


		public void Run(String MudLogReport2SourceFilename, string obj_mudLog2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input MudLogReport2Source = new Altova.IO.FileInput(MudLogReport2SourceFilename))
			// open target stream
			using (Altova.IO.Output obj_mudLog2Target = new Altova.IO.FileOutput(obj_mudLog2TargetFilename))
			{
				// run
				Run(MudLogReport2Source, obj_mudLog2Target);
			}
		}

		public void Run(Altova.IO.Input MudLogReport2Source, Altova.IO.Output obj_mudLog2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + MudLogReport2Source.Filename + "...\n");
			XmlDocument MudLogReport2DocSourceObject = XmlTreeOperations.LoadDocument(MudLogReport2Source);


			m_MudLogReport2Instance = MudLogReport2DocSourceObject;
			if (runDoesCloseAll)
				MudLogReport2Source.Close();
				// Create the target
				XmlDocument obj_mudLog2Doc = (obj_mudLog2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? obj_mudLog2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_MudLogReport2Instance, MudLogReport2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, obj_mudLog2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				obj_mudLog2Doc,
				obj_mudLog2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					MudLogReport2Source.Close();
					obj_mudLog2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_MudLogReport_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_MudLogReport_Instance
			)
			{
				this.var1_MudLogReport_Instance = var1_MudLogReport_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_MudLogReport;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_MudLogReport = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MudLogReport", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_MudLogReport_Instance));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mudLogs", "http://www.witsml.org/schemas/1series"), (new seq1_seq_(var2_MudLogReport)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_seq_ : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_MudLogReport;

			public seq1_seq_(
				System.Collections.IEnumerable var1_MudLogReport
			)
			{
				this.var1_MudLogReport = var1_MudLogReport;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_seq_ closure;
				public Enumerator(seq1_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("abs", "http://www.energistics.org/schemas/abstract");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.witsml.org/schemas/1series http://w3.energistics.org/schema/WITSML_v1.4.1.1_Data_Schema/witsml_v1.4.1.1_data/xsd_schemas/obj_mudLog.xsd"));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mudLog", "http://www.witsml.org/schemas/1series"), (new seq2_join(closure.var1_MudLogReport)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_MudLogReport;

			public seq2_join(
				System.Collections.IEnumerable var1_MudLogReport
			)
			{
				this.var1_MudLogReport = var1_MudLogReport;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var2_MudLogReport;
				private IEnumerator var3_Aliases;
				private IEnumerator var4_MudLogReport;
				private IEnumerator var5_MudLogReport;
				private IEnumerator var6_MudLogReport;
				private IEnumerator var7_MudLogCompany;
				private IEnumerator var8_MudLogReport;
				private IEnumerator var9_MudLogEngineers;
				private IEnumerator var10_MudLogReport;
				private IEnumerator var11_ReportMdInterval;
				private IEnumerator var12_MudLogReport;
				private IEnumerator var13_ReportMdInterval;
				private IEnumerator var14_filter;
				private System.Collections.IEnumerable var15_MdInterval;
				private IEnumerator var16_MudLogReport;
				private IEnumerator var17_MudlogIntervals;
				private IEnumerator var20_MudLogReport;
				private System.Collections.IEnumerable var18_DrillingParameters;
				private Altova.Mapforce.IMFNode var19_MdInterval;
				private IEnumerator var21_CustomData;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_MudLogReport = (closure.var1_MudLogReport).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_MudLogReport.MoveNext()) { state = 3; goto case 3; }
							var3_Aliases = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var2_MudLogReport.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_MudLogReport); var2_MudLogReport = null;
							var4_MudLogReport = (closure.var1_MudLogReport).GetEnumerator();
							goto case 7;
						case 4:
							state = 4;
							if (!var3_Aliases.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Identifier", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var3_Aliases.Current))))));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Aliases); var3_Aliases = null;
							goto case 2;
						case 7:
							state = 7;
							if (!var4_MudLogReport.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("nameWellbore", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_MudLogReport.Current))))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var4_MudLogReport); var4_MudLogReport = null;
							var5_MudLogReport = (closure.var1_MudLogReport).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var5_MudLogReport.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var5_MudLogReport.Current))))))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var5_MudLogReport); var5_MudLogReport = null;
							var6_MudLogReport = (closure.var1_MudLogReport).GetEnumerator();
							goto case 13;
						case 13:
							state = 15;
							if (!var6_MudLogReport.MoveNext()) { state = 14; goto case 14; }
							var7_MudLogCompany = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MudLogCompany", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var6_MudLogReport.Current))).GetEnumerator();
							goto case 15;
						case 14:
							state = 18;
							Altova.Mapforce.MFEnumerator.Dispose(var6_MudLogReport); var6_MudLogReport = null;
							var8_MudLogReport = (closure.var1_MudLogReport).GetEnumerator();
							goto case 18;
						case 15:
							state = 15;
							if (!var7_MudLogCompany.MoveNext()) { state = 16; goto case 16; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mudLogCompany", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_MudLogCompany.Current))));
							pos++;
							return true;
						case 16:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var7_MudLogCompany); var7_MudLogCompany = null;
							goto case 13;
						case 18:
							state = 20;
							if (!var8_MudLogReport.MoveNext()) { state = 19; goto case 19; }
							var9_MudLogEngineers = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MudLogEngineers", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var8_MudLogReport.Current))).GetEnumerator();
							goto case 20;
						case 19:
							state = 23;
							Altova.Mapforce.MFEnumerator.Dispose(var8_MudLogReport); var8_MudLogReport = null;
							var10_MudLogReport = (closure.var1_MudLogReport).GetEnumerator();
							goto case 23;
						case 20:
							state = 20;
							if (!var9_MudLogEngineers.MoveNext()) { state = 21; goto case 21; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mudLogEngineers", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var9_MudLogEngineers.Current))));
							pos++;
							return true;
						case 21:
							state = 18;
							Altova.Mapforce.MFEnumerator.Dispose(var9_MudLogEngineers); var9_MudLogEngineers = null;
							goto case 18;
						case 23:
							state = 25;
							if (!var10_MudLogReport.MoveNext()) { state = 24; goto case 24; }
							var11_ReportMdInterval = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReportMdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var10_MudLogReport.Current))).GetEnumerator();
							goto case 25;
						case 24:
							state = 28;
							Altova.Mapforce.MFEnumerator.Dispose(var10_MudLogReport); var10_MudLogReport = null;
							var12_MudLogReport = (closure.var1_MudLogReport).GetEnumerator();
							goto case 28;
						case 25:
							state = 25;
							if (!var11_ReportMdInterval.MoveNext()) { state = 26; goto case 26; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("startMd", "http://www.witsml.org/schemas/1series"), (new seq3_join((Altova.Mapforce.IMFNode)(var11_ReportMdInterval.Current))));
							pos++;
							return true;
						case 26:
							state = 23;
							Altova.Mapforce.MFEnumerator.Dispose(var11_ReportMdInterval); var11_ReportMdInterval = null;
							goto case 23;
						case 28:
							state = 30;
							if (!var12_MudLogReport.MoveNext()) { state = 29; goto case 29; }
							var13_ReportMdInterval = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReportMdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var12_MudLogReport.Current))).GetEnumerator();
							goto case 30;
						case 29:
							state = 33;
							Altova.Mapforce.MFEnumerator.Dispose(var12_MudLogReport); var12_MudLogReport = null;
							var14_filter = ((new seq5_join(closure.var1_MudLogReport))).GetEnumerator();
							goto case 33;
						case 30:
							state = 30;
							if (!var13_ReportMdInterval.MoveNext()) { state = 31; goto case 31; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("endMd", "http://www.witsml.org/schemas/1series"), (new seq4_join((Altova.Mapforce.IMFNode)(var13_ReportMdInterval.Current))));
							pos++;
							return true;
						case 31:
							state = 28;
							Altova.Mapforce.MFEnumerator.Dispose(var13_ReportMdInterval); var13_ReportMdInterval = null;
							goto case 28;
						case 33:
							state = 33;
							if (!var14_filter.MoveNext()) { state = 34; goto case 34; }
							if (!((bool)Altova.Functions.Core.First((new seq7_CoreAny((new seq6_map((Altova.Mapforce.IMFNode)(var14_filter.Current)))))))) { state = 33; goto case 33;  }
							var15_MdInterval = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var14_filter.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("parameter", "http://www.witsml.org/schemas/1series"), (new seq8_join(var15_MdInterval, (Altova.Mapforce.IMFNode)(var14_filter.Current))));
							pos++;
							return true;
						case 34:
							state = 36;
							Altova.Mapforce.MFEnumerator.Dispose(var14_filter); var14_filter = null;
							var16_MudLogReport = (closure.var1_MudLogReport).GetEnumerator();
							goto case 36;
						case 36:
							state = 38;
							if (!var16_MudLogReport.MoveNext()) { state = 37; goto case 37; }
							var17_MudlogIntervals = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MudlogIntervals", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var16_MudLogReport.Current))).GetEnumerator();
							goto case 38;
						case 37:
							state = 41;
							Altova.Mapforce.MFEnumerator.Dispose(var16_MudLogReport); var16_MudLogReport = null;
							var20_MudLogReport = (closure.var1_MudLogReport).GetEnumerator();
							goto case 41;
						case 38:
							state = 38;
							if (!var17_MudlogIntervals.MoveNext()) { state = 39; goto case 39; }
							var18_DrillingParameters = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DrillingParameters", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var17_MudlogIntervals.Current)));
							var19_MdInterval = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var17_MudlogIntervals.Current))));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("geologyInterval", "http://www.witsml.org/schemas/1series"), (new seq9_join((Altova.Mapforce.IMFNode)(var17_MudlogIntervals.Current), var19_MdInterval, var18_DrillingParameters)));
							pos++;
							return true;
						case 39:
							state = 36;
							Altova.Mapforce.MFEnumerator.Dispose(var17_MudlogIntervals); var17_MudlogIntervals = null;
							goto case 36;
						case 41:
							state = 43;
							if (!var20_MudLogReport.MoveNext()) { state = 42; goto case 42; }
							var21_CustomData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CustomData", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var20_MudLogReport.Current))).GetEnumerator();
							goto case 43;
						case 42:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var20_MudLogReport); var20_MudLogReport = null;
							return false;
						case 43:
							state = 43;
							if (!var21_CustomData.MoveNext()) { state = 44; goto case 44; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), tbf.tbf9_cs_customData.Eval((Altova.Mapforce.IMFNode)(var21_CustomData.Current)));
							pos++;
							return true;
						case 44:
							state = 41;
							Altova.Mapforce.MFEnumerator.Dispose(var21_CustomData); var21_CustomData = null;
							goto case 41;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Aliases); var3_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_MudLogReport); var2_MudLogReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_MudLogReport); var4_MudLogReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_MudLogReport); var5_MudLogReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_MudLogCompany); var7_MudLogCompany = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_MudLogReport); var6_MudLogReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_MudLogEngineers); var9_MudLogEngineers = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_MudLogReport); var8_MudLogReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_ReportMdInterval); var11_ReportMdInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_MudLogReport); var10_MudLogReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_ReportMdInterval); var13_ReportMdInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_MudLogReport); var12_MudLogReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_filter); var14_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_MudlogIntervals); var17_MudlogIntervals = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_MudLogReport); var16_MudLogReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_CustomData); var21_CustomData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_MudLogReport); var20_MudLogReport = null;
				}
			}
		}
		class seq3_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq3_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_join closure;
				private Altova.Mapforce.IMFNode var2_MdTop;
				public Enumerator(seq3_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_MdTop = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdTop", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_MdTop)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_MdTop)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq4_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq4_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_join closure;
				private Altova.Mapforce.IMFNode var2_MdBase;
				public Enumerator(seq4_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_MdBase = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdBase", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_MdBase)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_MdBase)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq5_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_MudLogReport;

			public seq5_join(
				System.Collections.IEnumerable var1_MudLogReport
			)
			{
				this.var1_MudLogReport = var1_MudLogReport;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_join closure;
				private IEnumerator var2_MudLogReport;
				private IEnumerator var3_Parameter;
				public Enumerator(seq5_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_MudLogReport = (closure.var1_MudLogReport).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_MudLogReport.MoveNext()) { state = 3; goto case 3; }
							var3_Parameter = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Parameter", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_MudLogReport.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_MudLogReport); var2_MudLogReport = null;
							return false;
						case 4:
							state = 4;
							if (!var3_Parameter.MoveNext()) { state = 5; goto case 5; }
							current = var3_Parameter.Current;
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Parameter); var3_Parameter = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Parameter); var3_Parameter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_MudLogReport); var2_MudLogReport = null;
				}
			}
		}
		class seq6_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq6_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_map closure;
				private IEnumerator var2_type;
				public Enumerator(seq6_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_type = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("type", "http://www.w3.org/2001/XMLSchema-instance"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_type.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Equal(Altova.CoreTypes.NodeToQName((Altova.Mapforce.IMFNode)(var2_type.Current)), Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}MudLogForceParameter"));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
				}
			}
		}
		class seq7_CoreAny : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_sequence;

			public seq7_CoreAny(
				System.Collections.IEnumerable var1_sequence
			)
			{
				this.var1_sequence = var1_sequence;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_CoreAny closure;
				private IEnumerator var2_enum;
				public Enumerator(seq7_CoreAny closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_enum = (closure.var1_sequence).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_enum.MoveNext()) { state = 3; goto case 3; }
							if (!((bool)(var2_enum.Current))) { state = 2; goto case 2;  }
							current = Altova.CoreTypes.ParseBoolean("true");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.CoreTypes.ParseBoolean("false");
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_enum); var2_enum = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_enum); var2_enum = null;
				}
			}
		}
		class seq8_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_MdInterval;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq8_join(
				System.Collections.IEnumerable var1_MdInterval,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_MdInterval = var1_MdInterval;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq8_join closure;
				private IEnumerator var3_MdInterval;
				private IEnumerator var4_MdInterval;
				public Enumerator(seq8_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var2_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							var3_MdInterval = (closure.var1_MdInterval).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var3_MdInterval.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdTop", "http://www.witsml.org/schemas/1series"), (new seq3_join((Altova.Mapforce.IMFNode)(var3_MdInterval.Current))));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var3_MdInterval); var3_MdInterval = null;
							var4_MdInterval = (closure.var1_MdInterval).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var4_MdInterval.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdBottom", "http://www.witsml.org/schemas/1series"), (new seq4_join((Altova.Mapforce.IMFNode)(var4_MdInterval.Current))));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var4_MdInterval); var4_MdInterval = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("force", "http://www.witsml.org/schemas/1series"), tbf.tbf1_forceMeasure.Eval((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Value", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur))));
							pos++;
							return true;
						case 9:
							state = 10;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("text", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Comments", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)))));
							pos++;
							return true;
						case 10:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("commonTime", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimCreation", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Creation", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)))))))))));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_MdInterval); var3_MdInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_MdInterval); var4_MdInterval = null;
				}
			}
		}
		class seq9_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly Altova.Mapforce.IMFNode var2_MdInterval;
			private readonly System.Collections.IEnumerable var3_DrillingParameters;

			public seq9_join(
				Altova.Mapforce.IMFNode var1_cur,
				Altova.Mapforce.IMFNode var2_MdInterval,
				System.Collections.IEnumerable var3_DrillingParameters
			)
			{
				this.var1_cur = var1_cur;
				this.var2_MdInterval = var2_MdInterval;
				this.var3_DrillingParameters = var3_DrillingParameters;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq9_join closure;
				private IEnumerator var4_DrillingParameters;
				private IEnumerator var5_Rop;
				private IEnumerator var7_DrillingParameters;
				private IEnumerator var6_Average;
				private IEnumerator var8_AverageWeightOnBit;
				private IEnumerator var10_DrillingParameters;
				private IEnumerator var9_Average;
				private IEnumerator var11_AverageTorque;
				private IEnumerator var13_DrillingParameters;
				private IEnumerator var12_Average;
				private IEnumerator var14_AverageTorqueCurrent;
				private IEnumerator var16_DrillingParameters;
				private IEnumerator var15_Average;
				private IEnumerator var17_AverageTurnRate;
				private IEnumerator var19_DrillingParameters;
				private IEnumerator var18_Average;
				private IEnumerator var20_AverageMudDensity;
				private IEnumerator var22_DrillingParameters;
				private IEnumerator var21_Average;
				private IEnumerator var23_AverageEcdAtTd;
				private IEnumerator var25_DrillingParameters;
				private IEnumerator var24_Average;
				private IEnumerator var26_AverageDrillingCoeff;
				private IEnumerator var28_Chromatograph;
				private IEnumerator var27_Average;
				private IEnumerator var29_MudGas;
				public Enumerator(seq9_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdTop", "http://www.witsml.org/schemas/1series"), (new seq10_join(closure.var2_MdInterval)));
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdBottom", "http://www.witsml.org/schemas/1series"), (new seq11_join(closure.var2_MdInterval)));
							pos++;
							return true;
						case 4:
							state = 5;
							var4_DrillingParameters = (closure.var3_DrillingParameters).GetEnumerator();
							goto case 5;
						case 5:
							state = 7;
							if (!var4_DrillingParameters.MoveNext()) { state = 6; goto case 6; }
							var5_Rop = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Rop", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_DrillingParameters.Current))).GetEnumerator();
							goto case 7;
						case 6:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var4_DrillingParameters); var4_DrillingParameters = null;
							var7_DrillingParameters = (closure.var3_DrillingParameters).GetEnumerator();
							goto case 12;
						case 7:
							state = 9;
							if (!var5_Rop.MoveNext()) { state = 8; goto case 8; }
							var6_Average = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Average", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var5_Rop.Current))).GetEnumerator();
							goto case 9;
						case 8:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Rop); var5_Rop = null;
							goto case 5;
						case 9:
							state = 9;
							if (!var6_Average.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ropAv", "http://www.witsml.org/schemas/1series"), tbf.tbf2_velocityMeasure.Eval((Altova.Mapforce.IMFNode)(var6_Average.Current)));
							pos++;
							return true;
						case 10:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var6_Average); var6_Average = null;
							goto case 7;
						case 12:
							state = 14;
							if (!var7_DrillingParameters.MoveNext()) { state = 13; goto case 13; }
							var8_AverageWeightOnBit = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("AverageWeightOnBit", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var7_DrillingParameters.Current))).GetEnumerator();
							goto case 14;
						case 13:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var7_DrillingParameters); var7_DrillingParameters = null;
							var10_DrillingParameters = (closure.var3_DrillingParameters).GetEnumerator();
							goto case 19;
						case 14:
							state = 16;
							if (!var8_AverageWeightOnBit.MoveNext()) { state = 15; goto case 15; }
							var9_Average = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Average", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var8_AverageWeightOnBit.Current))).GetEnumerator();
							goto case 16;
						case 15:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var8_AverageWeightOnBit); var8_AverageWeightOnBit = null;
							goto case 12;
						case 16:
							state = 16;
							if (!var9_Average.MoveNext()) { state = 17; goto case 17; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wobAv", "http://www.witsml.org/schemas/1series"), tbf.tbf1_forceMeasure.Eval((Altova.Mapforce.IMFNode)(var9_Average.Current)));
							pos++;
							return true;
						case 17:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var9_Average); var9_Average = null;
							goto case 14;
						case 19:
							state = 21;
							if (!var10_DrillingParameters.MoveNext()) { state = 20; goto case 20; }
							var11_AverageTorque = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("AverageTorque", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var10_DrillingParameters.Current))).GetEnumerator();
							goto case 21;
						case 20:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var10_DrillingParameters); var10_DrillingParameters = null;
							var13_DrillingParameters = (closure.var3_DrillingParameters).GetEnumerator();
							goto case 26;
						case 21:
							state = 23;
							if (!var11_AverageTorque.MoveNext()) { state = 22; goto case 22; }
							var12_Average = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Average", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var11_AverageTorque.Current))).GetEnumerator();
							goto case 23;
						case 22:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var11_AverageTorque); var11_AverageTorque = null;
							goto case 19;
						case 23:
							state = 23;
							if (!var12_Average.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("tqAv", "http://www.witsml.org/schemas/1series"), tbf.tbf3_momentOfForceMeasure.Eval((Altova.Mapforce.IMFNode)(var12_Average.Current)));
							pos++;
							return true;
						case 24:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var12_Average); var12_Average = null;
							goto case 21;
						case 26:
							state = 28;
							if (!var13_DrillingParameters.MoveNext()) { state = 27; goto case 27; }
							var14_AverageTorqueCurrent = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("AverageTorqueCurrent", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var13_DrillingParameters.Current))).GetEnumerator();
							goto case 28;
						case 27:
							state = 33;
							Altova.Mapforce.MFEnumerator.Dispose(var13_DrillingParameters); var13_DrillingParameters = null;
							var16_DrillingParameters = (closure.var3_DrillingParameters).GetEnumerator();
							goto case 33;
						case 28:
							state = 30;
							if (!var14_AverageTorqueCurrent.MoveNext()) { state = 29; goto case 29; }
							var15_Average = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Average", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var14_AverageTorqueCurrent.Current))).GetEnumerator();
							goto case 30;
						case 29:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var14_AverageTorqueCurrent); var14_AverageTorqueCurrent = null;
							goto case 26;
						case 30:
							state = 30;
							if (!var15_Average.MoveNext()) { state = 31; goto case 31; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("currentAv", "http://www.witsml.org/schemas/1series"), tbf.tbf4_electricCurrentMeasure.Eval((Altova.Mapforce.IMFNode)(var15_Average.Current)));
							pos++;
							return true;
						case 31:
							state = 28;
							Altova.Mapforce.MFEnumerator.Dispose(var15_Average); var15_Average = null;
							goto case 28;
						case 33:
							state = 35;
							if (!var16_DrillingParameters.MoveNext()) { state = 34; goto case 34; }
							var17_AverageTurnRate = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("AverageTurnRate", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var16_DrillingParameters.Current))).GetEnumerator();
							goto case 35;
						case 34:
							state = 40;
							Altova.Mapforce.MFEnumerator.Dispose(var16_DrillingParameters); var16_DrillingParameters = null;
							var19_DrillingParameters = (closure.var3_DrillingParameters).GetEnumerator();
							goto case 40;
						case 35:
							state = 37;
							if (!var17_AverageTurnRate.MoveNext()) { state = 36; goto case 36; }
							var18_Average = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Average", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var17_AverageTurnRate.Current))).GetEnumerator();
							goto case 37;
						case 36:
							state = 33;
							Altova.Mapforce.MFEnumerator.Dispose(var17_AverageTurnRate); var17_AverageTurnRate = null;
							goto case 33;
						case 37:
							state = 37;
							if (!var18_Average.MoveNext()) { state = 38; goto case 38; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("rpmAv", "http://www.witsml.org/schemas/1series"), tbf.tbf5_anglePerTimeMeasure.Eval((Altova.Mapforce.IMFNode)(var18_Average.Current)));
							pos++;
							return true;
						case 38:
							state = 35;
							Altova.Mapforce.MFEnumerator.Dispose(var18_Average); var18_Average = null;
							goto case 35;
						case 40:
							state = 42;
							if (!var19_DrillingParameters.MoveNext()) { state = 41; goto case 41; }
							var20_AverageMudDensity = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("AverageMudDensity", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var19_DrillingParameters.Current))).GetEnumerator();
							goto case 42;
						case 41:
							state = 47;
							Altova.Mapforce.MFEnumerator.Dispose(var19_DrillingParameters); var19_DrillingParameters = null;
							var22_DrillingParameters = (closure.var3_DrillingParameters).GetEnumerator();
							goto case 47;
						case 42:
							state = 44;
							if (!var20_AverageMudDensity.MoveNext()) { state = 43; goto case 43; }
							var21_Average = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Average", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var20_AverageMudDensity.Current))).GetEnumerator();
							goto case 44;
						case 43:
							state = 40;
							Altova.Mapforce.MFEnumerator.Dispose(var20_AverageMudDensity); var20_AverageMudDensity = null;
							goto case 40;
						case 44:
							state = 44;
							if (!var21_Average.MoveNext()) { state = 45; goto case 45; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wtMudAv", "http://www.witsml.org/schemas/1series"), tbf.tbf6_densityMeasure.Eval((Altova.Mapforce.IMFNode)(var21_Average.Current)));
							pos++;
							return true;
						case 45:
							state = 42;
							Altova.Mapforce.MFEnumerator.Dispose(var21_Average); var21_Average = null;
							goto case 42;
						case 47:
							state = 49;
							if (!var22_DrillingParameters.MoveNext()) { state = 48; goto case 48; }
							var23_AverageEcdAtTd = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("AverageEcdAtTd", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var22_DrillingParameters.Current))).GetEnumerator();
							goto case 49;
						case 48:
							state = 54;
							Altova.Mapforce.MFEnumerator.Dispose(var22_DrillingParameters); var22_DrillingParameters = null;
							var25_DrillingParameters = (closure.var3_DrillingParameters).GetEnumerator();
							goto case 54;
						case 49:
							state = 51;
							if (!var23_AverageEcdAtTd.MoveNext()) { state = 50; goto case 50; }
							var24_Average = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Average", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var23_AverageEcdAtTd.Current))).GetEnumerator();
							goto case 51;
						case 50:
							state = 47;
							Altova.Mapforce.MFEnumerator.Dispose(var23_AverageEcdAtTd); var23_AverageEcdAtTd = null;
							goto case 47;
						case 51:
							state = 51;
							if (!var24_Average.MoveNext()) { state = 52; goto case 52; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ecdTdAv", "http://www.witsml.org/schemas/1series"), tbf.tbf6_densityMeasure.Eval((Altova.Mapforce.IMFNode)(var24_Average.Current)));
							pos++;
							return true;
						case 52:
							state = 49;
							Altova.Mapforce.MFEnumerator.Dispose(var24_Average); var24_Average = null;
							goto case 49;
						case 54:
							state = 56;
							if (!var25_DrillingParameters.MoveNext()) { state = 55; goto case 55; }
							var26_AverageDrillingCoeff = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("AverageDrillingCoefficient", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var25_DrillingParameters.Current))).GetEnumerator();
							goto case 56;
						case 55:
							state = 61;
							Altova.Mapforce.MFEnumerator.Dispose(var25_DrillingParameters); var25_DrillingParameters = null;
							var28_Chromatograph = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Chromatograph", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 61;
						case 56:
							state = 58;
							if (!var26_AverageDrillingCoeff.MoveNext()) { state = 57; goto case 57; }
							var27_Average = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Average", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var26_AverageDrillingCoeff.Current))).GetEnumerator();
							goto case 58;
						case 57:
							state = 54;
							Altova.Mapforce.MFEnumerator.Dispose(var26_AverageDrillingCoeff); var26_AverageDrillingCoeff = null;
							goto case 54;
						case 58:
							state = 58;
							if (!var27_Average.MoveNext()) { state = 59; goto case 59; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dxcAv", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var27_Average.Current))))));
							pos++;
							return true;
						case 59:
							state = 56;
							Altova.Mapforce.MFEnumerator.Dispose(var27_Average); var27_Average = null;
							goto case 56;
						case 61:
							state = 61;
							if (!var28_Chromatograph.MoveNext()) { state = 62; goto case 62; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("chromatograph", "http://www.witsml.org/schemas/1series"), (new seq12_join((Altova.Mapforce.IMFNode)(var28_Chromatograph.Current))));
							pos++;
							return true;
						case 62:
							state = 64;
							Altova.Mapforce.MFEnumerator.Dispose(var28_Chromatograph); var28_Chromatograph = null;
							var29_MudGas = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MudGas", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 64;
						case 64:
							state = 64;
							if (!var29_MudGas.MoveNext()) { state = 65; goto case 65; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mudGas", "http://www.witsml.org/schemas/1series"), (new seq13_join((Altova.Mapforce.IMFNode)(var29_MudGas.Current))));
							pos++;
							return true;
						case 65:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var29_MudGas); var29_MudGas = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var6_Average); var6_Average = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Rop); var5_Rop = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_DrillingParameters); var4_DrillingParameters = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_Average); var9_Average = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_AverageWeightOnBit); var8_AverageWeightOnBit = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_DrillingParameters); var7_DrillingParameters = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_Average); var12_Average = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_AverageTorque); var11_AverageTorque = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_DrillingParameters); var10_DrillingParameters = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_Average); var15_Average = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_AverageTorqueCurrent); var14_AverageTorqueCurrent = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_DrillingParameters); var13_DrillingParameters = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_Average); var18_Average = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_AverageTurnRate); var17_AverageTurnRate = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_DrillingParameters); var16_DrillingParameters = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_Average); var21_Average = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_AverageMudDensity); var20_AverageMudDensity = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_DrillingParameters); var19_DrillingParameters = null;
					Altova.Mapforce.MFEnumerator.Dispose(var24_Average); var24_Average = null;
					Altova.Mapforce.MFEnumerator.Dispose(var23_AverageEcdAtTd); var23_AverageEcdAtTd = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_DrillingParameters); var22_DrillingParameters = null;
					Altova.Mapforce.MFEnumerator.Dispose(var27_Average); var27_Average = null;
					Altova.Mapforce.MFEnumerator.Dispose(var26_AverageDrillingCoeff); var26_AverageDrillingCoeff = null;
					Altova.Mapforce.MFEnumerator.Dispose(var25_DrillingParameters); var25_DrillingParameters = null;
					Altova.Mapforce.MFEnumerator.Dispose(var28_Chromatograph); var28_Chromatograph = null;
					Altova.Mapforce.MFEnumerator.Dispose(var29_MudGas); var29_MudGas = null;
				}
			}
		}
		class seq10_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_MdInterval;

			public seq10_join(
				Altova.Mapforce.IMFNode var1_MdInterval
			)
			{
				this.var1_MdInterval = var1_MdInterval;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq10_join closure;
				private Altova.Mapforce.IMFNode var2_MdTop;
				public Enumerator(seq10_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_MdTop = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdTop", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_MdInterval)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_MdTop)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_MdTop)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq11_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_MdInterval;

			public seq11_join(
				Altova.Mapforce.IMFNode var1_MdInterval
			)
			{
				this.var1_MdInterval = var1_MdInterval;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq11_join closure;
				private Altova.Mapforce.IMFNode var2_MdBase;
				public Enumerator(seq11_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_MdBase = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdBase", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_MdInterval)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_MdBase)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_MdBase)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq12_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq12_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq12_join closure;
				private IEnumerator var2_ETimChromCycle;
				private IEnumerator var3_MethAv;
				private IEnumerator var4_MethMn;
				private IEnumerator var5_MethMx;
				private IEnumerator var6_EthAv;
				private IEnumerator var7_EthMn;
				private IEnumerator var8_EthMx;
				private IEnumerator var9_PropAv;
				private IEnumerator var10_PropMn;
				private IEnumerator var11_PropMx;
				private IEnumerator var12_IbutAv;
				private IEnumerator var13_IbutMn;
				private IEnumerator var14_IbutMx;
				private IEnumerator var15_NbutAv;
				private IEnumerator var16_NbutMn;
				private IEnumerator var17_NbutMx;
				private IEnumerator var18_IpentAv;
				private IEnumerator var19_IpentMn;
				private IEnumerator var20_IpentMx;
				private IEnumerator var21_NpentAv;
				private IEnumerator var22_NpentMn;
				private IEnumerator var23_NpentMx;
				private IEnumerator var24_EpentAv;
				private IEnumerator var25_EpentMn;
				private IEnumerator var26_EpentMx;
				private IEnumerator var27_IhexAv;
				private IEnumerator var28_IhexMn;
				private IEnumerator var29_IhexMx;
				private IEnumerator var30_NhexAv;
				private IEnumerator var31_NhexMn;
				private IEnumerator var32_NhexMx;
				private IEnumerator var33_Co2Av;
				private IEnumerator var34_Co2Mn;
				private IEnumerator var35_Co2Mx;
				private IEnumerator var36_H2sAv;
				private IEnumerator var37_H2sMn;
				private IEnumerator var38_H2sMx;
				private IEnumerator var39_Acetylene;
				public Enumerator(seq12_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_ETimChromCycle = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ETimChromCycle", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_ETimChromCycle.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eTimChromCycle", "http://www.witsml.org/schemas/1series"), tbf.tbf7_timeMeasure.Eval((Altova.Mapforce.IMFNode)(var2_ETimChromCycle.Current)));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_ETimChromCycle); var2_ETimChromCycle = null;
							var3_MethAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MethAv", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_MethAv.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("methAv", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var3_MethAv.Current)));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var3_MethAv); var3_MethAv = null;
							var4_MethMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MethMn", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var4_MethMn.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("methMn", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var4_MethMn.Current)));
							pos++;
							return true;
						case 9:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var4_MethMn); var4_MethMn = null;
							var5_MethMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MethMx", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var5_MethMx.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("methMx", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var5_MethMx.Current)));
							pos++;
							return true;
						case 12:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var5_MethMx); var5_MethMx = null;
							var6_EthAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("EthAv", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 14;
						case 14:
							state = 14;
							if (!var6_EthAv.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ethAv", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var6_EthAv.Current)));
							pos++;
							return true;
						case 15:
							state = 17;
							Altova.Mapforce.MFEnumerator.Dispose(var6_EthAv); var6_EthAv = null;
							var7_EthMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("EthMn", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 17;
						case 17:
							state = 17;
							if (!var7_EthMn.MoveNext()) { state = 18; goto case 18; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ethMn", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var7_EthMn.Current)));
							pos++;
							return true;
						case 18:
							state = 20;
							Altova.Mapforce.MFEnumerator.Dispose(var7_EthMn); var7_EthMn = null;
							var8_EthMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("EthMx", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 20;
						case 20:
							state = 20;
							if (!var8_EthMx.MoveNext()) { state = 21; goto case 21; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ethMx", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var8_EthMx.Current)));
							pos++;
							return true;
						case 21:
							state = 23;
							Altova.Mapforce.MFEnumerator.Dispose(var8_EthMx); var8_EthMx = null;
							var9_PropAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PropAv", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 23;
						case 23:
							state = 23;
							if (!var9_PropAv.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("propAv", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var9_PropAv.Current)));
							pos++;
							return true;
						case 24:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var9_PropAv); var9_PropAv = null;
							var10_PropMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PropMn", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 26;
						case 26:
							state = 26;
							if (!var10_PropMn.MoveNext()) { state = 27; goto case 27; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("propMn", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var10_PropMn.Current)));
							pos++;
							return true;
						case 27:
							state = 29;
							Altova.Mapforce.MFEnumerator.Dispose(var10_PropMn); var10_PropMn = null;
							var11_PropMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PropMx", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 29;
						case 29:
							state = 29;
							if (!var11_PropMx.MoveNext()) { state = 30; goto case 30; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("propMx", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var11_PropMx.Current)));
							pos++;
							return true;
						case 30:
							state = 32;
							Altova.Mapforce.MFEnumerator.Dispose(var11_PropMx); var11_PropMx = null;
							var12_IbutAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IbutAv", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 32;
						case 32:
							state = 32;
							if (!var12_IbutAv.MoveNext()) { state = 33; goto case 33; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ibutAv", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var12_IbutAv.Current)));
							pos++;
							return true;
						case 33:
							state = 35;
							Altova.Mapforce.MFEnumerator.Dispose(var12_IbutAv); var12_IbutAv = null;
							var13_IbutMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IbutMn", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 35;
						case 35:
							state = 35;
							if (!var13_IbutMn.MoveNext()) { state = 36; goto case 36; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ibutMn", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var13_IbutMn.Current)));
							pos++;
							return true;
						case 36:
							state = 38;
							Altova.Mapforce.MFEnumerator.Dispose(var13_IbutMn); var13_IbutMn = null;
							var14_IbutMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IbutMx", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 38;
						case 38:
							state = 38;
							if (!var14_IbutMx.MoveNext()) { state = 39; goto case 39; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ibutMx", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var14_IbutMx.Current)));
							pos++;
							return true;
						case 39:
							state = 41;
							Altova.Mapforce.MFEnumerator.Dispose(var14_IbutMx); var14_IbutMx = null;
							var15_NbutAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NbutAv", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 41;
						case 41:
							state = 41;
							if (!var15_NbutAv.MoveNext()) { state = 42; goto case 42; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("nbutAv", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var15_NbutAv.Current)));
							pos++;
							return true;
						case 42:
							state = 44;
							Altova.Mapforce.MFEnumerator.Dispose(var15_NbutAv); var15_NbutAv = null;
							var16_NbutMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NbutMn", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 44;
						case 44:
							state = 44;
							if (!var16_NbutMn.MoveNext()) { state = 45; goto case 45; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("nbutMn", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var16_NbutMn.Current)));
							pos++;
							return true;
						case 45:
							state = 47;
							Altova.Mapforce.MFEnumerator.Dispose(var16_NbutMn); var16_NbutMn = null;
							var17_NbutMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NbutMx", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 47;
						case 47:
							state = 47;
							if (!var17_NbutMx.MoveNext()) { state = 48; goto case 48; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("nbutMx", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var17_NbutMx.Current)));
							pos++;
							return true;
						case 48:
							state = 50;
							Altova.Mapforce.MFEnumerator.Dispose(var17_NbutMx); var17_NbutMx = null;
							var18_IpentAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IpentAv", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 50;
						case 50:
							state = 50;
							if (!var18_IpentAv.MoveNext()) { state = 51; goto case 51; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ipentAv", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var18_IpentAv.Current)));
							pos++;
							return true;
						case 51:
							state = 53;
							Altova.Mapforce.MFEnumerator.Dispose(var18_IpentAv); var18_IpentAv = null;
							var19_IpentMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IpentMn", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 53;
						case 53:
							state = 53;
							if (!var19_IpentMn.MoveNext()) { state = 54; goto case 54; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ipentMn", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var19_IpentMn.Current)));
							pos++;
							return true;
						case 54:
							state = 56;
							Altova.Mapforce.MFEnumerator.Dispose(var19_IpentMn); var19_IpentMn = null;
							var20_IpentMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IpentMx", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 56;
						case 56:
							state = 56;
							if (!var20_IpentMx.MoveNext()) { state = 57; goto case 57; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ipentMx", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var20_IpentMx.Current)));
							pos++;
							return true;
						case 57:
							state = 59;
							Altova.Mapforce.MFEnumerator.Dispose(var20_IpentMx); var20_IpentMx = null;
							var21_NpentAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NpentAv", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 59;
						case 59:
							state = 59;
							if (!var21_NpentAv.MoveNext()) { state = 60; goto case 60; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("npentAv", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var21_NpentAv.Current)));
							pos++;
							return true;
						case 60:
							state = 62;
							Altova.Mapforce.MFEnumerator.Dispose(var21_NpentAv); var21_NpentAv = null;
							var22_NpentMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NpentMn", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 62;
						case 62:
							state = 62;
							if (!var22_NpentMn.MoveNext()) { state = 63; goto case 63; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("npentMn", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var22_NpentMn.Current)));
							pos++;
							return true;
						case 63:
							state = 65;
							Altova.Mapforce.MFEnumerator.Dispose(var22_NpentMn); var22_NpentMn = null;
							var23_NpentMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NpentMx", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 65;
						case 65:
							state = 65;
							if (!var23_NpentMx.MoveNext()) { state = 66; goto case 66; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("npentMx", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var23_NpentMx.Current)));
							pos++;
							return true;
						case 66:
							state = 68;
							Altova.Mapforce.MFEnumerator.Dispose(var23_NpentMx); var23_NpentMx = null;
							var24_EpentAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("EpentAv", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 68;
						case 68:
							state = 68;
							if (!var24_EpentAv.MoveNext()) { state = 69; goto case 69; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("epentAv", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var24_EpentAv.Current)));
							pos++;
							return true;
						case 69:
							state = 71;
							Altova.Mapforce.MFEnumerator.Dispose(var24_EpentAv); var24_EpentAv = null;
							var25_EpentMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("EpentMn", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 71;
						case 71:
							state = 71;
							if (!var25_EpentMn.MoveNext()) { state = 72; goto case 72; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("epentMn", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var25_EpentMn.Current)));
							pos++;
							return true;
						case 72:
							state = 74;
							Altova.Mapforce.MFEnumerator.Dispose(var25_EpentMn); var25_EpentMn = null;
							var26_EpentMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("EpentMx", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 74;
						case 74:
							state = 74;
							if (!var26_EpentMx.MoveNext()) { state = 75; goto case 75; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("epentMx", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var26_EpentMx.Current)));
							pos++;
							return true;
						case 75:
							state = 77;
							Altova.Mapforce.MFEnumerator.Dispose(var26_EpentMx); var26_EpentMx = null;
							var27_IhexAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IhexAv", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 77;
						case 77:
							state = 77;
							if (!var27_IhexAv.MoveNext()) { state = 78; goto case 78; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ihexAv", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var27_IhexAv.Current)));
							pos++;
							return true;
						case 78:
							state = 80;
							Altova.Mapforce.MFEnumerator.Dispose(var27_IhexAv); var27_IhexAv = null;
							var28_IhexMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IhexMn", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 80;
						case 80:
							state = 80;
							if (!var28_IhexMn.MoveNext()) { state = 81; goto case 81; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ihexMn", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var28_IhexMn.Current)));
							pos++;
							return true;
						case 81:
							state = 83;
							Altova.Mapforce.MFEnumerator.Dispose(var28_IhexMn); var28_IhexMn = null;
							var29_IhexMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IhexMx", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 83;
						case 83:
							state = 83;
							if (!var29_IhexMx.MoveNext()) { state = 84; goto case 84; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ihexMx", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var29_IhexMx.Current)));
							pos++;
							return true;
						case 84:
							state = 86;
							Altova.Mapforce.MFEnumerator.Dispose(var29_IhexMx); var29_IhexMx = null;
							var30_NhexAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NhexAv", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 86;
						case 86:
							state = 86;
							if (!var30_NhexAv.MoveNext()) { state = 87; goto case 87; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("nhexAv", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var30_NhexAv.Current)));
							pos++;
							return true;
						case 87:
							state = 89;
							Altova.Mapforce.MFEnumerator.Dispose(var30_NhexAv); var30_NhexAv = null;
							var31_NhexMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NhexMn", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 89;
						case 89:
							state = 89;
							if (!var31_NhexMn.MoveNext()) { state = 90; goto case 90; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("nhexMn", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var31_NhexMn.Current)));
							pos++;
							return true;
						case 90:
							state = 92;
							Altova.Mapforce.MFEnumerator.Dispose(var31_NhexMn); var31_NhexMn = null;
							var32_NhexMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NhexMx", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 92;
						case 92:
							state = 92;
							if (!var32_NhexMx.MoveNext()) { state = 93; goto case 93; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("nhexMx", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var32_NhexMx.Current)));
							pos++;
							return true;
						case 93:
							state = 95;
							Altova.Mapforce.MFEnumerator.Dispose(var32_NhexMx); var32_NhexMx = null;
							var33_Co2Av = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Co2Av", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 95;
						case 95:
							state = 95;
							if (!var33_Co2Av.MoveNext()) { state = 96; goto case 96; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("co2Av", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var33_Co2Av.Current)));
							pos++;
							return true;
						case 96:
							state = 98;
							Altova.Mapforce.MFEnumerator.Dispose(var33_Co2Av); var33_Co2Av = null;
							var34_Co2Mn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Co2Mn", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 98;
						case 98:
							state = 98;
							if (!var34_Co2Mn.MoveNext()) { state = 99; goto case 99; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("co2Mn", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var34_Co2Mn.Current)));
							pos++;
							return true;
						case 99:
							state = 101;
							Altova.Mapforce.MFEnumerator.Dispose(var34_Co2Mn); var34_Co2Mn = null;
							var35_Co2Mx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Co2Mx", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 101;
						case 101:
							state = 101;
							if (!var35_Co2Mx.MoveNext()) { state = 102; goto case 102; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("co2Mx", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var35_Co2Mx.Current)));
							pos++;
							return true;
						case 102:
							state = 104;
							Altova.Mapforce.MFEnumerator.Dispose(var35_Co2Mx); var35_Co2Mx = null;
							var36_H2sAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("H2sAv", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 104;
						case 104:
							state = 104;
							if (!var36_H2sAv.MoveNext()) { state = 105; goto case 105; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("h2sAv", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var36_H2sAv.Current)));
							pos++;
							return true;
						case 105:
							state = 107;
							Altova.Mapforce.MFEnumerator.Dispose(var36_H2sAv); var36_H2sAv = null;
							var37_H2sMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("H2sMn", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 107;
						case 107:
							state = 107;
							if (!var37_H2sMn.MoveNext()) { state = 108; goto case 108; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("h2sMn", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var37_H2sMn.Current)));
							pos++;
							return true;
						case 108:
							state = 110;
							Altova.Mapforce.MFEnumerator.Dispose(var37_H2sMn); var37_H2sMn = null;
							var38_H2sMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("H2sMx", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 110;
						case 110:
							state = 110;
							if (!var38_H2sMx.MoveNext()) { state = 111; goto case 111; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("h2sMx", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var38_H2sMx.Current)));
							pos++;
							return true;
						case 111:
							state = 113;
							Altova.Mapforce.MFEnumerator.Dispose(var38_H2sMx); var38_H2sMx = null;
							var39_Acetylene = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Acetylene", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 113;
						case 113:
							state = 113;
							if (!var39_Acetylene.MoveNext()) { state = 114; goto case 114; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("acetylene", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var39_Acetylene.Current)));
							pos++;
							return true;
						case 114:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var39_Acetylene); var39_Acetylene = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_ETimChromCycle); var2_ETimChromCycle = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_MethAv); var3_MethAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_MethMn); var4_MethMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_MethMx); var5_MethMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_EthAv); var6_EthAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_EthMn); var7_EthMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_EthMx); var8_EthMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_PropAv); var9_PropAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_PropMn); var10_PropMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_PropMx); var11_PropMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_IbutAv); var12_IbutAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_IbutMn); var13_IbutMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_IbutMx); var14_IbutMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_NbutAv); var15_NbutAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_NbutMn); var16_NbutMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_NbutMx); var17_NbutMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_IpentAv); var18_IpentAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_IpentMn); var19_IpentMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_IpentMx); var20_IpentMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_NpentAv); var21_NpentAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_NpentMn); var22_NpentMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var23_NpentMx); var23_NpentMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var24_EpentAv); var24_EpentAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var25_EpentMn); var25_EpentMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var26_EpentMx); var26_EpentMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var27_IhexAv); var27_IhexAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var28_IhexMn); var28_IhexMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var29_IhexMx); var29_IhexMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var30_NhexAv); var30_NhexAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var31_NhexMn); var31_NhexMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var32_NhexMx); var32_NhexMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var33_Co2Av); var33_Co2Av = null;
					Altova.Mapforce.MFEnumerator.Dispose(var34_Co2Mn); var34_Co2Mn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var35_Co2Mx); var35_Co2Mx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var36_H2sAv); var36_H2sAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var37_H2sMn); var37_H2sMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var38_H2sMx); var38_H2sMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var39_Acetylene); var39_Acetylene = null;
				}
			}
		}
		class seq13_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq13_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq13_join closure;
				private IEnumerator var2_GasInMud;
				private IEnumerator var3_Average;
				private IEnumerator var4_GasPeak;
				public Enumerator(seq13_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_GasInMud = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("GasInMud", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_GasInMud.MoveNext()) { state = 3; goto case 3; }
							var3_Average = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Average", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_GasInMud.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_GasInMud); var2_GasInMud = null;
							var4_GasPeak = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("GasPeak", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 4:
							state = 4;
							if (!var3_Average.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("gasAv", "http://www.witsml.org/schemas/1series"), tbf.tbf8_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var3_Average.Current)));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Average); var3_Average = null;
							goto case 2;
						case 7:
							state = 7;
							if (!var4_GasPeak.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("gasPeakType", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PeakType", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_GasPeak.Current))))));
							pos++;
							return true;
						case 8:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_GasPeak); var4_GasPeak = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Average); var3_Average = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_GasInMud); var2_GasInMud = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_GasPeak); var4_GasPeak = null;
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_MudLogReport_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_MudLogReport_Instance
			)
			{
				this.var1_MudLogReport_Instance = var1_MudLogReport_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_MudLogReport;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_MudLogReport = ((new main(closure.var1_MudLogReport_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_MudLogReport.MoveNext()) { state = 3; goto case 3; }
							current = var2_MudLogReport.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_MudLogReport); var2_MudLogReport = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_MudLogReport); var2_MudLogReport = null;
				}
			}
		}

	}
}
