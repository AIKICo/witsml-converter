////////////////////////////////////////////////////////////////////////
//
// Map20To14MapToobj_wellboreGeology.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map20To14
{

	public class Map20To14MapToobj_wellboreGeology : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_WellboreGeology2Instance;
		// members
		#endregion //Members


		public void Run(String WellboreGeology2SourceFilename, string obj_wellboreGeologyTargetFilename)
		{
			// open source streams
			using (Altova.IO.Input WellboreGeology2Source = new Altova.IO.FileInput(WellboreGeology2SourceFilename))
			// open target stream
			using (Altova.IO.Output obj_wellboreGeologyTarget = new Altova.IO.FileOutput(obj_wellboreGeologyTargetFilename))
			{
				// run
				Run(WellboreGeology2Source, obj_wellboreGeologyTarget);
			}
		}

		public void Run(Altova.IO.Input WellboreGeology2Source, Altova.IO.Output obj_wellboreGeologyTarget)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + WellboreGeology2Source.Filename + "...\n");
			XmlDocument WellboreGeology2DocSourceObject = XmlTreeOperations.LoadDocument(WellboreGeology2Source);


			m_WellboreGeology2Instance = WellboreGeology2DocSourceObject;
			if (runDoesCloseAll)
				WellboreGeology2Source.Close();
				// Create the target
				XmlDocument obj_wellboreGeologyDoc = (obj_wellboreGeologyTarget.Type == Altova.IO.Output.OutputType.XmlDocument) ? obj_wellboreGeologyTarget.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_WellboreGeology2Instance, WellboreGeology2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, obj_wellboreGeologyDoc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				obj_wellboreGeologyDoc,
				obj_wellboreGeologyTarget,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					WellboreGeology2Source.Close();
					obj_wellboreGeologyTarget.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_WellboreGeology_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_WellboreGeology_Instance
			)
			{
				this.var1_WellboreGeology_Instance = var1_WellboreGeology_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private Altova.Functions.RuntimeContext var2_RuntimeContext;
				private System.Collections.IEnumerable var3_WellboreGeology;
				private System.Collections.IEnumerable var4_join;
				private System.Collections.IEnumerable var5_value;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_RuntimeContext = (Altova.Functions.RuntimeContext.Construct());
							var3_WellboreGeology = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("WellboreGeology", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_WellboreGeology_Instance));
							var4_join = new Altova.Functions.Core.SequenceCache((new seq1_join(var3_WellboreGeology)));
							var5_value = new Altova.Functions.Core.SequenceCache((new seq2_seq_(var4_join, var3_WellboreGeology, var2_RuntimeContext)));
							Altova.Functions.Core.Exists(var5_value);
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mudLogs", "http://www.witsml.org/schemas/1series"), var5_value);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Functions.RuntimeContext.Dispose(var2_RuntimeContext);
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_WellboreGeology;

			public seq1_join(
				System.Collections.IEnumerable var1_WellboreGeology
			)
			{
				this.var1_WellboreGeology = var1_WellboreGeology;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_WellboreGeology;
				private IEnumerator var3_LastUpdate;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_WellboreGeology = (closure.var1_WellboreGeology).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_WellboreGeology.MoveNext()) { state = 3; goto case 3; }
							var3_LastUpdate = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var2_WellboreGeology.Current))))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
							return false;
						case 4:
							state = 4;
							if (!var3_LastUpdate.MoveNext()) { state = 5; goto case 5; }
							current = Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_LastUpdate.Current))));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_LastUpdate); var3_LastUpdate = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_LastUpdate); var3_LastUpdate = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
				}
			}
		}
		class seq2_seq_ : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_join;
			private readonly System.Collections.IEnumerable var2_WellboreGeology;
			private readonly Altova.Functions.RuntimeContext var3_state;

			public seq2_seq_(
				System.Collections.IEnumerable var1_join,
				System.Collections.IEnumerable var2_WellboreGeology,
				Altova.Functions.RuntimeContext var3_state
			)
			{
				this.var1_join = var1_join;
				this.var2_WellboreGeology = var2_WellboreGeology;
				this.var3_state = var3_state;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_seq_ closure;
				private System.Collections.IEnumerable var4_value;
				public Enumerator(seq2_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("abs", "http://www.energistics.org/schemas/abstract");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.witsml.org/schemas/1series http://w3.energistics.org/schema/WITSML_v1.4.1.1_Data_Schema/witsml_v1.4.1.1_data/xsd_schemas/obj_mudLog.xsd"));
							pos++;
							return true;
						case 3:
							state = 0;
							var4_value = new Altova.Functions.Core.SequenceCache((new seq3_join(closure.var1_join, closure.var2_WellboreGeology, closure.var3_state)));
							Altova.Functions.Core.Exists(var4_value);
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mudLog", "http://www.witsml.org/schemas/1series"), var4_value);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq3_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_join;
			private readonly System.Collections.IEnumerable var2_WellboreGeology;
			private readonly Altova.Functions.RuntimeContext var3_state;

			public seq3_join(
				System.Collections.IEnumerable var1_join,
				System.Collections.IEnumerable var2_WellboreGeology,
				Altova.Functions.RuntimeContext var3_state
			)
			{
				this.var1_join = var1_join;
				this.var2_WellboreGeology = var2_WellboreGeology;
				this.var3_state = var3_state;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_join closure;
				private IEnumerator var4_WellboreGeology;
				private IEnumerator var5_UuidAuthority;
				private IEnumerator var6_WellboreGeology;
				private IEnumerator var7_Aliases;
				private IEnumerator var19_WellboreGeology;
				private Altova.Mapforce.IMFNode var8_Identifier;
				private IEnumerator var9_CuttingsIntervalSet;
				private IEnumerator var20_WellboreGeology;
				private IEnumerator var26_WellboreGeology;
				private IEnumerator var10_Aliases;
				private string var21_cast;
				private System.Collections.IEnumerable var22_join;
				private IEnumerator var27_WellboreGeology;
				private Altova.Mapforce.IMFNode var11_Identifier;
				private IEnumerator var33_WellboreGeology;
				private System.Collections.IEnumerable var23_value;
				private IEnumerator var12_ShowIntervalSet;
				private string var28_cast;
				private System.Collections.IEnumerable var29_join;
				private IEnumerator var34_WellboreGeology;
				private System.Collections.IEnumerable var24_select_exists;
				private IEnumerator var13_Aliases;
				private System.Collections.IEnumerable var30_value;
				private IEnumerator var41_WellboreGeology;
				private IEnumerator var25_result;
				private string var35_cast;
				private Altova.Mapforce.IMFNode var14_Identifier;
				private System.Collections.IEnumerable var31_select_exists;
				private System.Collections.IEnumerable var36_join;
				private IEnumerator var42_WellboreGeology;
				private System.Collections.IEnumerable var15_select_exists;
				private System.Collections.IEnumerable var37_value;
				private IEnumerator var32_result;
				private IEnumerator var49_WellboreGeology;
				private System.Collections.IEnumerable var16_select_exists;
				private string var43_cast;
				private System.Collections.IEnumerable var17_select_exists;
				private System.Collections.IEnumerable var38_select_exists;
				private System.Collections.IEnumerable var44_join;
				private IEnumerator var50_InterpretedGeologyIn;
				private IEnumerator var18_result;
				private IEnumerator var39_result;
				private System.Collections.IEnumerable var45_value;
				private IEnumerator var53_WellboreGeology;
				private IEnumerator var51_GeologicIntervalInte;
				private System.Collections.IEnumerable var40_value;
				private System.Collections.IEnumerable var46_select_exists;
				private IEnumerator var54_InterpretedGeologyIn;
				private IEnumerator var47_result;
				private Altova.Mapforce.IMFNode var52_MdInterval;
				private IEnumerator var56_WellboreGeology;
				private Altova.Mapforce.IMFNode var55_MdInterval;
				private System.Collections.IEnumerable var48_value;
				private IEnumerator var57_CuttingsIntervalSet;
				private System.Collections.IEnumerable var61_value;
				private IEnumerator var58_CuttingsInterval;
				private System.Collections.IEnumerable var59_CuttingsIntervalLith;
				private IEnumerator var62_WellboreGeology;
				private Altova.Mapforce.IMFNode var60_MdInterval;
				private IEnumerator var63_ShowIntervalSet;
				private IEnumerator var65_WellboreGeology;
				private IEnumerator var64_CustomData;
				private IEnumerator var66_CustomData;
				public Enumerator(seq3_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var4_WellboreGeology = (closure.var2_WellboreGeology).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var4_WellboreGeology.MoveNext()) { state = 3; goto case 3; }
							var5_UuidAuthority = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("UuidAuthority", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_WellboreGeology.Current))))).GetEnumerator();
							goto case 4;
						case 3:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var4_WellboreGeology); var4_WellboreGeology = null;
							var6_WellboreGeology = (closure.var2_WellboreGeology).GetEnumerator();
							goto case 7;
						case 4:
							state = 4;
							if (!var5_UuidAuthority.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uidWellbore", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_UuidAuthority.Current))));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var5_UuidAuthority); var5_UuidAuthority = null;
							goto case 2;
						case 7:
							state = 9;
							if (!var6_WellboreGeology.MoveNext()) { state = 8; goto case 8; }
							var7_Aliases = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var6_WellboreGeology.Current))).GetEnumerator();
							goto case 9;
						case 8:
							state = 22;
							Altova.Mapforce.MFEnumerator.Dispose(var6_WellboreGeology); var6_WellboreGeology = null;
							var19_WellboreGeology = (closure.var2_WellboreGeology).GetEnumerator();
							goto case 22;
						case 9:
							state = 11;
							if (!var7_Aliases.MoveNext()) { state = 10; goto case 10; }
							var8_Identifier = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Identifier", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var7_Aliases.Current))));
							var9_CuttingsIntervalSet = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CuttingsIntervalSet", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var6_WellboreGeology.Current))).GetEnumerator();
							goto case 11;
						case 10:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var7_Aliases); var7_Aliases = null;
							goto case 7;
						case 11:
							state = 13;
							if (!var9_CuttingsIntervalSet.MoveNext()) { state = 12; goto case 12; }
							var10_Aliases = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var9_CuttingsIntervalSet.Current))).GetEnumerator();
							goto case 13;
						case 12:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var9_CuttingsIntervalSet); var9_CuttingsIntervalSet = null;
							goto case 9;
						case 13:
							state = 15;
							if (!var10_Aliases.MoveNext()) { state = 14; goto case 14; }
							var11_Identifier = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Identifier", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var10_Aliases.Current))));
							var12_ShowIntervalSet = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShowIntervalSet", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var6_WellboreGeology.Current))).GetEnumerator();
							goto case 15;
						case 14:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var10_Aliases); var10_Aliases = null;
							goto case 11;
						case 15:
							state = 17;
							if (!var12_ShowIntervalSet.MoveNext()) { state = 16; goto case 16; }
							var13_Aliases = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var12_ShowIntervalSet.Current))).GetEnumerator();
							goto case 17;
						case 16:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var12_ShowIntervalSet); var12_ShowIntervalSet = null;
							goto case 13;
						case 17:
							state = 19;
							if (!var13_Aliases.MoveNext()) { state = 18; goto case 18; }
							var14_Identifier = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Identifier", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var13_Aliases.Current))));
							var15_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var3_state, Altova.CoreTypes.NodeToString(var14_Identifier), (new seq4_seq_())));
							var16_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var3_state, Altova.CoreTypes.NodeToString(var11_Identifier), var15_select_exists));
							var17_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var3_state, Altova.CoreTypes.NodeToString(var8_Identifier), var16_select_exists));
							var18_result = (var17_select_exists).GetEnumerator();
							goto case 19;
						case 18:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var13_Aliases); var13_Aliases = null;
							goto case 15;
						case 19:
							state = 19;
							if (!var18_result.MoveNext()) { state = 20; goto case 20; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box((string)(var18_result.Current)));
							pos++;
							return true;
						case 20:
							state = 17;
							Altova.Mapforce.MFEnumerator.Dispose(var18_result); var18_result = null;
							goto case 17;
						case 22:
							state = 24;
							if (!var19_WellboreGeology.MoveNext()) { state = 23; goto case 23; }
							var20_WellboreGeology = (closure.var2_WellboreGeology).GetEnumerator();
							goto case 24;
						case 23:
							state = 29;
							Altova.Mapforce.MFEnumerator.Dispose(var19_WellboreGeology); var19_WellboreGeology = null;
							var26_WellboreGeology = (closure.var2_WellboreGeology).GetEnumerator();
							goto case 29;
						case 24:
							state = 26;
							if (!var20_WellboreGeology.MoveNext()) { state = 25; goto case 25; }
							var21_cast = (Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var20_WellboreGeology.Current)))))));
							var22_join = new Altova.Functions.Core.SequenceCache((new seq5_join(closure.var2_WellboreGeology)));
							var23_value = new Altova.Functions.Core.SequenceCache((new seq6_join(var22_join, closure.var2_WellboreGeology, closure.var3_state)));
							Altova.Functions.Core.Exists(var23_value);
							var24_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var3_state, var21_cast, var23_value));
							var25_result = (var24_select_exists).GetEnumerator();
							goto case 26;
						case 25:
							state = 22;
							Altova.Mapforce.MFEnumerator.Dispose(var20_WellboreGeology); var20_WellboreGeology = null;
							goto case 22;
						case 26:
							state = 26;
							if (!var25_result.MoveNext()) { state = 27; goto case 27; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("nameWellbore", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box((string)(var25_result.Current)));
							pos++;
							return true;
						case 27:
							state = 24;
							Altova.Mapforce.MFEnumerator.Dispose(var25_result); var25_result = null;
							goto case 24;
						case 29:
							state = 31;
							if (!var26_WellboreGeology.MoveNext()) { state = 30; goto case 30; }
							var27_WellboreGeology = (closure.var2_WellboreGeology).GetEnumerator();
							goto case 31;
						case 30:
							state = 36;
							Altova.Mapforce.MFEnumerator.Dispose(var26_WellboreGeology); var26_WellboreGeology = null;
							var33_WellboreGeology = (closure.var2_WellboreGeology).GetEnumerator();
							goto case 36;
						case 31:
							state = 33;
							if (!var27_WellboreGeology.MoveNext()) { state = 32; goto case 32; }
							var28_cast = (Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var27_WellboreGeology.Current)))))));
							var29_join = new Altova.Functions.Core.SequenceCache((new seq11_join(closure.var2_WellboreGeology)));
							var30_value = new Altova.Functions.Core.SequenceCache((new seq10_join(var29_join, closure.var3_state)));
							Altova.Functions.Core.Exists(var30_value);
							var31_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var3_state, var28_cast, var30_value));
							var32_result = (var31_select_exists).GetEnumerator();
							goto case 33;
						case 32:
							state = 29;
							Altova.Mapforce.MFEnumerator.Dispose(var27_WellboreGeology); var27_WellboreGeology = null;
							goto case 29;
						case 33:
							state = 33;
							if (!var32_result.MoveNext()) { state = 34; goto case 34; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box((string)(var32_result.Current)));
							pos++;
							return true;
						case 34:
							state = 31;
							Altova.Mapforce.MFEnumerator.Dispose(var32_result); var32_result = null;
							goto case 31;
						case 36:
							state = 38;
							if (!var33_WellboreGeology.MoveNext()) { state = 37; goto case 37; }
							var34_WellboreGeology = (closure.var2_WellboreGeology).GetEnumerator();
							goto case 38;
						case 37:
							state = 43;
							Altova.Mapforce.MFEnumerator.Dispose(var33_WellboreGeology); var33_WellboreGeology = null;
							var41_WellboreGeology = (closure.var2_WellboreGeology).GetEnumerator();
							goto case 43;
						case 38:
							state = 40;
							if (!var34_WellboreGeology.MoveNext()) { state = 39; goto case 39; }
							var35_cast = (Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdTop", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var34_WellboreGeology.Current)))))))));
							var36_join = new Altova.Functions.Core.SequenceCache((new seq12_join(closure.var2_WellboreGeology)));
							var37_value = new Altova.Functions.Core.SequenceCache((new seq13_join(var36_join, closure.var3_state)));
							Altova.Functions.Core.Exists(var37_value);
							var38_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var3_state, var35_cast, var37_value));
							var39_result = (var38_select_exists).GetEnumerator();
							goto case 40;
						case 39:
							state = 36;
							Altova.Mapforce.MFEnumerator.Dispose(var34_WellboreGeology); var34_WellboreGeology = null;
							goto case 36;
						case 40:
							state = 40;
							if (!var39_result.MoveNext()) { state = 41; goto case 41; }
							var40_value = new Altova.Functions.Core.SequenceCache((new seq14_join(closure.var2_WellboreGeology, closure.var3_state, (string)(var39_result.Current))));
							Altova.Functions.Core.Exists(var40_value);
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("startMd", "http://www.witsml.org/schemas/1series"), var40_value);
							pos++;
							return true;
						case 41:
							state = 38;
							Altova.Mapforce.MFEnumerator.Dispose(var39_result); var39_result = null;
							goto case 38;
						case 43:
							state = 45;
							if (!var41_WellboreGeology.MoveNext()) { state = 44; goto case 44; }
							var42_WellboreGeology = (closure.var2_WellboreGeology).GetEnumerator();
							goto case 45;
						case 44:
							state = 50;
							Altova.Mapforce.MFEnumerator.Dispose(var41_WellboreGeology); var41_WellboreGeology = null;
							var49_WellboreGeology = (closure.var2_WellboreGeology).GetEnumerator();
							goto case 50;
						case 45:
							state = 47;
							if (!var42_WellboreGeology.MoveNext()) { state = 46; goto case 46; }
							var43_cast = (Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdBase", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var42_WellboreGeology.Current)))))))));
							var44_join = new Altova.Functions.Core.SequenceCache((new seq16_join(closure.var2_WellboreGeology)));
							var45_value = new Altova.Functions.Core.SequenceCache((new seq13_join(var44_join, closure.var3_state)));
							Altova.Functions.Core.Exists(var45_value);
							var46_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var3_state, var43_cast, var45_value));
							var47_result = (var46_select_exists).GetEnumerator();
							goto case 47;
						case 46:
							state = 43;
							Altova.Mapforce.MFEnumerator.Dispose(var42_WellboreGeology); var42_WellboreGeology = null;
							goto case 43;
						case 47:
							state = 47;
							if (!var47_result.MoveNext()) { state = 48; goto case 48; }
							var48_value = new Altova.Functions.Core.SequenceCache((new seq17_join(closure.var2_WellboreGeology, closure.var3_state, (string)(var47_result.Current))));
							Altova.Functions.Core.Exists(var48_value);
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("endMd", "http://www.witsml.org/schemas/1series"), var48_value);
							pos++;
							return true;
						case 48:
							state = 45;
							Altova.Mapforce.MFEnumerator.Dispose(var47_result); var47_result = null;
							goto case 45;
						case 50:
							state = 52;
							if (!var49_WellboreGeology.MoveNext()) { state = 51; goto case 51; }
							var50_InterpretedGeologyIn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("InterpretedGeologyIntervalSet", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var49_WellboreGeology.Current))).GetEnumerator();
							goto case 52;
						case 51:
							state = 57;
							Altova.Mapforce.MFEnumerator.Dispose(var49_WellboreGeology); var49_WellboreGeology = null;
							var53_WellboreGeology = (closure.var2_WellboreGeology).GetEnumerator();
							goto case 57;
						case 52:
							state = 54;
							if (!var50_InterpretedGeologyIn.MoveNext()) { state = 53; goto case 53; }
							var51_GeologicIntervalInte = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("GeologicIntervalInterpreted", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var50_InterpretedGeologyIn.Current))).GetEnumerator();
							goto case 54;
						case 53:
							state = 50;
							Altova.Mapforce.MFEnumerator.Dispose(var50_InterpretedGeologyIn); var50_InterpretedGeologyIn = null;
							goto case 50;
						case 54:
							state = 54;
							if (!var51_GeologicIntervalInte.MoveNext()) { state = 55; goto case 55; }
							var52_MdInterval = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var51_GeologicIntervalInte.Current))));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("geologyInterval", "http://www.witsml.org/schemas/1series"), (new seq19_join((Altova.Mapforce.IMFNode)(var51_GeologicIntervalInte.Current), var52_MdInterval)));
							pos++;
							return true;
						case 55:
							state = 52;
							Altova.Mapforce.MFEnumerator.Dispose(var51_GeologicIntervalInte); var51_GeologicIntervalInte = null;
							goto case 52;
						case 57:
							state = 59;
							if (!var53_WellboreGeology.MoveNext()) { state = 58; goto case 58; }
							var54_InterpretedGeologyIn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("InterpretedGeologyIntervalSet", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var53_WellboreGeology.Current))).GetEnumerator();
							goto case 59;
						case 58:
							state = 62;
							Altova.Mapforce.MFEnumerator.Dispose(var53_WellboreGeology); var53_WellboreGeology = null;
							var56_WellboreGeology = (closure.var2_WellboreGeology).GetEnumerator();
							goto case 62;
						case 59:
							state = 59;
							if (!var54_InterpretedGeologyIn.MoveNext()) { state = 60; goto case 60; }
							var55_MdInterval = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var54_InterpretedGeologyIn.Current))));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("geologyInterval", "http://www.witsml.org/schemas/1series"), (new seq24_join((Altova.Mapforce.IMFNode)(var54_InterpretedGeologyIn.Current), var55_MdInterval)));
							pos++;
							return true;
						case 60:
							state = 57;
							Altova.Mapforce.MFEnumerator.Dispose(var54_InterpretedGeologyIn); var54_InterpretedGeologyIn = null;
							goto case 57;
						case 62:
							state = 64;
							if (!var56_WellboreGeology.MoveNext()) { state = 63; goto case 63; }
							var57_CuttingsIntervalSet = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CuttingsIntervalSet", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var56_WellboreGeology.Current))).GetEnumerator();
							goto case 64;
						case 63:
							state = 69;
							Altova.Mapforce.MFEnumerator.Dispose(var56_WellboreGeology); var56_WellboreGeology = null;
							var61_value = new Altova.Functions.Core.SequenceCache((new seq37_join(closure.var1_join, closure.var2_WellboreGeology, closure.var3_state)));
							Altova.Functions.Core.Exists(var61_value);
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("commonData", "http://www.witsml.org/schemas/1series"), var61_value);
							pos++;
							return true;
						case 64:
							state = 66;
							if (!var57_CuttingsIntervalSet.MoveNext()) { state = 65; goto case 65; }
							var58_CuttingsInterval = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CuttingsInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var57_CuttingsIntervalSet.Current))).GetEnumerator();
							goto case 66;
						case 65:
							state = 62;
							Altova.Mapforce.MFEnumerator.Dispose(var57_CuttingsIntervalSet); var57_CuttingsIntervalSet = null;
							goto case 62;
						case 66:
							state = 66;
							if (!var58_CuttingsInterval.MoveNext()) { state = 67; goto case 67; }
							var59_CuttingsIntervalLith = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CuttingsIntervalLithology", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var58_CuttingsInterval.Current)));
							var60_MdInterval = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var58_CuttingsInterval.Current))));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("geologyInterval", "http://www.witsml.org/schemas/1series"), (new seq28_join((Altova.Mapforce.IMFNode)(var58_CuttingsInterval.Current), var59_CuttingsIntervalLith, var60_MdInterval, (Altova.Mapforce.IMFNode)(var57_CuttingsIntervalSet.Current))));
							pos++;
							return true;
						case 67:
							state = 64;
							Altova.Mapforce.MFEnumerator.Dispose(var58_CuttingsInterval); var58_CuttingsInterval = null;
							goto case 64;
						case 69:
							state = 70;
							var62_WellboreGeology = (closure.var2_WellboreGeology).GetEnumerator();
							goto case 70;
						case 70:
							state = 72;
							if (!var62_WellboreGeology.MoveNext()) { state = 71; goto case 71; }
							var63_ShowIntervalSet = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShowIntervalSet", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var62_WellboreGeology.Current))).GetEnumerator();
							goto case 72;
						case 71:
							state = 77;
							Altova.Mapforce.MFEnumerator.Dispose(var62_WellboreGeology); var62_WellboreGeology = null;
							var65_WellboreGeology = (closure.var2_WellboreGeology).GetEnumerator();
							goto case 77;
						case 72:
							state = 74;
							if (!var63_ShowIntervalSet.MoveNext()) { state = 73; goto case 73; }
							var64_CustomData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CustomData", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var63_ShowIntervalSet.Current))).GetEnumerator();
							goto case 74;
						case 73:
							state = 70;
							Altova.Mapforce.MFEnumerator.Dispose(var63_ShowIntervalSet); var63_ShowIntervalSet = null;
							goto case 70;
						case 74:
							state = 74;
							if (!var64_CustomData.MoveNext()) { state = 75; goto case 75; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), tbf.tbf9_cs_customData.Eval((Altova.Mapforce.IMFNode)(var64_CustomData.Current)));
							pos++;
							return true;
						case 75:
							state = 72;
							Altova.Mapforce.MFEnumerator.Dispose(var64_CustomData); var64_CustomData = null;
							goto case 72;
						case 77:
							state = 79;
							if (!var65_WellboreGeology.MoveNext()) { state = 78; goto case 78; }
							var66_CustomData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CustomData", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var65_WellboreGeology.Current))).GetEnumerator();
							goto case 79;
						case 78:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var65_WellboreGeology); var65_WellboreGeology = null;
							return false;
						case 79:
							state = 79;
							if (!var66_CustomData.MoveNext()) { state = 80; goto case 80; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), tbf.tbf9_cs_customData.Eval((Altova.Mapforce.IMFNode)(var66_CustomData.Current)));
							pos++;
							return true;
						case 80:
							state = 77;
							Altova.Mapforce.MFEnumerator.Dispose(var66_CustomData); var66_CustomData = null;
							goto case 77;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_UuidAuthority); var5_UuidAuthority = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_WellboreGeology); var4_WellboreGeology = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_result); var18_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_Aliases); var13_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_ShowIntervalSet); var12_ShowIntervalSet = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_Aliases); var10_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_CuttingsIntervalSet); var9_CuttingsIntervalSet = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_Aliases); var7_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_WellboreGeology); var6_WellboreGeology = null;
					Altova.Mapforce.MFEnumerator.Dispose(var25_result); var25_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_WellboreGeology); var20_WellboreGeology = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_WellboreGeology); var19_WellboreGeology = null;
					Altova.Mapforce.MFEnumerator.Dispose(var32_result); var32_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var27_WellboreGeology); var27_WellboreGeology = null;
					Altova.Mapforce.MFEnumerator.Dispose(var26_WellboreGeology); var26_WellboreGeology = null;
					Altova.Mapforce.MFEnumerator.Dispose(var39_result); var39_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var34_WellboreGeology); var34_WellboreGeology = null;
					Altova.Mapforce.MFEnumerator.Dispose(var33_WellboreGeology); var33_WellboreGeology = null;
					Altova.Mapforce.MFEnumerator.Dispose(var47_result); var47_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var42_WellboreGeology); var42_WellboreGeology = null;
					Altova.Mapforce.MFEnumerator.Dispose(var41_WellboreGeology); var41_WellboreGeology = null;
					Altova.Mapforce.MFEnumerator.Dispose(var51_GeologicIntervalInte); var51_GeologicIntervalInte = null;
					Altova.Mapforce.MFEnumerator.Dispose(var50_InterpretedGeologyIn); var50_InterpretedGeologyIn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var49_WellboreGeology); var49_WellboreGeology = null;
					Altova.Mapforce.MFEnumerator.Dispose(var54_InterpretedGeologyIn); var54_InterpretedGeologyIn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var53_WellboreGeology); var53_WellboreGeology = null;
					Altova.Mapforce.MFEnumerator.Dispose(var58_CuttingsInterval); var58_CuttingsInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var57_CuttingsIntervalSet); var57_CuttingsIntervalSet = null;
					Altova.Mapforce.MFEnumerator.Dispose(var56_WellboreGeology); var56_WellboreGeology = null;
					Altova.Mapforce.MFEnumerator.Dispose(var64_CustomData); var64_CustomData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var63_ShowIntervalSet); var63_ShowIntervalSet = null;
					Altova.Mapforce.MFEnumerator.Dispose(var62_WellboreGeology); var62_WellboreGeology = null;
					Altova.Mapforce.MFEnumerator.Dispose(var66_CustomData); var66_CustomData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var65_WellboreGeology); var65_WellboreGeology = null;
				}
			}
		}
		class seq4_seq_ : IEnumerable
		{

			public seq4_seq_(
			)
			{
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_seq_ closure;
				public Enumerator(seq4_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq5_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_WellboreGeology;

			public seq5_join(
				System.Collections.IEnumerable var1_WellboreGeology
			)
			{
				this.var1_WellboreGeology = var1_WellboreGeology;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_join closure;
				private IEnumerator var2_WellboreGeology;
				private IEnumerator var3_CuttingsIntervalSet;
				public Enumerator(seq5_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_WellboreGeology = (closure.var1_WellboreGeology).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_WellboreGeology.MoveNext()) { state = 3; goto case 3; }
							var3_CuttingsIntervalSet = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CuttingsIntervalSet", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_WellboreGeology.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
							return false;
						case 4:
							state = 4;
							if (!var3_CuttingsIntervalSet.MoveNext()) { state = 5; goto case 5; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_CuttingsIntervalSet.Current))))));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_CuttingsIntervalSet); var3_CuttingsIntervalSet = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_CuttingsIntervalSet); var3_CuttingsIntervalSet = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
				}
			}
		}
		class seq6_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_join;
			private readonly System.Collections.IEnumerable var2_WellboreGeology;
			private readonly Altova.Functions.RuntimeContext var3_state;

			public seq6_join(
				System.Collections.IEnumerable var1_join,
				System.Collections.IEnumerable var2_WellboreGeology,
				Altova.Functions.RuntimeContext var3_state
			)
			{
				this.var1_join = var1_join;
				this.var2_WellboreGeology = var2_WellboreGeology;
				this.var3_state = var3_state;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_join closure;
				private IEnumerator var4_join;
				private IEnumerator var5_join;
				private System.Collections.IEnumerable var6_join;
				private System.Collections.IEnumerable var7_value;
				private System.Collections.IEnumerable var8_select_exists;
				private IEnumerator var9_result;
				public Enumerator(seq6_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var4_join = (closure.var1_join).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var4_join.MoveNext()) { state = 3; goto case 3; }
							var5_join = (closure.var1_join).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_join); var4_join = null;
							return false;
						case 4:
							state = 6;
							if (!var5_join.MoveNext()) { state = 5; goto case 5; }
							var6_join = new Altova.Functions.Core.SequenceCache((new seq7_join(closure.var2_WellboreGeology)));
							var7_value = new Altova.Functions.Core.SequenceCache((new seq8_join(var6_join, closure.var2_WellboreGeology, closure.var3_state)));
							Altova.Functions.Core.Exists(var7_value);
							var8_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var3_state, (string)(var5_join.Current), var7_value));
							var9_result = (var8_select_exists).GetEnumerator();
							goto case 6;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var5_join); var5_join = null;
							goto case 2;
						case 6:
							state = 6;
							if (!var9_result.MoveNext()) { state = 7; goto case 7; }
							current = var9_result.Current;
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var9_result); var9_result = null;
							goto case 4;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var9_result); var9_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_join); var5_join = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_join); var4_join = null;
				}
			}
		}
		class seq7_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_WellboreGeology;

			public seq7_join(
				System.Collections.IEnumerable var1_WellboreGeology
			)
			{
				this.var1_WellboreGeology = var1_WellboreGeology;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_join closure;
				private IEnumerator var2_WellboreGeology;
				private IEnumerator var3_InterpretedGeologyIn;
				public Enumerator(seq7_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_WellboreGeology = (closure.var1_WellboreGeology).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_WellboreGeology.MoveNext()) { state = 3; goto case 3; }
							var3_InterpretedGeologyIn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("InterpretedGeologyIntervalSet", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_WellboreGeology.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
							return false;
						case 4:
							state = 4;
							if (!var3_InterpretedGeologyIn.MoveNext()) { state = 5; goto case 5; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_InterpretedGeologyIn.Current))))));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_InterpretedGeologyIn); var3_InterpretedGeologyIn = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_InterpretedGeologyIn); var3_InterpretedGeologyIn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
				}
			}
		}
		class seq8_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_join;
			private readonly System.Collections.IEnumerable var2_WellboreGeology;
			private readonly Altova.Functions.RuntimeContext var3_state;

			public seq8_join(
				System.Collections.IEnumerable var1_join,
				System.Collections.IEnumerable var2_WellboreGeology,
				Altova.Functions.RuntimeContext var3_state
			)
			{
				this.var1_join = var1_join;
				this.var2_WellboreGeology = var2_WellboreGeology;
				this.var3_state = var3_state;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq8_join closure;
				private IEnumerator var4_join;
				private IEnumerator var5_join;
				private System.Collections.IEnumerable var6_join;
				private System.Collections.IEnumerable var7_value;
				private System.Collections.IEnumerable var8_select_exists;
				private IEnumerator var9_result;
				public Enumerator(seq8_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var4_join = (closure.var1_join).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var4_join.MoveNext()) { state = 3; goto case 3; }
							var5_join = (closure.var1_join).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_join); var4_join = null;
							return false;
						case 4:
							state = 6;
							if (!var5_join.MoveNext()) { state = 5; goto case 5; }
							var6_join = new Altova.Functions.Core.SequenceCache((new seq9_join(closure.var2_WellboreGeology)));
							var7_value = new Altova.Functions.Core.SequenceCache((new seq10_join(var6_join, closure.var3_state)));
							Altova.Functions.Core.Exists(var7_value);
							var8_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var3_state, (string)(var5_join.Current), var7_value));
							var9_result = (var8_select_exists).GetEnumerator();
							goto case 6;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var5_join); var5_join = null;
							goto case 2;
						case 6:
							state = 6;
							if (!var9_result.MoveNext()) { state = 7; goto case 7; }
							current = var9_result.Current;
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var9_result); var9_result = null;
							goto case 4;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var9_result); var9_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_join); var5_join = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_join); var4_join = null;
				}
			}
		}
		class seq9_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_WellboreGeology;

			public seq9_join(
				System.Collections.IEnumerable var1_WellboreGeology
			)
			{
				this.var1_WellboreGeology = var1_WellboreGeology;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq9_join closure;
				private IEnumerator var2_WellboreGeology;
				private IEnumerator var3_ShowIntervalSet;
				public Enumerator(seq9_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_WellboreGeology = (closure.var1_WellboreGeology).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_WellboreGeology.MoveNext()) { state = 3; goto case 3; }
							var3_ShowIntervalSet = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShowIntervalSet", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_WellboreGeology.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
							return false;
						case 4:
							state = 4;
							if (!var3_ShowIntervalSet.MoveNext()) { state = 5; goto case 5; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_ShowIntervalSet.Current))))));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_ShowIntervalSet); var3_ShowIntervalSet = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_ShowIntervalSet); var3_ShowIntervalSet = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
				}
			}
		}
		class seq10_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_join;
			private readonly Altova.Functions.RuntimeContext var2_state;

			public seq10_join(
				System.Collections.IEnumerable var1_join,
				Altova.Functions.RuntimeContext var2_state
			)
			{
				this.var1_join = var1_join;
				this.var2_state = var2_state;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq10_join closure;
				private IEnumerator var3_join;
				private IEnumerator var4_join;
				private System.Collections.IEnumerable var5_select_exists;
				private IEnumerator var6_result;
				public Enumerator(seq10_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_join = (closure.var1_join).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var3_join.MoveNext()) { state = 3; goto case 3; }
							var4_join = (closure.var1_join).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_join); var3_join = null;
							return false;
						case 4:
							state = 6;
							if (!var4_join.MoveNext()) { state = 5; goto case 5; }
							var5_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var2_state, (string)(var4_join.Current), (new seq4_seq_())));
							var6_result = (var5_select_exists).GetEnumerator();
							goto case 6;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var4_join); var4_join = null;
							goto case 2;
						case 6:
							state = 6;
							if (!var6_result.MoveNext()) { state = 7; goto case 7; }
							current = var6_result.Current;
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var6_result); var6_result = null;
							goto case 4;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var6_result); var6_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_join); var4_join = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_join); var3_join = null;
				}
			}
		}
		class seq11_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_WellboreGeology;

			public seq11_join(
				System.Collections.IEnumerable var1_WellboreGeology
			)
			{
				this.var1_WellboreGeology = var1_WellboreGeology;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq11_join closure;
				private IEnumerator var2_WellboreGeology;
				private IEnumerator var3_InterpretedGeologyIn;
				public Enumerator(seq11_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_WellboreGeology = (closure.var1_WellboreGeology).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_WellboreGeology.MoveNext()) { state = 3; goto case 3; }
							var3_InterpretedGeologyIn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("InterpretedGeologyIntervalSet", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_WellboreGeology.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
							return false;
						case 4:
							state = 4;
							if (!var3_InterpretedGeologyIn.MoveNext()) { state = 5; goto case 5; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var3_InterpretedGeologyIn.Current))))));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_InterpretedGeologyIn); var3_InterpretedGeologyIn = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_InterpretedGeologyIn); var3_InterpretedGeologyIn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
				}
			}
		}
		class seq12_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_WellboreGeology;

			public seq12_join(
				System.Collections.IEnumerable var1_WellboreGeology
			)
			{
				this.var1_WellboreGeology = var1_WellboreGeology;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq12_join closure;
				private IEnumerator var2_WellboreGeology;
				private IEnumerator var3_CuttingsIntervalSet;
				public Enumerator(seq12_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_WellboreGeology = (closure.var1_WellboreGeology).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_WellboreGeology.MoveNext()) { state = 3; goto case 3; }
							var3_CuttingsIntervalSet = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CuttingsIntervalSet", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_WellboreGeology.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
							return false;
						case 4:
							state = 4;
							if (!var3_CuttingsIntervalSet.MoveNext()) { state = 5; goto case 5; }
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdTop", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_CuttingsIntervalSet.Current))))))));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_CuttingsIntervalSet); var3_CuttingsIntervalSet = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_CuttingsIntervalSet); var3_CuttingsIntervalSet = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
				}
			}
		}
		class seq13_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_join;
			private readonly Altova.Functions.RuntimeContext var2_state;

			public seq13_join(
				System.Collections.IEnumerable var1_join,
				Altova.Functions.RuntimeContext var2_state
			)
			{
				this.var1_join = var1_join;
				this.var2_state = var2_state;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq13_join closure;
				private IEnumerator var3_join;
				private IEnumerator var4_join;
				private System.Collections.IEnumerable var5_select_exists;
				private IEnumerator var6_result;
				public Enumerator(seq13_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_join = (closure.var1_join).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var3_join.MoveNext()) { state = 3; goto case 3; }
							var4_join = (closure.var1_join).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_join); var3_join = null;
							return false;
						case 4:
							state = 6;
							if (!var4_join.MoveNext()) { state = 5; goto case 5; }
							var5_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var2_state, (string)(var4_join.Current), (new seq4_seq_())));
							var6_result = (var5_select_exists).GetEnumerator();
							goto case 6;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var4_join); var4_join = null;
							goto case 2;
						case 6:
							state = 6;
							if (!var6_result.MoveNext()) { state = 7; goto case 7; }
							current = var6_result.Current;
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var6_result); var6_result = null;
							goto case 4;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var6_result); var6_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_join); var4_join = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_join); var3_join = null;
				}
			}
		}
		class seq14_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_WellboreGeology;
			private readonly Altova.Functions.RuntimeContext var2_state;
			private readonly string var3_cur;

			public seq14_join(
				System.Collections.IEnumerable var1_WellboreGeology,
				Altova.Functions.RuntimeContext var2_state,
				string var3_cur
			)
			{
				this.var1_WellboreGeology = var1_WellboreGeology;
				this.var2_state = var2_state;
				this.var3_cur = var3_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq14_join closure;
				private IEnumerator var4_WellboreGeology;
				private IEnumerator var5_WellboreGeology;
				private string var6_cast;
				private System.Collections.IEnumerable var7_join;
				private System.Collections.IEnumerable var8_value;
				private System.Collections.IEnumerable var9_select_exists;
				private IEnumerator var10_result;
				public Enumerator(seq14_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var4_WellboreGeology = (closure.var1_WellboreGeology).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var4_WellboreGeology.MoveNext()) { state = 3; goto case 3; }
							var5_WellboreGeology = (closure.var1_WellboreGeology).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_WellboreGeology); var4_WellboreGeology = null;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(closure.var3_cur));
							pos++;
							return true;
						case 4:
							state = 6;
							if (!var5_WellboreGeology.MoveNext()) { state = 5; goto case 5; }
							var6_cast = (Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdTop", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var5_WellboreGeology.Current)))))))));
							var7_join = new Altova.Functions.Core.SequenceCache((new seq15_join(closure.var1_WellboreGeology)));
							var8_value = new Altova.Functions.Core.SequenceCache((new seq10_join(var7_join, closure.var2_state)));
							Altova.Functions.Core.Exists(var8_value);
							var9_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var2_state, var6_cast, var8_value));
							var10_result = (var9_select_exists).GetEnumerator();
							goto case 6;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var5_WellboreGeology); var5_WellboreGeology = null;
							goto case 2;
						case 6:
							state = 6;
							if (!var10_result.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box((string)(var10_result.Current)));
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var10_result); var10_result = null;
							goto case 4;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var10_result); var10_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_WellboreGeology); var5_WellboreGeology = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_WellboreGeology); var4_WellboreGeology = null;
				}
			}
		}
		class seq15_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_WellboreGeology;

			public seq15_join(
				System.Collections.IEnumerable var1_WellboreGeology
			)
			{
				this.var1_WellboreGeology = var1_WellboreGeology;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq15_join closure;
				private IEnumerator var2_WellboreGeology;
				private IEnumerator var3_CuttingsIntervalSet;
				public Enumerator(seq15_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_WellboreGeology = (closure.var1_WellboreGeology).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_WellboreGeology.MoveNext()) { state = 3; goto case 3; }
							var3_CuttingsIntervalSet = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CuttingsIntervalSet", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_WellboreGeology.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
							return false;
						case 4:
							state = 4;
							if (!var3_CuttingsIntervalSet.MoveNext()) { state = 5; goto case 5; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdTop", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_CuttingsIntervalSet.Current))))))));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_CuttingsIntervalSet); var3_CuttingsIntervalSet = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_CuttingsIntervalSet); var3_CuttingsIntervalSet = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
				}
			}
		}
		class seq16_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_WellboreGeology;

			public seq16_join(
				System.Collections.IEnumerable var1_WellboreGeology
			)
			{
				this.var1_WellboreGeology = var1_WellboreGeology;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq16_join closure;
				private IEnumerator var2_WellboreGeology;
				private IEnumerator var3_CuttingsIntervalSet;
				public Enumerator(seq16_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_WellboreGeology = (closure.var1_WellboreGeology).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_WellboreGeology.MoveNext()) { state = 3; goto case 3; }
							var3_CuttingsIntervalSet = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CuttingsIntervalSet", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_WellboreGeology.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
							return false;
						case 4:
							state = 4;
							if (!var3_CuttingsIntervalSet.MoveNext()) { state = 5; goto case 5; }
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdBase", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_CuttingsIntervalSet.Current))))))));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_CuttingsIntervalSet); var3_CuttingsIntervalSet = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_CuttingsIntervalSet); var3_CuttingsIntervalSet = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
				}
			}
		}
		class seq17_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_WellboreGeology;
			private readonly Altova.Functions.RuntimeContext var2_state;
			private readonly string var3_cur;

			public seq17_join(
				System.Collections.IEnumerable var1_WellboreGeology,
				Altova.Functions.RuntimeContext var2_state,
				string var3_cur
			)
			{
				this.var1_WellboreGeology = var1_WellboreGeology;
				this.var2_state = var2_state;
				this.var3_cur = var3_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq17_join closure;
				private IEnumerator var4_WellboreGeology;
				private IEnumerator var5_WellboreGeology;
				private string var6_cast;
				private System.Collections.IEnumerable var7_join;
				private System.Collections.IEnumerable var8_value;
				private System.Collections.IEnumerable var9_select_exists;
				private IEnumerator var10_result;
				public Enumerator(seq17_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var4_WellboreGeology = (closure.var1_WellboreGeology).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var4_WellboreGeology.MoveNext()) { state = 3; goto case 3; }
							var5_WellboreGeology = (closure.var1_WellboreGeology).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_WellboreGeology); var4_WellboreGeology = null;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(closure.var3_cur));
							pos++;
							return true;
						case 4:
							state = 6;
							if (!var5_WellboreGeology.MoveNext()) { state = 5; goto case 5; }
							var6_cast = (Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdBase", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var5_WellboreGeology.Current)))))))));
							var7_join = new Altova.Functions.Core.SequenceCache((new seq18_join(closure.var1_WellboreGeology)));
							var8_value = new Altova.Functions.Core.SequenceCache((new seq10_join(var7_join, closure.var2_state)));
							Altova.Functions.Core.Exists(var8_value);
							var9_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var2_state, var6_cast, var8_value));
							var10_result = (var9_select_exists).GetEnumerator();
							goto case 6;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var5_WellboreGeology); var5_WellboreGeology = null;
							goto case 2;
						case 6:
							state = 6;
							if (!var10_result.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box((string)(var10_result.Current)));
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var10_result); var10_result = null;
							goto case 4;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var10_result); var10_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_WellboreGeology); var5_WellboreGeology = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_WellboreGeology); var4_WellboreGeology = null;
				}
			}
		}
		class seq18_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_WellboreGeology;

			public seq18_join(
				System.Collections.IEnumerable var1_WellboreGeology
			)
			{
				this.var1_WellboreGeology = var1_WellboreGeology;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq18_join closure;
				private IEnumerator var2_WellboreGeology;
				private IEnumerator var3_CuttingsIntervalSet;
				public Enumerator(seq18_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_WellboreGeology = (closure.var1_WellboreGeology).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_WellboreGeology.MoveNext()) { state = 3; goto case 3; }
							var3_CuttingsIntervalSet = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CuttingsIntervalSet", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_WellboreGeology.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
							return false;
						case 4:
							state = 4;
							if (!var3_CuttingsIntervalSet.MoveNext()) { state = 5; goto case 5; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdBase", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_CuttingsIntervalSet.Current))))))));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_CuttingsIntervalSet); var3_CuttingsIntervalSet = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_CuttingsIntervalSet); var3_CuttingsIntervalSet = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
				}
			}
		}
		class seq19_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq19_join(
				Altova.Mapforce.IMFNode var1_cur,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_cur = var1_cur;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq19_join closure;
				private IEnumerator var3_Aliases;
				private IEnumerator var4_InterpretedLithology;
				private IEnumerator var5_LithostratigraphicUn;
				private IEnumerator var6_GeochronologicalUnit;
				public Enumerator(seq19_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_Aliases = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_Aliases.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Identifier", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var3_Aliases.Current))))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Aliases); var3_Aliases = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdTop", "http://www.witsml.org/schemas/1series"), (new seq20_join(closure.var2_cur)));
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdBottom", "http://www.witsml.org/schemas/1series"), (new seq21_join(closure.var2_cur)));
							pos++;
							return true;
						case 6:
							state = 7;
							var4_InterpretedLithology = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("InterpretedLithology", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var4_InterpretedLithology.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("lithology", "http://www.witsml.org/schemas/1series"), (new seq22_join((Altova.Mapforce.IMFNode)(var4_InterpretedLithology.Current))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var4_InterpretedLithology); var4_InterpretedLithology = null;
							var5_LithostratigraphicUn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LithostratigraphicUnit", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var5_LithostratigraphicUn.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("lithostratigraphic", "http://www.witsml.org/schemas/1series"), (new seq23_seq_((Altova.Mapforce.IMFNode)(var5_LithostratigraphicUn.Current))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var5_LithostratigraphicUn); var5_LithostratigraphicUn = null;
							var6_GeochronologicalUnit = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("GeochronologicalUnit", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var6_GeochronologicalUnit.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("chronostratigraphic", "http://www.witsml.org/schemas/1series"), (new seq23_seq_((Altova.Mapforce.IMFNode)(var6_GeochronologicalUnit.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var6_GeochronologicalUnit); var6_GeochronologicalUnit = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Aliases); var3_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_InterpretedLithology); var4_InterpretedLithology = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_LithostratigraphicUn); var5_LithostratigraphicUn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_GeochronologicalUnit); var6_GeochronologicalUnit = null;
				}
			}
		}
		class seq20_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq20_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq20_join closure;
				private Altova.Mapforce.IMFNode var2_MdTop;
				public Enumerator(seq20_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_MdTop = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdTop", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_MdTop)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_MdTop)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq21_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq21_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq21_join closure;
				private Altova.Mapforce.IMFNode var2_MdBase;
				public Enumerator(seq21_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_MdBase = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdBase", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_MdBase)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_MdBase)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq22_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq22_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq22_join closure;
				private IEnumerator var2_uid;
				private IEnumerator var3_CodeLith;
				private IEnumerator var4_Color;
				private IEnumerator var5_Texture;
				private IEnumerator var6_Hardness;
				private IEnumerator var7_Compaction;
				private IEnumerator var8_SizeGrain;
				private IEnumerator var9_Roundness;
				private IEnumerator var10_Sphericity;
				private IEnumerator var11_Sorting;
				private IEnumerator var12_MatrixCement;
				private IEnumerator var13_PorosityVisible;
				private IEnumerator var14_PorosityFabric;
				private IEnumerator var15_Permeability;
				public Enumerator(seq22_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
							var3_CodeLith = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CodeLith", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_CodeLith.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("codeLith", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_CodeLith.Current))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var3_CodeLith); var3_CodeLith = null;
							var4_Color = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Color", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var4_Color.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("color", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_Color.Current))));
							pos++;
							return true;
						case 9:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var4_Color); var4_Color = null;
							var5_Texture = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Texture", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var5_Texture.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("texture", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_Texture.Current))));
							pos++;
							return true;
						case 12:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Texture); var5_Texture = null;
							var6_Hardness = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Hardness", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 14;
						case 14:
							state = 14;
							if (!var6_Hardness.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("hardness", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_Hardness.Current))));
							pos++;
							return true;
						case 15:
							state = 17;
							Altova.Mapforce.MFEnumerator.Dispose(var6_Hardness); var6_Hardness = null;
							var7_Compaction = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Compaction", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 17;
						case 17:
							state = 17;
							if (!var7_Compaction.MoveNext()) { state = 18; goto case 18; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("compaction", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_Compaction.Current))));
							pos++;
							return true;
						case 18:
							state = 20;
							Altova.Mapforce.MFEnumerator.Dispose(var7_Compaction); var7_Compaction = null;
							var8_SizeGrain = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SizeGrain", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 20;
						case 20:
							state = 20;
							if (!var8_SizeGrain.MoveNext()) { state = 21; goto case 21; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("sizeGrain", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_SizeGrain.Current))));
							pos++;
							return true;
						case 21:
							state = 23;
							Altova.Mapforce.MFEnumerator.Dispose(var8_SizeGrain); var8_SizeGrain = null;
							var9_Roundness = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Roundness", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 23;
						case 23:
							state = 23;
							if (!var9_Roundness.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("roundness", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var9_Roundness.Current))));
							pos++;
							return true;
						case 24:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var9_Roundness); var9_Roundness = null;
							var10_Sphericity = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Sphericity", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 26;
						case 26:
							state = 26;
							if (!var10_Sphericity.MoveNext()) { state = 27; goto case 27; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("sphericity", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var10_Sphericity.Current))));
							pos++;
							return true;
						case 27:
							state = 29;
							Altova.Mapforce.MFEnumerator.Dispose(var10_Sphericity); var10_Sphericity = null;
							var11_Sorting = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Sorting", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 29;
						case 29:
							state = 29;
							if (!var11_Sorting.MoveNext()) { state = 30; goto case 30; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("sorting", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var11_Sorting.Current))));
							pos++;
							return true;
						case 30:
							state = 32;
							Altova.Mapforce.MFEnumerator.Dispose(var11_Sorting); var11_Sorting = null;
							var12_MatrixCement = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MatrixCement", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 32;
						case 32:
							state = 32;
							if (!var12_MatrixCement.MoveNext()) { state = 33; goto case 33; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("matrixCement", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var12_MatrixCement.Current))));
							pos++;
							return true;
						case 33:
							state = 35;
							Altova.Mapforce.MFEnumerator.Dispose(var12_MatrixCement); var12_MatrixCement = null;
							var13_PorosityVisible = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PorosityVisible", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 35;
						case 35:
							state = 35;
							if (!var13_PorosityVisible.MoveNext()) { state = 36; goto case 36; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("porosityVisible", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_PorosityVisible.Current))));
							pos++;
							return true;
						case 36:
							state = 38;
							Altova.Mapforce.MFEnumerator.Dispose(var13_PorosityVisible); var13_PorosityVisible = null;
							var14_PorosityFabric = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PorosityFabric", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 38;
						case 38:
							state = 38;
							if (!var14_PorosityFabric.MoveNext()) { state = 39; goto case 39; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("porosityFabric", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var14_PorosityFabric.Current))));
							pos++;
							return true;
						case 39:
							state = 41;
							Altova.Mapforce.MFEnumerator.Dispose(var14_PorosityFabric); var14_PorosityFabric = null;
							var15_Permeability = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Permeability", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 41;
						case 41:
							state = 41;
							if (!var15_Permeability.MoveNext()) { state = 42; goto case 42; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("permeability", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var15_Permeability.Current))));
							pos++;
							return true;
						case 42:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var15_Permeability); var15_Permeability = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_CodeLith); var3_CodeLith = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_Color); var4_Color = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Texture); var5_Texture = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_Hardness); var6_Hardness = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_Compaction); var7_Compaction = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_SizeGrain); var8_SizeGrain = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_Roundness); var9_Roundness = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_Sphericity); var10_Sphericity = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_Sorting); var11_Sorting = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_MatrixCement); var12_MatrixCement = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_PorosityVisible); var13_PorosityVisible = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_PorosityFabric); var14_PorosityFabric = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_Permeability); var15_Permeability = null;
				}
			}
		}
		class seq23_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq23_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq23_seq_ closure;
				public Enumerator(seq23_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("kind", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("kind", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.NodeToString(closure.var1_cur);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq24_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq24_join(
				Altova.Mapforce.IMFNode var1_cur,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_cur = var1_cur;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq24_join closure;
				private IEnumerator var3_Aliases;
				private IEnumerator var4_ExtensionNameValue;
				public Enumerator(seq24_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_Aliases = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_Aliases.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Identifier", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var3_Aliases.Current))))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Aliases); var3_Aliases = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdTop", "http://www.witsml.org/schemas/1series"), (new seq25_join(closure.var2_cur)));
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdBottom", "http://www.witsml.org/schemas/1series"), (new seq26_join(closure.var2_cur)));
							pos++;
							return true;
						case 6:
							state = 7;
							var4_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var4_ExtensionNameValue.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (new seq27_join((Altova.Mapforce.IMFNode)(var4_ExtensionNameValue.Current))));
							pos++;
							return true;
						case 8:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_ExtensionNameValue); var4_ExtensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Aliases); var3_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_ExtensionNameValue); var4_ExtensionNameValue = null;
				}
			}
		}
		class seq25_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq25_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq25_join closure;
				private Altova.Mapforce.IMFNode var2_MdTop;
				public Enumerator(seq25_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_MdTop = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdTop", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_MdTop)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_MdTop)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq26_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq26_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq26_join closure;
				private Altova.Mapforce.IMFNode var2_MdBase;
				public Enumerator(seq26_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_MdBase = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdBase", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_MdBase)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_MdBase)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq27_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq27_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq27_join closure;
				private IEnumerator var2_DTim;
				private IEnumerator var3_Index;
				private IEnumerator var4_MeasureClass;
				private IEnumerator var5_Description;
				public Enumerator(seq27_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), tbf.tbf1_extensionvalue.Eval((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Value", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur))));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_DTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTim", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var2_DTim.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_DTim.Current))))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_DTim); var2_DTim = null;
							var3_Index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Index", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var3_Index.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_Index.Current))))))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
							var4_MeasureClass = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_MeasureClass.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_MeasureClass.Current))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_MeasureClass); var4_MeasureClass = null;
							var5_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_Description.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_Description.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_DTim); var2_DTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_MeasureClass); var4_MeasureClass = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
				}
			}
		}
		class seq28_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_CuttingsIntervalLith;
			private readonly Altova.Mapforce.IMFNode var3_MdInterval;
			private readonly Altova.Mapforce.IMFNode var4_cur;

			public seq28_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_CuttingsIntervalLith,
				Altova.Mapforce.IMFNode var3_MdInterval,
				Altova.Mapforce.IMFNode var4_cur
			)
			{
				this.var1_cur = var1_cur;
				this.var2_CuttingsIntervalLith = var2_CuttingsIntervalLith;
				this.var3_MdInterval = var3_MdInterval;
				this.var4_cur = var4_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq28_join closure;
				private IEnumerator var5_CuttingsIntervalLith;
				private IEnumerator var6_CuttingsIntervalLith;
				private IEnumerator var7_Shows;
				private IEnumerator var8_DensBulk;
				private IEnumerator var9_DensShale;
				private IEnumerator var10_Calcite;
				private IEnumerator var11_Dolomite;
				private IEnumerator var12_Cec;
				private IEnumerator var13_Qft;
				private IEnumerator var14_CalcStab;
				private IEnumerator var15_SizeMin;
				private IEnumerator var16_SizeMax;
				private IEnumerator var17_CleaningMethod;
				private IEnumerator var18_DryingMethod;
				public Enumerator(seq28_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdTop", "http://www.witsml.org/schemas/1series"), (new seq29_join(closure.var3_MdInterval)));
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdBottom", "http://www.witsml.org/schemas/1series"), (new seq30_join(closure.var3_MdInterval)));
							pos++;
							return true;
						case 4:
							state = 5;
							var5_CuttingsIntervalLith = (closure.var2_CuttingsIntervalLith).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var5_CuttingsIntervalLith.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("lithology", "http://www.witsml.org/schemas/1series"), (new seq31_join((Altova.Mapforce.IMFNode)(var5_CuttingsIntervalLith.Current), closure.var4_cur)));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var5_CuttingsIntervalLith); var5_CuttingsIntervalLith = null;
							var6_CuttingsIntervalLith = (closure.var2_CuttingsIntervalLith).GetEnumerator();
							goto case 8;
						case 8:
							state = 10;
							if (!var6_CuttingsIntervalLith.MoveNext()) { state = 9; goto case 9; }
							var7_Shows = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Shows", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var6_CuttingsIntervalLith.Current))).GetEnumerator();
							goto case 10;
						case 9:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var6_CuttingsIntervalLith); var6_CuttingsIntervalLith = null;
							var8_DensBulk = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DensBulk", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 10:
							state = 10;
							if (!var7_Shows.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("show", "http://www.witsml.org/schemas/1series"), (new seq36_join((Altova.Mapforce.IMFNode)(var7_Shows.Current))));
							pos++;
							return true;
						case 11:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var7_Shows); var7_Shows = null;
							goto case 8;
						case 13:
							state = 13;
							if (!var8_DensBulk.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("densBulk", "http://www.witsml.org/schemas/1series"), tbf.tbf4_densityMeasure.Eval((Altova.Mapforce.IMFNode)(var8_DensBulk.Current)));
							pos++;
							return true;
						case 14:
							state = 16;
							Altova.Mapforce.MFEnumerator.Dispose(var8_DensBulk); var8_DensBulk = null;
							var9_DensShale = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DensShale", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 16;
						case 16:
							state = 16;
							if (!var9_DensShale.MoveNext()) { state = 17; goto case 17; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("densShale", "http://www.witsml.org/schemas/1series"), tbf.tbf4_densityMeasure.Eval((Altova.Mapforce.IMFNode)(var9_DensShale.Current)));
							pos++;
							return true;
						case 17:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var9_DensShale); var9_DensShale = null;
							var10_Calcite = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Calcite", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 19;
						case 19:
							state = 19;
							if (!var10_Calcite.MoveNext()) { state = 20; goto case 20; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("calcite", "http://www.witsml.org/schemas/1series"), tbf.tbf5_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var10_Calcite.Current)));
							pos++;
							return true;
						case 20:
							state = 22;
							Altova.Mapforce.MFEnumerator.Dispose(var10_Calcite); var10_Calcite = null;
							var11_Dolomite = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Dolomite", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 22;
						case 22:
							state = 22;
							if (!var11_Dolomite.MoveNext()) { state = 23; goto case 23; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dolomite", "http://www.witsml.org/schemas/1series"), tbf.tbf5_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var11_Dolomite.Current)));
							pos++;
							return true;
						case 23:
							state = 25;
							Altova.Mapforce.MFEnumerator.Dispose(var11_Dolomite); var11_Dolomite = null;
							var12_Cec = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Cec", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 25;
						case 25:
							state = 25;
							if (!var12_Cec.MoveNext()) { state = 26; goto case 26; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("cec", "http://www.witsml.org/schemas/1series"), tbf.tbf6_equivalentPerMassMeasure.Eval((Altova.Mapforce.IMFNode)(var12_Cec.Current)));
							pos++;
							return true;
						case 26:
							state = 28;
							Altova.Mapforce.MFEnumerator.Dispose(var12_Cec); var12_Cec = null;
							var13_Qft = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Qft", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 28;
						case 28:
							state = 28;
							if (!var13_Qft.MoveNext()) { state = 29; goto case 29; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("qft", "http://www.witsml.org/schemas/1series"), tbf.tbf7_illuminanceMeasure.Eval((Altova.Mapforce.IMFNode)(var13_Qft.Current)));
							pos++;
							return true;
						case 29:
							state = 31;
							Altova.Mapforce.MFEnumerator.Dispose(var13_Qft); var13_Qft = null;
							var14_CalcStab = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CalcStab", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 31;
						case 31:
							state = 31;
							if (!var14_CalcStab.MoveNext()) { state = 32; goto case 32; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("calcStab", "http://www.witsml.org/schemas/1series"), tbf.tbf5_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var14_CalcStab.Current)));
							pos++;
							return true;
						case 32:
							state = 34;
							Altova.Mapforce.MFEnumerator.Dispose(var14_CalcStab); var14_CalcStab = null;
							var15_SizeMin = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SizeMin", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 34;
						case 34:
							state = 34;
							if (!var15_SizeMin.MoveNext()) { state = 35; goto case 35; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("sizeMn", "http://www.witsml.org/schemas/1series"), tbf.tbf8_lengthMeasure.Eval((Altova.Mapforce.IMFNode)(var15_SizeMin.Current)));
							pos++;
							return true;
						case 35:
							state = 37;
							Altova.Mapforce.MFEnumerator.Dispose(var15_SizeMin); var15_SizeMin = null;
							var16_SizeMax = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SizeMax", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 37;
						case 37:
							state = 37;
							if (!var16_SizeMax.MoveNext()) { state = 38; goto case 38; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("sizeMx", "http://www.witsml.org/schemas/1series"), tbf.tbf8_lengthMeasure.Eval((Altova.Mapforce.IMFNode)(var16_SizeMax.Current)));
							pos++;
							return true;
						case 38:
							state = 40;
							Altova.Mapforce.MFEnumerator.Dispose(var16_SizeMax); var16_SizeMax = null;
							var17_CleaningMethod = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CleaningMethod", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 40;
						case 40:
							state = 40;
							if (!var17_CleaningMethod.MoveNext()) { state = 41; goto case 41; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("cleaningMethod", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var17_CleaningMethod.Current))));
							pos++;
							return true;
						case 41:
							state = 43;
							Altova.Mapforce.MFEnumerator.Dispose(var17_CleaningMethod); var17_CleaningMethod = null;
							var18_DryingMethod = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DryingMethod", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 43;
						case 43:
							state = 43;
							if (!var18_DryingMethod.MoveNext()) { state = 44; goto case 44; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dryingMethod", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var18_DryingMethod.Current))));
							pos++;
							return true;
						case 44:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var18_DryingMethod); var18_DryingMethod = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_CuttingsIntervalLith); var5_CuttingsIntervalLith = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_Shows); var7_Shows = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_CuttingsIntervalLith); var6_CuttingsIntervalLith = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_DensBulk); var8_DensBulk = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_DensShale); var9_DensShale = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_Calcite); var10_Calcite = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_Dolomite); var11_Dolomite = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_Cec); var12_Cec = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_Qft); var13_Qft = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_CalcStab); var14_CalcStab = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_SizeMin); var15_SizeMin = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_SizeMax); var16_SizeMax = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_CleaningMethod); var17_CleaningMethod = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_DryingMethod); var18_DryingMethod = null;
				}
			}
		}
		class seq29_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_MdInterval;

			public seq29_join(
				Altova.Mapforce.IMFNode var1_MdInterval
			)
			{
				this.var1_MdInterval = var1_MdInterval;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq29_join closure;
				private Altova.Mapforce.IMFNode var2_MdTop;
				public Enumerator(seq29_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_MdTop = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdTop", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_MdInterval)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_MdTop)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_MdTop)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq30_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_MdInterval;

			public seq30_join(
				Altova.Mapforce.IMFNode var1_MdInterval
			)
			{
				this.var1_MdInterval = var1_MdInterval;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq30_join closure;
				private Altova.Mapforce.IMFNode var2_MdBase;
				public Enumerator(seq30_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_MdBase = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdBase", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_MdInterval)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_MdBase)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_MdBase)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq31_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq31_join(
				Altova.Mapforce.IMFNode var1_cur,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_cur = var1_cur;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq31_join closure;
				private IEnumerator var3_uid;
				private IEnumerator var4_CodeLith;
				private IEnumerator var5_Citation;
				private IEnumerator var6_Description;
				private IEnumerator var7_Color;
				private IEnumerator var8_Texture;
				private IEnumerator var9_Hardness;
				private IEnumerator var10_Compaction;
				private IEnumerator var11_SizeGrain;
				private IEnumerator var12_Roundness;
				private IEnumerator var13_Sphericity;
				private IEnumerator var14_Sorting;
				private IEnumerator var15_MatrixCement;
				private IEnumerator var16_PorosityVisible;
				private IEnumerator var17_PorosityFabric;
				private IEnumerator var18_Permeability;
				private IEnumerator var19_Qualifier;
				private System.Collections.IEnumerable var20_MdInterval;
				private IEnumerator var21_ExtensionNameValue;
				public Enumerator(seq31_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_uid); var3_uid = null;
							var4_CodeLith = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CodeLith", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var4_CodeLith.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("codeLith", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_CodeLith.Current))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var4_CodeLith); var4_CodeLith = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("lithPc", "http://www.witsml.org/schemas/1series"), tbf.tbf2_volumePerVolumeMeasurePercent.Eval((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LithPc", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur))));
							pos++;
							return true;
						case 8:
							state = 9;
							var5_Citation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 9;
						case 9:
							state = 11;
							if (!var5_Citation.MoveNext()) { state = 10; goto case 10; }
							var6_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var5_Citation.Current))).GetEnumerator();
							goto case 11;
						case 10:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Citation); var5_Citation = null;
							var7_Color = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Color", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 14;
						case 11:
							state = 11;
							if (!var6_Description.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_Description.Current))));
							pos++;
							return true;
						case 12:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var6_Description); var6_Description = null;
							goto case 9;
						case 14:
							state = 14;
							if (!var7_Color.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("color", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_Color.Current))));
							pos++;
							return true;
						case 15:
							state = 17;
							Altova.Mapforce.MFEnumerator.Dispose(var7_Color); var7_Color = null;
							var8_Texture = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Texture", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 17;
						case 17:
							state = 17;
							if (!var8_Texture.MoveNext()) { state = 18; goto case 18; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("texture", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_Texture.Current))));
							pos++;
							return true;
						case 18:
							state = 20;
							Altova.Mapforce.MFEnumerator.Dispose(var8_Texture); var8_Texture = null;
							var9_Hardness = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Hardness", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 20;
						case 20:
							state = 20;
							if (!var9_Hardness.MoveNext()) { state = 21; goto case 21; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("hardness", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var9_Hardness.Current))));
							pos++;
							return true;
						case 21:
							state = 23;
							Altova.Mapforce.MFEnumerator.Dispose(var9_Hardness); var9_Hardness = null;
							var10_Compaction = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Compaction", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 23;
						case 23:
							state = 23;
							if (!var10_Compaction.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("compaction", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var10_Compaction.Current))));
							pos++;
							return true;
						case 24:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var10_Compaction); var10_Compaction = null;
							var11_SizeGrain = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SizeGrain", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 26;
						case 26:
							state = 26;
							if (!var11_SizeGrain.MoveNext()) { state = 27; goto case 27; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("sizeGrain", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var11_SizeGrain.Current))));
							pos++;
							return true;
						case 27:
							state = 29;
							Altova.Mapforce.MFEnumerator.Dispose(var11_SizeGrain); var11_SizeGrain = null;
							var12_Roundness = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Roundness", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 29;
						case 29:
							state = 29;
							if (!var12_Roundness.MoveNext()) { state = 30; goto case 30; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("roundness", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var12_Roundness.Current))));
							pos++;
							return true;
						case 30:
							state = 32;
							Altova.Mapforce.MFEnumerator.Dispose(var12_Roundness); var12_Roundness = null;
							var13_Sphericity = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Sphericity", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 32;
						case 32:
							state = 32;
							if (!var13_Sphericity.MoveNext()) { state = 33; goto case 33; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("sphericity", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_Sphericity.Current))));
							pos++;
							return true;
						case 33:
							state = 35;
							Altova.Mapforce.MFEnumerator.Dispose(var13_Sphericity); var13_Sphericity = null;
							var14_Sorting = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Sorting", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 35;
						case 35:
							state = 35;
							if (!var14_Sorting.MoveNext()) { state = 36; goto case 36; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("sorting", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var14_Sorting.Current))));
							pos++;
							return true;
						case 36:
							state = 38;
							Altova.Mapforce.MFEnumerator.Dispose(var14_Sorting); var14_Sorting = null;
							var15_MatrixCement = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MatrixCement", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 38;
						case 38:
							state = 38;
							if (!var15_MatrixCement.MoveNext()) { state = 39; goto case 39; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("matrixCement", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var15_MatrixCement.Current))));
							pos++;
							return true;
						case 39:
							state = 41;
							Altova.Mapforce.MFEnumerator.Dispose(var15_MatrixCement); var15_MatrixCement = null;
							var16_PorosityVisible = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PorosityVisible", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 41;
						case 41:
							state = 41;
							if (!var16_PorosityVisible.MoveNext()) { state = 42; goto case 42; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("porosityVisible", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var16_PorosityVisible.Current))));
							pos++;
							return true;
						case 42:
							state = 44;
							Altova.Mapforce.MFEnumerator.Dispose(var16_PorosityVisible); var16_PorosityVisible = null;
							var17_PorosityFabric = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PorosityFabric", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 44;
						case 44:
							state = 44;
							if (!var17_PorosityFabric.MoveNext()) { state = 45; goto case 45; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("porosityFabric", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var17_PorosityFabric.Current))));
							pos++;
							return true;
						case 45:
							state = 47;
							Altova.Mapforce.MFEnumerator.Dispose(var17_PorosityFabric); var17_PorosityFabric = null;
							var18_Permeability = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Permeability", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 47;
						case 47:
							state = 47;
							if (!var18_Permeability.MoveNext()) { state = 48; goto case 48; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("permeability", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var18_Permeability.Current))));
							pos++;
							return true;
						case 48:
							state = 50;
							Altova.Mapforce.MFEnumerator.Dispose(var18_Permeability); var18_Permeability = null;
							var19_Qualifier = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Qualifier", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 50;
						case 50:
							state = 50;
							if (!var19_Qualifier.MoveNext()) { state = 51; goto case 51; }
							var20_MdInterval = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var19_Qualifier.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("qualifier", "http://www.witsml.org/schemas/1series"), (new seq32_join(var20_MdInterval, (Altova.Mapforce.IMFNode)(var19_Qualifier.Current))));
							pos++;
							return true;
						case 51:
							state = 53;
							Altova.Mapforce.MFEnumerator.Dispose(var19_Qualifier); var19_Qualifier = null;
							var21_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/commonv2"), closure.var2_cur)).GetEnumerator();
							goto case 53;
						case 53:
							state = 53;
							if (!var21_ExtensionNameValue.MoveNext()) { state = 54; goto case 54; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (new seq35_join((Altova.Mapforce.IMFNode)(var21_ExtensionNameValue.Current))));
							pos++;
							return true;
						case 54:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var21_ExtensionNameValue); var21_ExtensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_uid); var3_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_CodeLith); var4_CodeLith = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_Description); var6_Description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Citation); var5_Citation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_Color); var7_Color = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_Texture); var8_Texture = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_Hardness); var9_Hardness = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_Compaction); var10_Compaction = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_SizeGrain); var11_SizeGrain = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_Roundness); var12_Roundness = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_Sphericity); var13_Sphericity = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_Sorting); var14_Sorting = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_MatrixCement); var15_MatrixCement = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_PorosityVisible); var16_PorosityVisible = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_PorosityFabric); var17_PorosityFabric = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_Permeability); var18_Permeability = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_Qualifier); var19_Qualifier = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_ExtensionNameValue); var21_ExtensionNameValue = null;
				}
			}
		}
		class seq32_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_MdInterval;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq32_join(
				System.Collections.IEnumerable var1_MdInterval,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_MdInterval = var1_MdInterval;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq32_join closure;
				private IEnumerator var3_MdInterval;
				private IEnumerator var4_MdInterval;
				private IEnumerator var5_Abundance;
				private IEnumerator var6_Description;
				public Enumerator(seq32_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var2_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("type", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Kind", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var3_MdInterval = (closure.var1_MdInterval).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var3_MdInterval.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdTop", "http://www.witsml.org/schemas/1series"), (new seq33_join((Altova.Mapforce.IMFNode)(var3_MdInterval.Current))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var3_MdInterval); var3_MdInterval = null;
							var4_MdInterval = (closure.var1_MdInterval).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var4_MdInterval.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdBottom", "http://www.witsml.org/schemas/1series"), (new seq34_join((Altova.Mapforce.IMFNode)(var4_MdInterval.Current))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var4_MdInterval); var4_MdInterval = null;
							var5_Abundance = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Abundance", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var5_Abundance.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("abundance", "http://www.witsml.org/schemas/1series"), tbf.tbf2_volumePerVolumeMeasurePercent.Eval((Altova.Mapforce.IMFNode)(var5_Abundance.Current)));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Abundance); var5_Abundance = null;
							var6_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var6_Description.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_Description.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var6_Description); var6_Description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_MdInterval); var3_MdInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_MdInterval); var4_MdInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Abundance); var5_Abundance = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_Description); var6_Description = null;
				}
			}
		}
		class seq33_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq33_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq33_join closure;
				private Altova.Mapforce.IMFNode var2_MdTop;
				public Enumerator(seq33_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_MdTop = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdTop", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_MdTop)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_MdTop)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq34_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq34_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq34_join closure;
				private Altova.Mapforce.IMFNode var2_MdBase;
				public Enumerator(seq34_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_MdBase = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdBase", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_MdBase)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_MdBase)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq35_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq35_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq35_join closure;
				private IEnumerator var2_DTim;
				private IEnumerator var3_Index;
				private IEnumerator var4_MeasureClass;
				private IEnumerator var5_Description;
				public Enumerator(seq35_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Value", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_DTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTim", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var2_DTim.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_DTim.Current))))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_DTim); var2_DTim = null;
							var3_Index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Index", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var3_Index.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_Index.Current))))))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
							var4_MeasureClass = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_MeasureClass.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_MeasureClass.Current))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_MeasureClass); var4_MeasureClass = null;
							var5_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_Description.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_Description.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_DTim); var2_DTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_MeasureClass); var4_MeasureClass = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
				}
			}
		}
		class seq36_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq36_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq36_join closure;
				private IEnumerator var2_ShowRating;
				private IEnumerator var3_StainColor;
				private IEnumerator var4_StainDistr;
				private IEnumerator var5_StainPc;
				private IEnumerator var6_NatFlorColor;
				private IEnumerator var7_NatFlorPc;
				private IEnumerator var8_NatFlorLevel;
				private IEnumerator var9_NatFlorDesc;
				private IEnumerator var10_CutColor;
				private IEnumerator var11_CutSpeed;
				private IEnumerator var12_CutStrength;
				private IEnumerator var13_CutForm;
				private IEnumerator var14_CutLevel;
				private IEnumerator var15_CutFlorColor;
				private IEnumerator var16_CutFlorSpeed;
				private IEnumerator var17_CutFlorStrength;
				private IEnumerator var18_CutFlorForm;
				private IEnumerator var19_CutFlorLevel;
				private IEnumerator var20_ResidueColor;
				private IEnumerator var21_ImpregnatedLitho;
				private IEnumerator var22_Odor;
				public Enumerator(seq36_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_ShowRating = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShowRating", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_ShowRating.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("showRat", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_ShowRating.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_ShowRating); var2_ShowRating = null;
							var3_StainColor = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("StainColor", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_StainColor.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("stainColor", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_StainColor.Current))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var3_StainColor); var3_StainColor = null;
							var4_StainDistr = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("StainDistr", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var4_StainDistr.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("stainDistr", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_StainDistr.Current))));
							pos++;
							return true;
						case 9:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var4_StainDistr); var4_StainDistr = null;
							var5_StainPc = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("StainPc", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var5_StainPc.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("stainPc", "http://www.witsml.org/schemas/1series"), tbf.tbf3_areaPerAreaMeasure.Eval((Altova.Mapforce.IMFNode)(var5_StainPc.Current)));
							pos++;
							return true;
						case 12:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var5_StainPc); var5_StainPc = null;
							var6_NatFlorColor = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NatFlorColor", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 14;
						case 14:
							state = 14;
							if (!var6_NatFlorColor.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("natFlorColor", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_NatFlorColor.Current))));
							pos++;
							return true;
						case 15:
							state = 17;
							Altova.Mapforce.MFEnumerator.Dispose(var6_NatFlorColor); var6_NatFlorColor = null;
							var7_NatFlorPc = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NatFlorPc", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 17;
						case 17:
							state = 17;
							if (!var7_NatFlorPc.MoveNext()) { state = 18; goto case 18; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("natFlorPc", "http://www.witsml.org/schemas/1series"), tbf.tbf3_areaPerAreaMeasure.Eval((Altova.Mapforce.IMFNode)(var7_NatFlorPc.Current)));
							pos++;
							return true;
						case 18:
							state = 20;
							Altova.Mapforce.MFEnumerator.Dispose(var7_NatFlorPc); var7_NatFlorPc = null;
							var8_NatFlorLevel = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NatFlorLevel", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 20;
						case 20:
							state = 20;
							if (!var8_NatFlorLevel.MoveNext()) { state = 21; goto case 21; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("natFlorLevel", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_NatFlorLevel.Current))));
							pos++;
							return true;
						case 21:
							state = 23;
							Altova.Mapforce.MFEnumerator.Dispose(var8_NatFlorLevel); var8_NatFlorLevel = null;
							var9_NatFlorDesc = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NatFlorDesc", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 23;
						case 23:
							state = 23;
							if (!var9_NatFlorDesc.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("natFlorDesc", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var9_NatFlorDesc.Current))));
							pos++;
							return true;
						case 24:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var9_NatFlorDesc); var9_NatFlorDesc = null;
							var10_CutColor = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CutColor", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 26;
						case 26:
							state = 26;
							if (!var10_CutColor.MoveNext()) { state = 27; goto case 27; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("cutColor", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var10_CutColor.Current))));
							pos++;
							return true;
						case 27:
							state = 29;
							Altova.Mapforce.MFEnumerator.Dispose(var10_CutColor); var10_CutColor = null;
							var11_CutSpeed = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CutSpeed", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 29;
						case 29:
							state = 29;
							if (!var11_CutSpeed.MoveNext()) { state = 30; goto case 30; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("cutSpeed", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var11_CutSpeed.Current))));
							pos++;
							return true;
						case 30:
							state = 32;
							Altova.Mapforce.MFEnumerator.Dispose(var11_CutSpeed); var11_CutSpeed = null;
							var12_CutStrength = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CutStrength", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 32;
						case 32:
							state = 32;
							if (!var12_CutStrength.MoveNext()) { state = 33; goto case 33; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("cutStrength", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var12_CutStrength.Current))));
							pos++;
							return true;
						case 33:
							state = 35;
							Altova.Mapforce.MFEnumerator.Dispose(var12_CutStrength); var12_CutStrength = null;
							var13_CutForm = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CutForm", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 35;
						case 35:
							state = 35;
							if (!var13_CutForm.MoveNext()) { state = 36; goto case 36; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("cutForm", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_CutForm.Current))));
							pos++;
							return true;
						case 36:
							state = 38;
							Altova.Mapforce.MFEnumerator.Dispose(var13_CutForm); var13_CutForm = null;
							var14_CutLevel = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CutLevel", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 38;
						case 38:
							state = 38;
							if (!var14_CutLevel.MoveNext()) { state = 39; goto case 39; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("cutLevel", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var14_CutLevel.Current))));
							pos++;
							return true;
						case 39:
							state = 41;
							Altova.Mapforce.MFEnumerator.Dispose(var14_CutLevel); var14_CutLevel = null;
							var15_CutFlorColor = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CutFlorColor", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 41;
						case 41:
							state = 41;
							if (!var15_CutFlorColor.MoveNext()) { state = 42; goto case 42; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("cutFlorColor", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var15_CutFlorColor.Current))));
							pos++;
							return true;
						case 42:
							state = 44;
							Altova.Mapforce.MFEnumerator.Dispose(var15_CutFlorColor); var15_CutFlorColor = null;
							var16_CutFlorSpeed = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CutFlorSpeed", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 44;
						case 44:
							state = 44;
							if (!var16_CutFlorSpeed.MoveNext()) { state = 45; goto case 45; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("cutFlorSpeed", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var16_CutFlorSpeed.Current))));
							pos++;
							return true;
						case 45:
							state = 47;
							Altova.Mapforce.MFEnumerator.Dispose(var16_CutFlorSpeed); var16_CutFlorSpeed = null;
							var17_CutFlorStrength = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CutFlorStrength", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 47;
						case 47:
							state = 47;
							if (!var17_CutFlorStrength.MoveNext()) { state = 48; goto case 48; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("cutFlorStrength", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var17_CutFlorStrength.Current))));
							pos++;
							return true;
						case 48:
							state = 50;
							Altova.Mapforce.MFEnumerator.Dispose(var17_CutFlorStrength); var17_CutFlorStrength = null;
							var18_CutFlorForm = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CutFlorForm", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 50;
						case 50:
							state = 50;
							if (!var18_CutFlorForm.MoveNext()) { state = 51; goto case 51; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("cutFlorForm", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var18_CutFlorForm.Current))));
							pos++;
							return true;
						case 51:
							state = 53;
							Altova.Mapforce.MFEnumerator.Dispose(var18_CutFlorForm); var18_CutFlorForm = null;
							var19_CutFlorLevel = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CutFlorLevel", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 53;
						case 53:
							state = 53;
							if (!var19_CutFlorLevel.MoveNext()) { state = 54; goto case 54; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("cutFlorLevel", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var19_CutFlorLevel.Current))));
							pos++;
							return true;
						case 54:
							state = 56;
							Altova.Mapforce.MFEnumerator.Dispose(var19_CutFlorLevel); var19_CutFlorLevel = null;
							var20_ResidueColor = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ResidueColor", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 56;
						case 56:
							state = 56;
							if (!var20_ResidueColor.MoveNext()) { state = 57; goto case 57; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("residueColor", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var20_ResidueColor.Current))));
							pos++;
							return true;
						case 57:
							state = 59;
							Altova.Mapforce.MFEnumerator.Dispose(var20_ResidueColor); var20_ResidueColor = null;
							var21_ImpregnatedLitho = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ImpregnatedLitho", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 59;
						case 59:
							state = 59;
							if (!var21_ImpregnatedLitho.MoveNext()) { state = 60; goto case 60; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("impregnatedLitho", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var21_ImpregnatedLitho.Current))));
							pos++;
							return true;
						case 60:
							state = 62;
							Altova.Mapforce.MFEnumerator.Dispose(var21_ImpregnatedLitho); var21_ImpregnatedLitho = null;
							var22_Odor = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Odor", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 62;
						case 62:
							state = 62;
							if (!var22_Odor.MoveNext()) { state = 63; goto case 63; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("odor", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var22_Odor.Current))));
							pos++;
							return true;
						case 63:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var22_Odor); var22_Odor = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_ShowRating); var2_ShowRating = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_StainColor); var3_StainColor = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_StainDistr); var4_StainDistr = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_StainPc); var5_StainPc = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_NatFlorColor); var6_NatFlorColor = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_NatFlorPc); var7_NatFlorPc = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_NatFlorLevel); var8_NatFlorLevel = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_NatFlorDesc); var9_NatFlorDesc = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_CutColor); var10_CutColor = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_CutSpeed); var11_CutSpeed = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_CutStrength); var12_CutStrength = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_CutForm); var13_CutForm = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_CutLevel); var14_CutLevel = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_CutFlorColor); var15_CutFlorColor = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_CutFlorSpeed); var16_CutFlorSpeed = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_CutFlorStrength); var17_CutFlorStrength = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_CutFlorForm); var18_CutFlorForm = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_CutFlorLevel); var19_CutFlorLevel = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_ResidueColor); var20_ResidueColor = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_ImpregnatedLitho); var21_ImpregnatedLitho = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_Odor); var22_Odor = null;
				}
			}
		}
		class seq37_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_join;
			private readonly System.Collections.IEnumerable var2_WellboreGeology;
			private readonly Altova.Functions.RuntimeContext var3_state;

			public seq37_join(
				System.Collections.IEnumerable var1_join,
				System.Collections.IEnumerable var2_WellboreGeology,
				Altova.Functions.RuntimeContext var3_state
			)
			{
				this.var1_join = var1_join;
				this.var2_WellboreGeology = var2_WellboreGeology;
				this.var3_state = var3_state;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq37_join closure;
				private IEnumerator var4_join;
				private IEnumerator var5_join;
				private IEnumerator var10_WellboreGeology;
				private System.Collections.IEnumerable var6_join;
				private System.Collections.IEnumerable var7_value;
				private IEnumerator var11_ExtensionNameValue;
				private System.Collections.IEnumerable var8_select_exists;
				private IEnumerator var9_result;
				public Enumerator(seq37_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var4_join = (closure.var1_join).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var4_join.MoveNext()) { state = 3; goto case 3; }
							var5_join = (closure.var1_join).GetEnumerator();
							goto case 4;
						case 3:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var4_join); var4_join = null;
							var10_WellboreGeology = (closure.var2_WellboreGeology).GetEnumerator();
							goto case 9;
						case 4:
							state = 6;
							if (!var5_join.MoveNext()) { state = 5; goto case 5; }
							var6_join = new Altova.Functions.Core.SequenceCache((new seq38_join(closure.var2_WellboreGeology)));
							var7_value = new Altova.Functions.Core.SequenceCache((new seq39_join(var6_join, closure.var2_WellboreGeology, closure.var3_state)));
							Altova.Functions.Core.Exists(var7_value);
							var8_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var3_state, (string)(var5_join.Current), var7_value));
							var9_result = (var8_select_exists).GetEnumerator();
							goto case 6;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var5_join); var5_join = null;
							goto case 2;
						case 6:
							state = 6;
							if (!var9_result.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimLastChange", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime((string)(var9_result.Current)))));
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var9_result); var9_result = null;
							goto case 4;
						case 9:
							state = 11;
							if (!var10_WellboreGeology.MoveNext()) { state = 10; goto case 10; }
							var11_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var10_WellboreGeology.Current))).GetEnumerator();
							goto case 11;
						case 10:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var10_WellboreGeology); var10_WellboreGeology = null;
							return false;
						case 11:
							state = 11;
							if (!var11_ExtensionNameValue.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (new seq27_join((Altova.Mapforce.IMFNode)(var11_ExtensionNameValue.Current))));
							pos++;
							return true;
						case 12:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var11_ExtensionNameValue); var11_ExtensionNameValue = null;
							goto case 9;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var9_result); var9_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_join); var5_join = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_join); var4_join = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_ExtensionNameValue); var11_ExtensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_WellboreGeology); var10_WellboreGeology = null;
				}
			}
		}
		class seq38_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_WellboreGeology;

			public seq38_join(
				System.Collections.IEnumerable var1_WellboreGeology
			)
			{
				this.var1_WellboreGeology = var1_WellboreGeology;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq38_join closure;
				private IEnumerator var2_WellboreGeology;
				private IEnumerator var3_CuttingsIntervalSet;
				private IEnumerator var4_LastUpdate;
				public Enumerator(seq38_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_WellboreGeology = (closure.var1_WellboreGeology).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_WellboreGeology.MoveNext()) { state = 3; goto case 3; }
							var3_CuttingsIntervalSet = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CuttingsIntervalSet", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_WellboreGeology.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
							return false;
						case 4:
							state = 6;
							if (!var3_CuttingsIntervalSet.MoveNext()) { state = 5; goto case 5; }
							var4_LastUpdate = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var3_CuttingsIntervalSet.Current))))).GetEnumerator();
							goto case 6;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_CuttingsIntervalSet); var3_CuttingsIntervalSet = null;
							goto case 2;
						case 6:
							state = 6;
							if (!var4_LastUpdate.MoveNext()) { state = 7; goto case 7; }
							current = Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_LastUpdate.Current))));
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var4_LastUpdate); var4_LastUpdate = null;
							goto case 4;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_LastUpdate); var4_LastUpdate = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_CuttingsIntervalSet); var3_CuttingsIntervalSet = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
				}
			}
		}
		class seq39_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_join;
			private readonly System.Collections.IEnumerable var2_WellboreGeology;
			private readonly Altova.Functions.RuntimeContext var3_state;

			public seq39_join(
				System.Collections.IEnumerable var1_join,
				System.Collections.IEnumerable var2_WellboreGeology,
				Altova.Functions.RuntimeContext var3_state
			)
			{
				this.var1_join = var1_join;
				this.var2_WellboreGeology = var2_WellboreGeology;
				this.var3_state = var3_state;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq39_join closure;
				private IEnumerator var4_join;
				private IEnumerator var5_join;
				private System.Collections.IEnumerable var6_join;
				private System.Collections.IEnumerable var7_value;
				private System.Collections.IEnumerable var8_select_exists;
				private IEnumerator var9_result;
				public Enumerator(seq39_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var4_join = (closure.var1_join).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var4_join.MoveNext()) { state = 3; goto case 3; }
							var5_join = (closure.var1_join).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_join); var4_join = null;
							return false;
						case 4:
							state = 6;
							if (!var5_join.MoveNext()) { state = 5; goto case 5; }
							var6_join = new Altova.Functions.Core.SequenceCache((new seq40_join(closure.var2_WellboreGeology)));
							var7_value = new Altova.Functions.Core.SequenceCache((new seq10_join(var6_join, closure.var3_state)));
							Altova.Functions.Core.Exists(var7_value);
							var8_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var3_state, (string)(var5_join.Current), var7_value));
							var9_result = (var8_select_exists).GetEnumerator();
							goto case 6;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var5_join); var5_join = null;
							goto case 2;
						case 6:
							state = 6;
							if (!var9_result.MoveNext()) { state = 7; goto case 7; }
							current = var9_result.Current;
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var9_result); var9_result = null;
							goto case 4;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var9_result); var9_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_join); var5_join = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_join); var4_join = null;
				}
			}
		}
		class seq40_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_WellboreGeology;

			public seq40_join(
				System.Collections.IEnumerable var1_WellboreGeology
			)
			{
				this.var1_WellboreGeology = var1_WellboreGeology;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq40_join closure;
				private IEnumerator var2_WellboreGeology;
				private IEnumerator var3_ShowIntervalSet;
				private IEnumerator var4_LastUpdate;
				public Enumerator(seq40_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_WellboreGeology = (closure.var1_WellboreGeology).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_WellboreGeology.MoveNext()) { state = 3; goto case 3; }
							var3_ShowIntervalSet = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShowIntervalSet", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_WellboreGeology.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
							return false;
						case 4:
							state = 6;
							if (!var3_ShowIntervalSet.MoveNext()) { state = 5; goto case 5; }
							var4_LastUpdate = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var3_ShowIntervalSet.Current))))).GetEnumerator();
							goto case 6;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_ShowIntervalSet); var3_ShowIntervalSet = null;
							goto case 2;
						case 6:
							state = 6;
							if (!var4_LastUpdate.MoveNext()) { state = 7; goto case 7; }
							current = Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_LastUpdate.Current))));
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var4_LastUpdate); var4_LastUpdate = null;
							goto case 4;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_LastUpdate); var4_LastUpdate = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_ShowIntervalSet); var3_ShowIntervalSet = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_WellboreGeology_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_WellboreGeology_Instance
			)
			{
				this.var1_WellboreGeology_Instance = var1_WellboreGeology_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_WellboreGeology;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_WellboreGeology = ((new main(closure.var1_WellboreGeology_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_WellboreGeology.MoveNext()) { state = 3; goto case 3; }
							current = var2_WellboreGeology.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeology); var2_WellboreGeology = null;
				}
			}
		}

	}
}
