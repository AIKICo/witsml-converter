////////////////////////////////////////////////////////////////////////
//
// Map20To14MapToobj_rig.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map20To14
{

	public class Map20To14MapToobj_rig : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_Rig2Instance;
		// members
		#endregion //Members


		public void Run(String Rig2SourceFilename, string obj_rig2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input Rig2Source = new Altova.IO.FileInput(Rig2SourceFilename))
			// open target stream
			using (Altova.IO.Output obj_rig2Target = new Altova.IO.FileOutput(obj_rig2TargetFilename))
			{
				// run
				Run(Rig2Source, obj_rig2Target);
			}
		}

		public void Run(Altova.IO.Input Rig2Source, Altova.IO.Output obj_rig2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + Rig2Source.Filename + "...\n");
			XmlDocument Rig2DocSourceObject = XmlTreeOperations.LoadDocument(Rig2Source);


			m_Rig2Instance = Rig2DocSourceObject;
			if (runDoesCloseAll)
				Rig2Source.Close();
				// Create the target
				XmlDocument obj_rig2Doc = (obj_rig2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? obj_rig2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_Rig2Instance, Rig2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, obj_rig2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				obj_rig2Doc,
				obj_rig2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					Rig2Source.Close();
					obj_rig2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_Rig_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_Rig_Instance
			)
			{
				this.var1_Rig_Instance = var1_Rig_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_Rig;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_Rig = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Rig", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_Rig_Instance));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("rigs", "http://www.witsml.org/schemas/1series"), (new seq1_join(var2_Rig)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_Rig;

			public seq1_join(
				System.Collections.IEnumerable var1_Rig
			)
			{
				this.var1_Rig = var1_Rig;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_Rig;
				private IEnumerator var3_Aliases;
				private IEnumerator var4_Rig;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("abs", "http://www.energistics.org/schemas/abstract");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.witsml.org/schemas/1series http://w3.energistics.org/schema/WITSML_v1.4.1.1_Data_Schema/witsml_v1.4.1.1_data/xsd_schemas/obj_rig.xsd"));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_Rig = (closure.var1_Rig).GetEnumerator();
							goto case 4;
						case 4:
							state = 6;
							if (!var2_Rig.MoveNext()) { state = 5; goto case 5; }
							var3_Aliases = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var2_Rig.Current))).GetEnumerator();
							goto case 6;
						case 5:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Rig); var2_Rig = null;
							var4_Rig = (closure.var1_Rig).GetEnumerator();
							goto case 9;
						case 6:
							state = 6;
							if (!var3_Aliases.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("version", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("authority", ""), (Altova.Mapforce.IMFNode)(var3_Aliases.Current))))));
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Aliases); var3_Aliases = null;
							goto case 4;
						case 9:
							state = 9;
							if (!var4_Rig.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("rig", "http://www.witsml.org/schemas/1series"), (new seq2_join((Altova.Mapforce.IMFNode)(var4_Rig.Current))));
							pos++;
							return true;
						case 10:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_Rig); var4_Rig = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Aliases); var3_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_Rig); var2_Rig = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_Rig); var4_Rig = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq2_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var2_Aliases;
				private IEnumerator var3_Owner;
				private IEnumerator var4_TypeRig;
				private IEnumerator var5_Manufacturer;
				private IEnumerator var6_ClassRig;
				private IEnumerator var7_Approvals;
				private IEnumerator var8_Registration;
				private IEnumerator var9_TelNumber;
				private IEnumerator var10_FaxNumber;
				private IEnumerator var11_EmailAddress;
				private IEnumerator var12_NameContact;
				private IEnumerator var13_RatingDrillDepth;
				private IEnumerator var14_RatingWaterDepth;
				private IEnumerator var15_IsOffshore;
				private IEnumerator var16_TypeDerrick;
				private IEnumerator var17_RatingDerrick;
				private IEnumerator var18_HtDerrick;
				private IEnumerator var19_CapWindDerrick;
				private IEnumerator var20_NumCranes;
				private IEnumerator var21_CustomData;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Aliases = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_Aliases.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Identifier", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var2_Aliases.Current))))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Aliases); var2_Aliases = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))))));
							pos++;
							return true;
						case 5:
							state = 6;
							var3_Owner = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Owner", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var3_Owner.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("owner", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_Owner.Current))));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Owner); var3_Owner = null;
							var4_TypeRig = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TypeRig", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var4_TypeRig.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("typeRig", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_TypeRig.Current))));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var4_TypeRig); var4_TypeRig = null;
							var5_Manufacturer = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Manufacturer", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var5_Manufacturer.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("manufacturer", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_Manufacturer.Current))));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Manufacturer); var5_Manufacturer = null;
							var6_ClassRig = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ClassRig", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 15;
						case 15:
							state = 15;
							if (!var6_ClassRig.MoveNext()) { state = 16; goto case 16; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("classRig", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_ClassRig.Current))));
							pos++;
							return true;
						case 16:
							state = 18;
							Altova.Mapforce.MFEnumerator.Dispose(var6_ClassRig); var6_ClassRig = null;
							var7_Approvals = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Approvals", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var7_Approvals.MoveNext()) { state = 19; goto case 19; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("approvals", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_Approvals.Current))));
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var7_Approvals); var7_Approvals = null;
							var8_Registration = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Registration", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 21;
						case 21:
							state = 21;
							if (!var8_Registration.MoveNext()) { state = 22; goto case 22; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("registration", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_Registration.Current))));
							pos++;
							return true;
						case 22:
							state = 24;
							Altova.Mapforce.MFEnumerator.Dispose(var8_Registration); var8_Registration = null;
							var9_TelNumber = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TelNumber", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 24;
						case 24:
							state = 24;
							if (!var9_TelNumber.MoveNext()) { state = 25; goto case 25; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("telNumber", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var9_TelNumber.Current))));
							pos++;
							return true;
						case 25:
							state = 27;
							Altova.Mapforce.MFEnumerator.Dispose(var9_TelNumber); var9_TelNumber = null;
							var10_FaxNumber = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("FaxNumber", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 27;
						case 27:
							state = 27;
							if (!var10_FaxNumber.MoveNext()) { state = 28; goto case 28; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("faxNumber", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var10_FaxNumber.Current))));
							pos++;
							return true;
						case 28:
							state = 30;
							Altova.Mapforce.MFEnumerator.Dispose(var10_FaxNumber); var10_FaxNumber = null;
							var11_EmailAddress = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("EmailAddress", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 30;
						case 30:
							state = 30;
							if (!var11_EmailAddress.MoveNext()) { state = 31; goto case 31; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("emailAddress", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var11_EmailAddress.Current))));
							pos++;
							return true;
						case 31:
							state = 33;
							Altova.Mapforce.MFEnumerator.Dispose(var11_EmailAddress); var11_EmailAddress = null;
							var12_NameContact = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NameContact", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 33;
						case 33:
							state = 33;
							if (!var12_NameContact.MoveNext()) { state = 34; goto case 34; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("nameContact", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var12_NameContact.Current))));
							pos++;
							return true;
						case 34:
							state = 36;
							Altova.Mapforce.MFEnumerator.Dispose(var12_NameContact); var12_NameContact = null;
							var13_RatingDrillDepth = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("RatingDrillDepth", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 36;
						case 36:
							state = 36;
							if (!var13_RatingDrillDepth.MoveNext()) { state = 37; goto case 37; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ratingDrillDepth", "http://www.witsml.org/schemas/1series"), tbf.tbf1_lengthMeasure.Eval((Altova.Mapforce.IMFNode)(var13_RatingDrillDepth.Current)));
							pos++;
							return true;
						case 37:
							state = 39;
							Altova.Mapforce.MFEnumerator.Dispose(var13_RatingDrillDepth); var13_RatingDrillDepth = null;
							var14_RatingWaterDepth = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("RatingWaterDepth", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 39;
						case 39:
							state = 39;
							if (!var14_RatingWaterDepth.MoveNext()) { state = 40; goto case 40; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ratingWaterDepth", "http://www.witsml.org/schemas/1series"), tbf.tbf1_lengthMeasure.Eval((Altova.Mapforce.IMFNode)(var14_RatingWaterDepth.Current)));
							pos++;
							return true;
						case 40:
							state = 42;
							Altova.Mapforce.MFEnumerator.Dispose(var14_RatingWaterDepth); var14_RatingWaterDepth = null;
							var15_IsOffshore = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IsOffshore", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 42;
						case 42:
							state = 42;
							if (!var15_IsOffshore.MoveNext()) { state = 43; goto case 43; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("isOffshore", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var15_IsOffshore.Current))))));
							pos++;
							return true;
						case 43:
							state = 45;
							Altova.Mapforce.MFEnumerator.Dispose(var15_IsOffshore); var15_IsOffshore = null;
							var16_TypeDerrick = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TypeDerrick", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 45;
						case 45:
							state = 45;
							if (!var16_TypeDerrick.MoveNext()) { state = 46; goto case 46; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("typeDerrick", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var16_TypeDerrick.Current))));
							pos++;
							return true;
						case 46:
							state = 48;
							Altova.Mapforce.MFEnumerator.Dispose(var16_TypeDerrick); var16_TypeDerrick = null;
							var17_RatingDerrick = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("RatingDerrick", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 48;
						case 48:
							state = 48;
							if (!var17_RatingDerrick.MoveNext()) { state = 49; goto case 49; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ratingDerrick", "http://www.witsml.org/schemas/1series"), tbf.tbf2_forceMeasure.Eval((Altova.Mapforce.IMFNode)(var17_RatingDerrick.Current)));
							pos++;
							return true;
						case 49:
							state = 51;
							Altova.Mapforce.MFEnumerator.Dispose(var17_RatingDerrick); var17_RatingDerrick = null;
							var18_HtDerrick = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("HtDerrick", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 51;
						case 51:
							state = 51;
							if (!var18_HtDerrick.MoveNext()) { state = 52; goto case 52; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("htDerrick", "http://www.witsml.org/schemas/1series"), tbf.tbf1_lengthMeasure.Eval((Altova.Mapforce.IMFNode)(var18_HtDerrick.Current)));
							pos++;
							return true;
						case 52:
							state = 54;
							Altova.Mapforce.MFEnumerator.Dispose(var18_HtDerrick); var18_HtDerrick = null;
							var19_CapWindDerrick = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CapWindDerrick", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 54;
						case 54:
							state = 54;
							if (!var19_CapWindDerrick.MoveNext()) { state = 55; goto case 55; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("capWindDerrick", "http://www.witsml.org/schemas/1series"), tbf.tbf3_velocityMeasure.Eval((Altova.Mapforce.IMFNode)(var19_CapWindDerrick.Current)));
							pos++;
							return true;
						case 55:
							state = 57;
							Altova.Mapforce.MFEnumerator.Dispose(var19_CapWindDerrick); var19_CapWindDerrick = null;
							var20_NumCranes = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NumCranes", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 57;
						case 57:
							state = 57;
							if (!var20_NumCranes.MoveNext()) { state = 58; goto case 58; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("numCranes", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var20_NumCranes.Current))))))))));
							pos++;
							return true;
						case 58:
							state = 60;
							Altova.Mapforce.MFEnumerator.Dispose(var20_NumCranes); var20_NumCranes = null;
							var21_CustomData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CustomData", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 60;
						case 60:
							state = 60;
							if (!var21_CustomData.MoveNext()) { state = 61; goto case 61; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), tbf.tbf4_cs_customData.Eval((Altova.Mapforce.IMFNode)(var21_CustomData.Current)));
							pos++;
							return true;
						case 61:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var21_CustomData); var21_CustomData = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Aliases); var2_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_Owner); var3_Owner = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_TypeRig); var4_TypeRig = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Manufacturer); var5_Manufacturer = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_ClassRig); var6_ClassRig = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_Approvals); var7_Approvals = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_Registration); var8_Registration = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_TelNumber); var9_TelNumber = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_FaxNumber); var10_FaxNumber = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_EmailAddress); var11_EmailAddress = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_NameContact); var12_NameContact = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_RatingDrillDepth); var13_RatingDrillDepth = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_RatingWaterDepth); var14_RatingWaterDepth = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_IsOffshore); var15_IsOffshore = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_TypeDerrick); var16_TypeDerrick = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_RatingDerrick); var17_RatingDerrick = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_HtDerrick); var18_HtDerrick = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_CapWindDerrick); var19_CapWindDerrick = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_NumCranes); var20_NumCranes = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_CustomData); var21_CustomData = null;
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_Rig_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_Rig_Instance
			)
			{
				this.var1_Rig_Instance = var1_Rig_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_Rig;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Rig = ((new main(closure.var1_Rig_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_Rig.MoveNext()) { state = 3; goto case 3; }
							current = var2_Rig.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Rig); var2_Rig = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Rig); var2_Rig = null;
				}
			}
		}

	}
}
