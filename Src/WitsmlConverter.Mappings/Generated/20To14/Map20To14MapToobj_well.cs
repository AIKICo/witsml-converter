////////////////////////////////////////////////////////////////////////
//
// Map20To14MapToobj_well.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map20To14
{

	public class Map20To14MapToobj_well : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_Well2Instance;
		// members
		#endregion //Members


		public void Run(String Well2SourceFilename, string obj_well2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input Well2Source = new Altova.IO.FileInput(Well2SourceFilename))
			// open target stream
			using (Altova.IO.Output obj_well2Target = new Altova.IO.FileOutput(obj_well2TargetFilename))
			{
				// run
				Run(Well2Source, obj_well2Target);
			}
		}

		public void Run(Altova.IO.Input Well2Source, Altova.IO.Output obj_well2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + Well2Source.Filename + "...\n");
			XmlDocument Well2DocSourceObject = XmlTreeOperations.LoadDocument(Well2Source);


			m_Well2Instance = Well2DocSourceObject;
			if (runDoesCloseAll)
				Well2Source.Close();
				// Create the target
				XmlDocument obj_well2Doc = (obj_well2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? obj_well2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_Well2Instance, Well2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, obj_well2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				obj_well2Doc,
				obj_well2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					Well2Source.Close();
					obj_well2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_Well_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_Well_Instance
			)
			{
				this.var1_Well_Instance = var1_Well_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private Altova.Functions.RuntimeContext var2_RuntimeContext;
				private System.Collections.IEnumerable var3_Well;
				private System.Collections.IEnumerable var4_value;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_RuntimeContext = (Altova.Functions.RuntimeContext.Construct());
							var3_Well = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Well", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_Well_Instance));
							var4_value = new Altova.Functions.Core.SequenceCache((new seq1_join(var3_Well, var2_RuntimeContext)));
							Altova.Functions.Core.Exists(var4_value);
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wells", "http://www.witsml.org/schemas/1series"), var4_value);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Functions.RuntimeContext.Dispose(var2_RuntimeContext);
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_Well;
			private readonly Altova.Functions.RuntimeContext var2_state;

			public seq1_join(
				System.Collections.IEnumerable var1_Well,
				Altova.Functions.RuntimeContext var2_state
			)
			{
				this.var1_Well = var1_Well;
				this.var2_state = var2_state;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var3_Well;
				private IEnumerator var4_Aliases;
				private IEnumerator var5_Well;
				private System.Collections.IEnumerable var6_WellLocation;
				private System.Collections.IEnumerable var7_WellDatum;
				private System.Collections.IEnumerable var8_ReferencePoint;
				private System.Collections.IEnumerable var9_GeographicLocationWG;
				private Altova.Mapforce.IMFNode var10_Citation;
				private System.Collections.IEnumerable var11_join;
				private System.Collections.IEnumerable var12_filter;
				private System.Collections.IEnumerable var13_filter;
				private System.Collections.IEnumerable var14_filter;
				private System.Collections.IEnumerable var15_filter;
				private System.Collections.IEnumerable var16_value;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("abs", "http://www.energistics.org/schemas/abstract");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.witsml.org/schemas/1series http://w3.energistics.org/schema/WITSML_v1.4.1.1_Data_Schema/witsml_v1.4.1.1_data/xsd_schemas/obj_well.xsd"));
							pos++;
							return true;
						case 3:
							state = 4;
							var3_Well = (closure.var1_Well).GetEnumerator();
							goto case 4;
						case 4:
							state = 6;
							if (!var3_Well.MoveNext()) { state = 5; goto case 5; }
							var4_Aliases = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var3_Well.Current))).GetEnumerator();
							goto case 6;
						case 5:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Well); var3_Well = null;
							var5_Well = (closure.var1_Well).GetEnumerator();
							goto case 9;
						case 6:
							state = 6;
							if (!var4_Aliases.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("version", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("authority", ""), (Altova.Mapforce.IMFNode)(var4_Aliases.Current))))));
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var4_Aliases); var4_Aliases = null;
							goto case 4;
						case 9:
							state = 9;
							if (!var5_Well.MoveNext()) { state = 10; goto case 10; }
							var6_WellLocation = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("WellLocation", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var5_Well.Current)));
							var7_WellDatum = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("WellDatum", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var5_Well.Current)));
							var8_ReferencePoint = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReferencePoint", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var5_Well.Current)));
							var9_GeographicLocationWG = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("GeographicLocationWGS84", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var5_Well.Current)));
							var10_Citation = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var5_Well.Current))));
							var11_join = new Altova.Functions.Core.SequenceCache((new seq2_join(var8_ReferencePoint)));
							var12_filter = new Altova.Functions.Core.SequenceCache((new seq3_filter(var11_join)));
							var13_filter = new Altova.Functions.Core.SequenceCache((new seq6_filter(var6_WellLocation)));
							var14_filter = new Altova.Functions.Core.SequenceCache((new seq8_filter(var11_join)));
							var15_filter = new Altova.Functions.Core.SequenceCache((new seq9_filter(var6_WellLocation)));
							var16_value = new Altova.Functions.Core.SequenceCache((new seq10_join(var10_Citation, var15_filter, var6_WellLocation, var8_ReferencePoint, var9_GeographicLocationWG, var13_filter, var7_WellDatum, var12_filter, var14_filter, closure.var2_state, (Altova.Mapforce.IMFNode)(var5_Well.Current))));
							Altova.Functions.Core.Exists(var16_value);
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("well", "http://www.witsml.org/schemas/1series"), var16_value);
							pos++;
							return true;
						case 10:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Well); var5_Well = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_Aliases); var4_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_Well); var3_Well = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Well); var5_Well = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_ReferencePoint;

			public seq2_join(
				System.Collections.IEnumerable var1_ReferencePoint
			)
			{
				this.var1_ReferencePoint = var1_ReferencePoint;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var2_ReferencePoint;
				private IEnumerator var3_Location;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_ReferencePoint = (closure.var1_ReferencePoint).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_ReferencePoint.MoveNext()) { state = 3; goto case 3; }
							var3_Location = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Location", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_ReferencePoint.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_ReferencePoint); var2_ReferencePoint = null;
							return false;
						case 4:
							state = 4;
							if (!var3_Location.MoveNext()) { state = 5; goto case 5; }
							current = var3_Location.Current;
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Location); var3_Location = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Location); var3_Location = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_ReferencePoint); var2_ReferencePoint = null;
				}
			}
		}
		class seq3_filter : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_join;

			public seq3_filter(
				System.Collections.IEnumerable var1_join
			)
			{
				this.var1_join = var1_join;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_filter closure;
				private IEnumerator var2_join;
				public Enumerator(seq3_filter closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_join = (closure.var1_join).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_join.MoveNext()) { state = 3; goto case 3; }
							if (!((bool)Altova.Functions.Core.First((new seq5_CoreAny((new seq4_map((Altova.Mapforce.IMFNode)(var2_join.Current)))))))) { state = 2; goto case 2;  }
							current = var2_join.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_join); var2_join = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_join); var2_join = null;
				}
			}
		}
		class seq4_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_current;

			public seq4_map(
				Altova.Mapforce.IMFNode var1_current
			)
			{
				this.var1_current = var1_current;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_map closure;
				private IEnumerator var2_type;
				public Enumerator(seq4_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_type = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("type", "http://www.w3.org/2001/XMLSchema-instance"), closure.var1_current)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_type.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Equal(Altova.CoreTypes.NodeToQName((Altova.Mapforce.IMFNode)(var2_type.Current)), Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}GeodeticWellLocation"));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
				}
			}
		}
		class seq5_CoreAny : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_sequence;

			public seq5_CoreAny(
				System.Collections.IEnumerable var1_sequence
			)
			{
				this.var1_sequence = var1_sequence;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_CoreAny closure;
				private IEnumerator var2_enum;
				public Enumerator(seq5_CoreAny closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_enum = (closure.var1_sequence).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_enum.MoveNext()) { state = 3; goto case 3; }
							if (!((bool)(var2_enum.Current))) { state = 2; goto case 2;  }
							current = Altova.CoreTypes.ParseBoolean("true");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.CoreTypes.ParseBoolean("false");
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_enum); var2_enum = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_enum); var2_enum = null;
				}
			}
		}
		class seq6_filter : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_WellLocation;

			public seq6_filter(
				System.Collections.IEnumerable var1_WellLocation
			)
			{
				this.var1_WellLocation = var1_WellLocation;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_filter closure;
				private IEnumerator var2_WellLocation;
				public Enumerator(seq6_filter closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_WellLocation = (closure.var1_WellLocation).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_WellLocation.MoveNext()) { state = 3; goto case 3; }
							if (!((bool)Altova.Functions.Core.First((new seq5_CoreAny((new seq7_map((Altova.Mapforce.IMFNode)(var2_WellLocation.Current)))))))) { state = 2; goto case 2;  }
							current = var2_WellLocation.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_WellLocation); var2_WellLocation = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_WellLocation); var2_WellLocation = null;
				}
			}
		}
		class seq7_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_current;

			public seq7_map(
				Altova.Mapforce.IMFNode var1_current
			)
			{
				this.var1_current = var1_current;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_map closure;
				private IEnumerator var2_type;
				public Enumerator(seq7_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_type = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("type", "http://www.w3.org/2001/XMLSchema-instance"), closure.var1_current)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_type.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Equal(Altova.CoreTypes.NodeToQName((Altova.Mapforce.IMFNode)(var2_type.Current)), Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}ProjectedWellLocation"));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
				}
			}
		}
		class seq8_filter : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_join;

			public seq8_filter(
				System.Collections.IEnumerable var1_join
			)
			{
				this.var1_join = var1_join;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq8_filter closure;
				private IEnumerator var2_join;
				public Enumerator(seq8_filter closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_join = (closure.var1_join).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_join.MoveNext()) { state = 3; goto case 3; }
							if (!((bool)Altova.Functions.Core.First((new seq5_CoreAny((new seq7_map((Altova.Mapforce.IMFNode)(var2_join.Current)))))))) { state = 2; goto case 2;  }
							current = var2_join.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_join); var2_join = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_join); var2_join = null;
				}
			}
		}
		class seq9_filter : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_WellLocation;

			public seq9_filter(
				System.Collections.IEnumerable var1_WellLocation
			)
			{
				this.var1_WellLocation = var1_WellLocation;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq9_filter closure;
				private IEnumerator var2_WellLocation;
				public Enumerator(seq9_filter closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_WellLocation = (closure.var1_WellLocation).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_WellLocation.MoveNext()) { state = 3; goto case 3; }
							if (!((bool)Altova.Functions.Core.First((new seq5_CoreAny((new seq4_map((Altova.Mapforce.IMFNode)(var2_WellLocation.Current)))))))) { state = 2; goto case 2;  }
							current = var2_WellLocation.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_WellLocation); var2_WellLocation = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_WellLocation); var2_WellLocation = null;
				}
			}
		}
		class seq10_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_Citation;
			private readonly System.Collections.IEnumerable var2_filter;
			private readonly System.Collections.IEnumerable var3_WellLocation;
			private readonly System.Collections.IEnumerable var4_ReferencePoint;
			private readonly System.Collections.IEnumerable var5_GeographicLocationWG;
			private readonly System.Collections.IEnumerable var6_filter;
			private readonly System.Collections.IEnumerable var7_WellDatum;
			private readonly System.Collections.IEnumerable var8_filter;
			private readonly System.Collections.IEnumerable var9_filter;
			private readonly Altova.Functions.RuntimeContext var10_state;
			private readonly Altova.Mapforce.IMFNode var11_cur;

			public seq10_join(
				Altova.Mapforce.IMFNode var1_Citation,
				System.Collections.IEnumerable var2_filter,
				System.Collections.IEnumerable var3_WellLocation,
				System.Collections.IEnumerable var4_ReferencePoint,
				System.Collections.IEnumerable var5_GeographicLocationWG,
				System.Collections.IEnumerable var6_filter,
				System.Collections.IEnumerable var7_WellDatum,
				System.Collections.IEnumerable var8_filter,
				System.Collections.IEnumerable var9_filter,
				Altova.Functions.RuntimeContext var10_state,
				Altova.Mapforce.IMFNode var11_cur
			)
			{
				this.var1_Citation = var1_Citation;
				this.var2_filter = var2_filter;
				this.var3_WellLocation = var3_WellLocation;
				this.var4_ReferencePoint = var4_ReferencePoint;
				this.var5_GeographicLocationWG = var5_GeographicLocationWG;
				this.var6_filter = var6_filter;
				this.var7_WellDatum = var7_WellDatum;
				this.var8_filter = var8_filter;
				this.var9_filter = var9_filter;
				this.var10_state = var10_state;
				this.var11_cur = var11_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq10_join closure;
				private IEnumerator var12_Aliases;
				private IEnumerator var13_NameLegal;
				private IEnumerator var14_NumLicense;
				private IEnumerator var15_NumGovt;
				private IEnumerator var16_DTimLicense;
				private IEnumerator var17_Field;
				private IEnumerator var18_Country;
				private IEnumerator var19_State;
				private IEnumerator var20_County;
				private IEnumerator var21_Region;
				private IEnumerator var22_District;
				private IEnumerator var23_Block;
				private IEnumerator var24_TimeZone;
				private IEnumerator var25_Operator;
				private IEnumerator var26_OperatorDiv;
				private IEnumerator var27_PcInterest;
				private IEnumerator var28_NumAPI;
				private IEnumerator var29_StatusWell;
				private IEnumerator var30_PurposeWell;
				private IEnumerator var31_FluidWell;
				private IEnumerator var32_DirectionWell;
				private IEnumerator var33_DTimSpud;
				private IEnumerator var34_DTimPa;
				private IEnumerator var35_WellheadElevation;
				private IEnumerator var36_WellDatum;
				private System.Collections.IEnumerable var37_HorizontalLocation;
				private System.Collections.IEnumerable var38_filter;
				private IEnumerator var41_GroundElevation;
				private System.Collections.IEnumerable var39_filter;
				private System.Collections.IEnumerable var40_value;
				private IEnumerator var42_WaterDepth;
				private IEnumerator var43_filter;
				private IEnumerator var44_filter;
				private System.Collections.IEnumerable var45_seq_;
				private IEnumerator var48_WellPublicLandSurvey;
				private System.Collections.IEnumerable var46_first_items;
				private System.Collections.IEnumerable var47_value;
				private IEnumerator var49_ReferencePoint;
				private System.Collections.IEnumerable var50_Location;
				private System.Collections.IEnumerable var51_filter;
				private IEnumerator var54_filter;
				private bool var52_any;
				private System.Collections.IEnumerable var53_value;
				private System.Collections.IEnumerable var55_Crs;
				private System.Collections.IEnumerable var56_value;
				private IEnumerator var57_filter;
				private IEnumerator var58_Crs;
				private IEnumerator var61_filter;
				private Altova.Mapforce.IMFNode var59_LocalAuthorityCrsNam;
				private System.Collections.IEnumerable var60_value;
				private IEnumerator var62_Crs;
				private Altova.Mapforce.IMFNode var63_LocalAuthorityCrsNam;
				private IEnumerator var66_CustomData;
				private System.Collections.IEnumerable var64_code;
				private System.Collections.IEnumerable var65_value;
				public Enumerator(seq10_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var12_Aliases = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), closure.var11_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var12_Aliases.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Identifier", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var12_Aliases.Current))))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var12_Aliases); var12_Aliases = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_Citation)))));
							pos++;
							return true;
						case 5:
							state = 6;
							var13_NameLegal = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NameLegal", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var13_NameLegal.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("nameLegal", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_NameLegal.Current))));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var13_NameLegal); var13_NameLegal = null;
							var14_NumLicense = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NumLicense", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var14_NumLicense.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("numLicense", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var14_NumLicense.Current))));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var14_NumLicense); var14_NumLicense = null;
							var15_NumGovt = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NumGovt", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var15_NumGovt.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("numGovt", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var15_NumGovt.Current))));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var15_NumGovt); var15_NumGovt = null;
							var16_DTimLicense = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTimLicense", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 15;
						case 15:
							state = 15;
							if (!var16_DTimLicense.MoveNext()) { state = 16; goto case 16; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimLicense", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var16_DTimLicense.Current))))));
							pos++;
							return true;
						case 16:
							state = 18;
							Altova.Mapforce.MFEnumerator.Dispose(var16_DTimLicense); var16_DTimLicense = null;
							var17_Field = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Field", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var17_Field.MoveNext()) { state = 19; goto case 19; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("field", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var17_Field.Current))));
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var17_Field); var17_Field = null;
							var18_Country = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Country", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 21;
						case 21:
							state = 21;
							if (!var18_Country.MoveNext()) { state = 22; goto case 22; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("country", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var18_Country.Current))));
							pos++;
							return true;
						case 22:
							state = 24;
							Altova.Mapforce.MFEnumerator.Dispose(var18_Country); var18_Country = null;
							var19_State = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("State", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 24;
						case 24:
							state = 24;
							if (!var19_State.MoveNext()) { state = 25; goto case 25; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("state", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var19_State.Current))));
							pos++;
							return true;
						case 25:
							state = 27;
							Altova.Mapforce.MFEnumerator.Dispose(var19_State); var19_State = null;
							var20_County = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("County", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 27;
						case 27:
							state = 27;
							if (!var20_County.MoveNext()) { state = 28; goto case 28; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("county", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var20_County.Current))));
							pos++;
							return true;
						case 28:
							state = 30;
							Altova.Mapforce.MFEnumerator.Dispose(var20_County); var20_County = null;
							var21_Region = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Region", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 30;
						case 30:
							state = 30;
							if (!var21_Region.MoveNext()) { state = 31; goto case 31; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("region", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var21_Region.Current))));
							pos++;
							return true;
						case 31:
							state = 33;
							Altova.Mapforce.MFEnumerator.Dispose(var21_Region); var21_Region = null;
							var22_District = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("District", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 33;
						case 33:
							state = 33;
							if (!var22_District.MoveNext()) { state = 34; goto case 34; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("district", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var22_District.Current))));
							pos++;
							return true;
						case 34:
							state = 36;
							Altova.Mapforce.MFEnumerator.Dispose(var22_District); var22_District = null;
							var23_Block = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Block", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 36;
						case 36:
							state = 36;
							if (!var23_Block.MoveNext()) { state = 37; goto case 37; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("block", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var23_Block.Current))));
							pos++;
							return true;
						case 37:
							state = 39;
							Altova.Mapforce.MFEnumerator.Dispose(var23_Block); var23_Block = null;
							var24_TimeZone = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TimeZone", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 39;
						case 39:
							state = 39;
							if (!var24_TimeZone.MoveNext()) { state = 40; goto case 40; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("timeZone", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var24_TimeZone.Current))));
							pos++;
							return true;
						case 40:
							state = 42;
							Altova.Mapforce.MFEnumerator.Dispose(var24_TimeZone); var24_TimeZone = null;
							var25_Operator = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Operator", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 42;
						case 42:
							state = 42;
							if (!var25_Operator.MoveNext()) { state = 43; goto case 43; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("operator", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var25_Operator.Current))));
							pos++;
							return true;
						case 43:
							state = 45;
							Altova.Mapforce.MFEnumerator.Dispose(var25_Operator); var25_Operator = null;
							var26_OperatorDiv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("OperatorDiv", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 45;
						case 45:
							state = 45;
							if (!var26_OperatorDiv.MoveNext()) { state = 46; goto case 46; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("operatorDiv", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var26_OperatorDiv.Current))));
							pos++;
							return true;
						case 46:
							state = 48;
							Altova.Mapforce.MFEnumerator.Dispose(var26_OperatorDiv); var26_OperatorDiv = null;
							var27_PcInterest = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PcInterest", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 48;
						case 48:
							state = 48;
							if (!var27_PcInterest.MoveNext()) { state = 49; goto case 49; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("pcInterest", "http://www.witsml.org/schemas/1series"), tbf.tbf1_dimensionlessMeasure.Eval((Altova.Mapforce.IMFNode)(var27_PcInterest.Current)));
							pos++;
							return true;
						case 49:
							state = 51;
							Altova.Mapforce.MFEnumerator.Dispose(var27_PcInterest); var27_PcInterest = null;
							var28_NumAPI = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NumAPI", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 51;
						case 51:
							state = 51;
							if (!var28_NumAPI.MoveNext()) { state = 52; goto case 52; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("numAPI", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var28_NumAPI.Current))));
							pos++;
							return true;
						case 52:
							state = 54;
							Altova.Mapforce.MFEnumerator.Dispose(var28_NumAPI); var28_NumAPI = null;
							var29_StatusWell = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("StatusWell", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 54;
						case 54:
							state = 54;
							if (!var29_StatusWell.MoveNext()) { state = 55; goto case 55; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("statusWell", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var29_StatusWell.Current))));
							pos++;
							return true;
						case 55:
							state = 57;
							Altova.Mapforce.MFEnumerator.Dispose(var29_StatusWell); var29_StatusWell = null;
							var30_PurposeWell = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PurposeWell", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 57;
						case 57:
							state = 57;
							if (!var30_PurposeWell.MoveNext()) { state = 58; goto case 58; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("purposeWell", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var30_PurposeWell.Current))));
							pos++;
							return true;
						case 58:
							state = 60;
							Altova.Mapforce.MFEnumerator.Dispose(var30_PurposeWell); var30_PurposeWell = null;
							var31_FluidWell = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("FluidWell", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 60;
						case 60:
							state = 60;
							if (!var31_FluidWell.MoveNext()) { state = 61; goto case 61; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("fluidWell", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var31_FluidWell.Current))));
							pos++;
							return true;
						case 61:
							state = 63;
							Altova.Mapforce.MFEnumerator.Dispose(var31_FluidWell); var31_FluidWell = null;
							var32_DirectionWell = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DirectionWell", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 63;
						case 63:
							state = 63;
							if (!var32_DirectionWell.MoveNext()) { state = 64; goto case 64; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("directionWell", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var32_DirectionWell.Current))));
							pos++;
							return true;
						case 64:
							state = 66;
							Altova.Mapforce.MFEnumerator.Dispose(var32_DirectionWell); var32_DirectionWell = null;
							var33_DTimSpud = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTimSpud", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 66;
						case 66:
							state = 66;
							if (!var33_DTimSpud.MoveNext()) { state = 67; goto case 67; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimSpud", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var33_DTimSpud.Current))))));
							pos++;
							return true;
						case 67:
							state = 69;
							Altova.Mapforce.MFEnumerator.Dispose(var33_DTimSpud); var33_DTimSpud = null;
							var34_DTimPa = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTimPa", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 69;
						case 69:
							state = 69;
							if (!var34_DTimPa.MoveNext()) { state = 70; goto case 70; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimPa", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var34_DTimPa.Current))))));
							pos++;
							return true;
						case 70:
							state = 72;
							Altova.Mapforce.MFEnumerator.Dispose(var34_DTimPa); var34_DTimPa = null;
							var35_WellheadElevation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("WellheadElevation", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 72;
						case 72:
							state = 72;
							if (!var35_WellheadElevation.MoveNext()) { state = 73; goto case 73; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wellheadElevation", "http://www.witsml.org/schemas/1series"), (new seq11_join((Altova.Mapforce.IMFNode)(var35_WellheadElevation.Current))));
							pos++;
							return true;
						case 73:
							state = 75;
							Altova.Mapforce.MFEnumerator.Dispose(var35_WellheadElevation); var35_WellheadElevation = null;
							var36_WellDatum = (closure.var7_WellDatum).GetEnumerator();
							goto case 75;
						case 75:
							state = 75;
							if (!var36_WellDatum.MoveNext()) { state = 76; goto case 76; }
							var37_HorizontalLocation = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("HorizontalLocation", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var36_WellDatum.Current)));
							var38_filter = new Altova.Functions.Core.SequenceCache((new seq13_filter(var37_HorizontalLocation)));
							var39_filter = new Altova.Functions.Core.SequenceCache((new seq14_filter(var37_HorizontalLocation, var38_filter)));
							var40_value = new Altova.Functions.Core.SequenceCache((new seq16_join(var37_HorizontalLocation, var39_filter, var38_filter, closure.var5_GeographicLocationWG, closure.var10_state, (Altova.Mapforce.IMFNode)(var36_WellDatum.Current))));
							Altova.Functions.Core.Exists(var40_value);
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wellDatum", "http://www.witsml.org/schemas/1series"), var40_value);
							pos++;
							return true;
						case 76:
							state = 78;
							Altova.Mapforce.MFEnumerator.Dispose(var36_WellDatum); var36_WellDatum = null;
							var41_GroundElevation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("GroundElevation", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 78;
						case 78:
							state = 78;
							if (!var41_GroundElevation.MoveNext()) { state = 79; goto case 79; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("groundElevation", "http://www.witsml.org/schemas/1series"), (new seq31_seq_((Altova.Mapforce.IMFNode)(var41_GroundElevation.Current))));
							pos++;
							return true;
						case 79:
							state = 81;
							Altova.Mapforce.MFEnumerator.Dispose(var41_GroundElevation); var41_GroundElevation = null;
							var42_WaterDepth = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("WaterDepth", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 81;
						case 81:
							state = 81;
							if (!var42_WaterDepth.MoveNext()) { state = 82; goto case 82; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("waterDepth", "http://www.witsml.org/schemas/1series"), tbf.tbf4_lengthMeasure.Eval((Altova.Mapforce.IMFNode)(var42_WaterDepth.Current)));
							pos++;
							return true;
						case 82:
							state = 84;
							Altova.Mapforce.MFEnumerator.Dispose(var42_WaterDepth); var42_WaterDepth = null;
							var43_filter = (closure.var2_filter).GetEnumerator();
							goto case 84;
						case 84:
							state = 84;
							if (!var43_filter.MoveNext()) { state = 85; goto case 85; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wellLocation", "http://www.witsml.org/schemas/1series"), (new seq32_join(closure.var9_filter, (Altova.Mapforce.IMFNode)(var43_filter.Current))));
							pos++;
							return true;
						case 85:
							state = 87;
							Altova.Mapforce.MFEnumerator.Dispose(var43_filter); var43_filter = null;
							var44_filter = (closure.var5_GeographicLocationWG).GetEnumerator();
							goto case 87;
						case 87:
							state = 87;
							if (!var44_filter.MoveNext()) { state = 88; goto case 88; }
							if (!(Altova.Functions.Core.LogicalNot((bool)Altova.Functions.Core.First((new seq5_CoreAny((new seq39_map(closure.var3_WellLocation)))))))) { state = 87; goto case 87;  }
							var45_seq_ = new Altova.Functions.Core.SequenceCache((new seq40_seq_()));
							var46_first_items = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FirstItems((new seq41_join(closure.var2_filter)), 1m));
							var47_value = new Altova.Functions.Core.SequenceCache((new seq43_join(var46_first_items, var45_seq_, closure.var7_WellDatum, closure.var8_filter, closure.var9_filter, closure.var10_state, (Altova.Mapforce.IMFNode)(var44_filter.Current))));
							Altova.Functions.Core.Exists(var47_value);
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wellLocation", "http://www.witsml.org/schemas/1series"), var47_value);
							pos++;
							return true;
						case 88:
							state = 90;
							Altova.Mapforce.MFEnumerator.Dispose(var44_filter); var44_filter = null;
							var48_WellPublicLandSurvey = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("WellPublicLandSurveySystemLocation", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_cur)).GetEnumerator();
							goto case 90;
						case 90:
							state = 90;
							if (!var48_WellPublicLandSurvey.MoveNext()) { state = 91; goto case 91; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wellPublicLandSurveySystemLocation", "http://www.witsml.org/schemas/1series"), (new seq50_join((Altova.Mapforce.IMFNode)(var48_WellPublicLandSurvey.Current))));
							pos++;
							return true;
						case 91:
							state = 93;
							Altova.Mapforce.MFEnumerator.Dispose(var48_WellPublicLandSurvey); var48_WellPublicLandSurvey = null;
							var49_ReferencePoint = (closure.var4_ReferencePoint).GetEnumerator();
							goto case 93;
						case 93:
							state = 93;
							if (!var49_ReferencePoint.MoveNext()) { state = 94; goto case 94; }
							var50_Location = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Location", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var49_ReferencePoint.Current)));
							var51_filter = new Altova.Functions.Core.SequenceCache((new seq51_filter(var50_Location)));
							var52_any = ((bool)Altova.Functions.Core.First((new seq5_CoreAny((new seq52_map(var50_Location))))));
							var53_value = new Altova.Functions.Core.SequenceCache((new seq53_join(var52_any, var51_filter, closure.var6_filter, (Altova.Mapforce.IMFNode)(var49_ReferencePoint.Current), closure.var10_state)));
							Altova.Functions.Core.Exists(var53_value);
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("referencePoint", "http://www.witsml.org/schemas/1series"), var53_value);
							pos++;
							return true;
						case 94:
							state = 96;
							Altova.Mapforce.MFEnumerator.Dispose(var49_ReferencePoint); var49_ReferencePoint = null;
							var54_filter = (closure.var6_filter).GetEnumerator();
							goto case 96;
						case 96:
							state = 96;
							if (!var54_filter.MoveNext()) { state = 97; goto case 97; }
							var55_Crs = new Altova.Functions.Core.SequenceCache((new seq63_Crs((Altova.Mapforce.IMFNode)(var54_filter.Current))));
							var56_value = new Altova.Functions.Core.SequenceCache((new seq65_seq_(var55_Crs, closure.var10_state, (Altova.Mapforce.IMFNode)(var54_filter.Current))));
							Altova.Functions.Core.Exists(var56_value);
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wellCRS", "http://www.witsml.org/schemas/1series"), var56_value);
							pos++;
							return true;
						case 97:
							state = 99;
							Altova.Mapforce.MFEnumerator.Dispose(var54_filter); var54_filter = null;
							var57_filter = (closure.var8_filter).GetEnumerator();
							goto case 99;
						case 99:
							state = 101;
							if (!var57_filter.MoveNext()) { state = 100; goto case 100; }
							var58_Crs = ((new seq67_Crs((Altova.Mapforce.IMFNode)(var57_filter.Current)))).GetEnumerator();
							goto case 101;
						case 100:
							state = 104;
							Altova.Mapforce.MFEnumerator.Dispose(var57_filter); var57_filter = null;
							var61_filter = (closure.var9_filter).GetEnumerator();
							goto case 104;
						case 101:
							state = 101;
							if (!var58_Crs.MoveNext()) { state = 102; goto case 102; }
							var59_LocalAuthorityCrsNam = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LocalAuthorityCrsName", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var58_Crs.Current))));
							var60_value = new Altova.Functions.Core.SequenceCache((new seq68_seq_(closure.var10_state, var59_LocalAuthorityCrsNam)));
							Altova.Functions.Core.Exists(var60_value);
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wellCRS", "http://www.witsml.org/schemas/1series"), var60_value);
							pos++;
							return true;
						case 102:
							state = 99;
							Altova.Mapforce.MFEnumerator.Dispose(var58_Crs); var58_Crs = null;
							goto case 99;
						case 104:
							state = 106;
							if (!var61_filter.MoveNext()) { state = 105; goto case 105; }
							var62_Crs = ((new seq70_Crs((Altova.Mapforce.IMFNode)(var61_filter.Current)))).GetEnumerator();
							goto case 106;
						case 105:
							state = 109;
							Altova.Mapforce.MFEnumerator.Dispose(var61_filter); var61_filter = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("commonData", "http://www.witsml.org/schemas/1series"), (new seq74_join(closure.var1_Citation, closure.var11_cur)));
							pos++;
							return true;
						case 106:
							state = 106;
							if (!var62_Crs.MoveNext()) { state = 107; goto case 107; }
							var63_LocalAuthorityCrsNam = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LocalAuthorityCrsName", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var62_Crs.Current))));
							var64_code = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("code", ""), var63_LocalAuthorityCrsNam));
							var65_value = new Altova.Functions.Core.SequenceCache((new seq71_seq_(var64_code, closure.var10_state, var63_LocalAuthorityCrsNam)));
							Altova.Functions.Core.Exists(var65_value);
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wellCRS", "http://www.witsml.org/schemas/1series"), var65_value);
							pos++;
							return true;
						case 107:
							state = 104;
							Altova.Mapforce.MFEnumerator.Dispose(var62_Crs); var62_Crs = null;
							goto case 104;
						case 109:
							state = 110;
							var66_CustomData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CustomData", "http://www.energistics.org/energyml/data/commonv2"), closure.var11_cur)).GetEnumerator();
							goto case 110;
						case 110:
							state = 110;
							if (!var66_CustomData.MoveNext()) { state = 111; goto case 111; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), tbf.tbf8_cs_customData.Eval((Altova.Mapforce.IMFNode)(var66_CustomData.Current)));
							pos++;
							return true;
						case 111:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var66_CustomData); var66_CustomData = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var12_Aliases); var12_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_NameLegal); var13_NameLegal = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_NumLicense); var14_NumLicense = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_NumGovt); var15_NumGovt = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_DTimLicense); var16_DTimLicense = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_Field); var17_Field = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_Country); var18_Country = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_State); var19_State = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_County); var20_County = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_Region); var21_Region = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_District); var22_District = null;
					Altova.Mapforce.MFEnumerator.Dispose(var23_Block); var23_Block = null;
					Altova.Mapforce.MFEnumerator.Dispose(var24_TimeZone); var24_TimeZone = null;
					Altova.Mapforce.MFEnumerator.Dispose(var25_Operator); var25_Operator = null;
					Altova.Mapforce.MFEnumerator.Dispose(var26_OperatorDiv); var26_OperatorDiv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var27_PcInterest); var27_PcInterest = null;
					Altova.Mapforce.MFEnumerator.Dispose(var28_NumAPI); var28_NumAPI = null;
					Altova.Mapforce.MFEnumerator.Dispose(var29_StatusWell); var29_StatusWell = null;
					Altova.Mapforce.MFEnumerator.Dispose(var30_PurposeWell); var30_PurposeWell = null;
					Altova.Mapforce.MFEnumerator.Dispose(var31_FluidWell); var31_FluidWell = null;
					Altova.Mapforce.MFEnumerator.Dispose(var32_DirectionWell); var32_DirectionWell = null;
					Altova.Mapforce.MFEnumerator.Dispose(var33_DTimSpud); var33_DTimSpud = null;
					Altova.Mapforce.MFEnumerator.Dispose(var34_DTimPa); var34_DTimPa = null;
					Altova.Mapforce.MFEnumerator.Dispose(var35_WellheadElevation); var35_WellheadElevation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var36_WellDatum); var36_WellDatum = null;
					Altova.Mapforce.MFEnumerator.Dispose(var41_GroundElevation); var41_GroundElevation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var42_WaterDepth); var42_WaterDepth = null;
					Altova.Mapforce.MFEnumerator.Dispose(var43_filter); var43_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var44_filter); var44_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var48_WellPublicLandSurvey); var48_WellPublicLandSurvey = null;
					Altova.Mapforce.MFEnumerator.Dispose(var49_ReferencePoint); var49_ReferencePoint = null;
					Altova.Mapforce.MFEnumerator.Dispose(var54_filter); var54_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var58_Crs); var58_Crs = null;
					Altova.Mapforce.MFEnumerator.Dispose(var57_filter); var57_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var62_Crs); var62_Crs = null;
					Altova.Mapforce.MFEnumerator.Dispose(var61_filter); var61_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var66_CustomData); var66_CustomData = null;
				}
			}
		}
		class seq11_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq11_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq11_join closure;
				private Altova.Mapforce.IMFNode var2_datum;
				private IEnumerator var3_datum;
				public Enumerator(seq11_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							var2_datum = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("datum", ""), closure.var1_cur)));
							var3_datum = ((new seq12_cast(var2_datum))).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var3_datum.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("datum", ""), Altova.Functions.Core.Box((string)(var3_datum.Current)));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_datum); var3_datum = null;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_datum); var3_datum = null;
				}
			}
		}
		class seq12_cast : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq12_cast(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq12_cast closure;
				private string var2_cast;
				public Enumerator(seq12_cast closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							var2_cast = (Altova.CoreTypes.NodeToString(closure.var1_cur));
							if (!((var2_cast) == ("unknown"))) { state = 2; goto case 2;  }
							return false;
						case 2:
							state = 0;
							current = var2_cast;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq13_filter : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_HorizontalLocation;

			public seq13_filter(
				System.Collections.IEnumerable var1_HorizontalLocation
			)
			{
				this.var1_HorizontalLocation = var1_HorizontalLocation;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq13_filter closure;
				private IEnumerator var2_HorizontalLocation;
				public Enumerator(seq13_filter closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_HorizontalLocation = (closure.var1_HorizontalLocation).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_HorizontalLocation.MoveNext()) { state = 3; goto case 3; }
							if (!((bool)Altova.Functions.Core.First((new seq5_CoreAny((new seq7_map((Altova.Mapforce.IMFNode)(var2_HorizontalLocation.Current)))))))) { state = 2; goto case 2;  }
							current = var2_HorizontalLocation.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_HorizontalLocation); var2_HorizontalLocation = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_HorizontalLocation); var2_HorizontalLocation = null;
				}
			}
		}
		class seq14_filter : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_HorizontalLocation;
			private readonly System.Collections.IEnumerable var2_filter;

			public seq14_filter(
				System.Collections.IEnumerable var1_HorizontalLocation,
				System.Collections.IEnumerable var2_filter
			)
			{
				this.var1_HorizontalLocation = var1_HorizontalLocation;
				this.var2_filter = var2_filter;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq14_filter closure;
				private IEnumerator var3_join;
				public Enumerator(seq14_filter closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_join = ((new seq15_join(closure.var1_HorizontalLocation, closure.var2_filter))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_join.MoveNext()) { state = 3; goto case 3; }
							if (!((bool)Altova.Functions.Core.First((new seq5_CoreAny((new seq7_map((Altova.Mapforce.IMFNode)(var3_join.Current)))))))) { state = 2; goto case 2;  }
							current = var3_join.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_join); var3_join = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_join); var3_join = null;
				}
			}
		}
		class seq15_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_HorizontalLocation;
			private readonly System.Collections.IEnumerable var2_filter;

			public seq15_join(
				System.Collections.IEnumerable var1_HorizontalLocation,
				System.Collections.IEnumerable var2_filter
			)
			{
				this.var1_HorizontalLocation = var1_HorizontalLocation;
				this.var2_filter = var2_filter;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq15_join closure;
				private IEnumerator var3_filter;
				private IEnumerator var4_HorizontalLocation;
				public Enumerator(seq15_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_filter = (closure.var2_filter).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var3_filter.MoveNext()) { state = 3; goto case 3; }
							var4_HorizontalLocation = (closure.var1_HorizontalLocation).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_filter); var3_filter = null;
							return false;
						case 4:
							state = 4;
							if (!var4_HorizontalLocation.MoveNext()) { state = 5; goto case 5; }
							current = var4_HorizontalLocation.Current;
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var4_HorizontalLocation); var4_HorizontalLocation = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_HorizontalLocation); var4_HorizontalLocation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_filter); var3_filter = null;
				}
			}
		}
		class seq16_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_HorizontalLocation;
			private readonly System.Collections.IEnumerable var2_filter;
			private readonly System.Collections.IEnumerable var3_filter;
			private readonly System.Collections.IEnumerable var4_GeographicLocationWG;
			private readonly Altova.Functions.RuntimeContext var5_state;
			private readonly Altova.Mapforce.IMFNode var6_cur;

			public seq16_join(
				System.Collections.IEnumerable var1_HorizontalLocation,
				System.Collections.IEnumerable var2_filter,
				System.Collections.IEnumerable var3_filter,
				System.Collections.IEnumerable var4_GeographicLocationWG,
				Altova.Functions.RuntimeContext var5_state,
				Altova.Mapforce.IMFNode var6_cur
			)
			{
				this.var1_HorizontalLocation = var1_HorizontalLocation;
				this.var2_filter = var2_filter;
				this.var3_filter = var3_filter;
				this.var4_GeographicLocationWG = var4_GeographicLocationWG;
				this.var5_state = var5_state;
				this.var6_cur = var6_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq16_join closure;
				private IEnumerator var7_Code;
				private string var8_cast;
				private IEnumerator var9_if_equal;
				private IEnumerator var10_Kind;
				private IEnumerator var11_Wellbore;
				private IEnumerator var12_Rig;
				private IEnumerator var13_Elevation;
				private IEnumerator var14_MeasuredDepth;
				private IEnumerator var15_filter;
				private string var16_cast;
				private System.Collections.IEnumerable var17_value;
				private IEnumerator var21_Comment;
				private System.Collections.IEnumerable var18_select_exists;
				private IEnumerator var19_result;
				private IEnumerator var22_ExtensionNameValue;
				private System.Collections.IEnumerable var20_filter;
				public Enumerator(seq16_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var6_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var7_Code = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Code", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 6;
							if (!var7_Code.MoveNext()) { state = 5; goto case 5; }
							var8_cast = (Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_Code.Current)));
							var9_if_equal = ((new seq17_if_equal(var8_cast))).GetEnumerator();
							goto case 6;
						case 5:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var7_Code); var7_Code = null;
							var10_Kind = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Kind", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 9;
						case 6:
							state = 6;
							if (!var9_if_equal.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("code", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box((string)(var9_if_equal.Current)));
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var9_if_equal); var9_if_equal = null;
							goto case 4;
						case 9:
							state = 9;
							if (!var10_Kind.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("kind", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var10_Kind.Current))));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var10_Kind); var10_Kind = null;
							var11_Wellbore = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var11_Wellbore.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wellbore", "http://www.witsml.org/schemas/1series"), (new seq18_join((Altova.Mapforce.IMFNode)(var11_Wellbore.Current))));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var11_Wellbore); var11_Wellbore = null;
							var12_Rig = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Rig", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 15;
						case 15:
							state = 15;
							if (!var12_Rig.MoveNext()) { state = 16; goto case 16; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("rig", "http://www.witsml.org/schemas/1series"), (new seq19_join((Altova.Mapforce.IMFNode)(var12_Rig.Current))));
							pos++;
							return true;
						case 16:
							state = 18;
							Altova.Mapforce.MFEnumerator.Dispose(var12_Rig); var12_Rig = null;
							var13_Elevation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Elevation", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var13_Elevation.MoveNext()) { state = 19; goto case 19; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("elevation", "http://www.witsml.org/schemas/1series"), tbf.tbf2_wellElevationCoord.Eval((Altova.Mapforce.IMFNode)(var13_Elevation.Current)));
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var13_Elevation); var13_Elevation = null;
							var14_MeasuredDepth = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MeasuredDepth", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 21;
						case 21:
							state = 21;
							if (!var14_MeasuredDepth.MoveNext()) { state = 22; goto case 22; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("measuredDepth", "http://www.witsml.org/schemas/1series"), tbf.tbf3_measuredDepthCoord.Eval((Altova.Mapforce.IMFNode)(var14_MeasuredDepth.Current)));
							pos++;
							return true;
						case 22:
							state = 24;
							Altova.Mapforce.MFEnumerator.Dispose(var14_MeasuredDepth); var14_MeasuredDepth = null;
							var15_filter = (closure.var2_filter).GetEnumerator();
							goto case 24;
						case 24:
							state = 26;
							if (!var15_filter.MoveNext()) { state = 25; goto case 25; }
							var16_cast = (Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Coordinate2", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var15_filter.Current)))))));
							var17_value = new Altova.Functions.Core.SequenceCache((new seq20_join(closure.var1_HorizontalLocation, closure.var2_filter, closure.var5_state)));
							Altova.Functions.Core.Exists(var17_value);
							var18_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var5_state, var16_cast, var17_value));
							var19_result = (var18_select_exists).GetEnumerator();
							goto case 26;
						case 25:
							state = 29;
							Altova.Mapforce.MFEnumerator.Dispose(var15_filter); var15_filter = null;
							var21_Comment = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Comment", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 29;
						case 26:
							state = 26;
							if (!var19_result.MoveNext()) { state = 27; goto case 27; }
							var20_filter = new Altova.Functions.Core.SequenceCache((new seq26_filter(closure.var1_HorizontalLocation)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("horizontalLocation", "http://www.witsml.org/schemas/1series"), (new seq27_join(closure.var3_filter, var20_filter, closure.var4_GeographicLocationWG)));
							pos++;
							return true;
						case 27:
							state = 24;
							Altova.Mapforce.MFEnumerator.Dispose(var19_result); var19_result = null;
							goto case 24;
						case 29:
							state = 29;
							if (!var21_Comment.MoveNext()) { state = 30; goto case 30; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("comment", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var21_Comment.Current))));
							pos++;
							return true;
						case 30:
							state = 32;
							Altova.Mapforce.MFEnumerator.Dispose(var21_Comment); var21_Comment = null;
							var22_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 32;
						case 32:
							state = 32;
							if (!var22_ExtensionNameValue.MoveNext()) { state = 33; goto case 33; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (new seq30_join((Altova.Mapforce.IMFNode)(var22_ExtensionNameValue.Current))));
							pos++;
							return true;
						case 33:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var22_ExtensionNameValue); var22_ExtensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var9_if_equal); var9_if_equal = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_Code); var7_Code = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_Kind); var10_Kind = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_Wellbore); var11_Wellbore = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_Rig); var12_Rig = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_Elevation); var13_Elevation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_MeasuredDepth); var14_MeasuredDepth = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_result); var19_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_filter); var15_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_Comment); var21_Comment = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_ExtensionNameValue); var22_ExtensionNameValue = null;
				}
			}
		}
		class seq17_if_equal : IEnumerable
		{
			private readonly string var1_cast;

			public seq17_if_equal(
				string var1_cast
			)
			{
				this.var1_cast = var1_cast;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq17_if_equal closure;
				public Enumerator(seq17_if_equal closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							if (!((closure.var1_cast) == ("mean sea level"))) { state = 2; goto case 2;  }
							current = "SL";
							pos++;
							return true;
						case 2:
							state = 0;
							if (!((closure.var1_cast) == ("kelly bushing"))) { state = 0; return false; }
							current = "KB";
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq18_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq18_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq18_join closure;
				private IEnumerator var2_WellParent;
				public Enumerator(seq18_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wellboreReference", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("WellboreReference", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							var2_WellParent = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("WellParent", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var2_WellParent.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wellParent", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_WellParent.Current))));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_WellParent); var2_WellParent = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_WellParent); var2_WellParent = null;
				}
			}
		}
		class seq19_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq19_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq19_join closure;
				private IEnumerator var2_WellboreParent;
				private IEnumerator var3_WellParent;
				public Enumerator(seq19_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("rigReference", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("RigReference", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							var2_WellboreParent = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("WellboreParent", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var2_WellboreParent.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wellboreParent", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_WellboreParent.Current))));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreParent); var2_WellboreParent = null;
							var3_WellParent = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("WellParent", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var3_WellParent.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wellParent", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_WellParent.Current))));
							pos++;
							return true;
						case 7:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_WellParent); var3_WellParent = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreParent); var2_WellboreParent = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_WellParent); var3_WellParent = null;
				}
			}
		}
		class seq20_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_HorizontalLocation;
			private readonly System.Collections.IEnumerable var2_filter;
			private readonly Altova.Functions.RuntimeContext var3_state;

			public seq20_join(
				System.Collections.IEnumerable var1_HorizontalLocation,
				System.Collections.IEnumerable var2_filter,
				Altova.Functions.RuntimeContext var3_state
			)
			{
				this.var1_HorizontalLocation = var1_HorizontalLocation;
				this.var2_filter = var2_filter;
				this.var3_state = var3_state;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq20_join closure;
				private IEnumerator var4_filter;
				private string var5_cast;
				private System.Collections.IEnumerable var6_filter;
				private System.Collections.IEnumerable var7_value;
				private System.Collections.IEnumerable var8_select_exists;
				private IEnumerator var9_result;
				public Enumerator(seq20_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var4_filter = (closure.var2_filter).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var4_filter.MoveNext()) { state = 3; goto case 3; }
							var5_cast = (Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Coordinate1", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_filter.Current)))))));
							var6_filter = new Altova.Functions.Core.SequenceCache((new seq21_filter(closure.var1_HorizontalLocation)));
							var7_value = new Altova.Functions.Core.SequenceCache((new seq23_join(var6_filter, closure.var3_state)));
							Altova.Functions.Core.Exists(var7_value);
							var8_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var3_state, var5_cast, var7_value));
							var9_result = (var8_select_exists).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_filter); var4_filter = null;
							return false;
						case 4:
							state = 4;
							if (!var9_result.MoveNext()) { state = 5; goto case 5; }
							current = var9_result.Current;
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var9_result); var9_result = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var9_result); var9_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_filter); var4_filter = null;
				}
			}
		}
		class seq21_filter : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_HorizontalLocation;

			public seq21_filter(
				System.Collections.IEnumerable var1_HorizontalLocation
			)
			{
				this.var1_HorizontalLocation = var1_HorizontalLocation;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq21_filter closure;
				private IEnumerator var2_join;
				public Enumerator(seq21_filter closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_join = ((new seq22_join(closure.var1_HorizontalLocation))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_join.MoveNext()) { state = 3; goto case 3; }
							if (!((bool)Altova.Functions.Core.First((new seq5_CoreAny((new seq4_map((Altova.Mapforce.IMFNode)(var2_join.Current)))))))) { state = 2; goto case 2;  }
							current = var2_join.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_join); var2_join = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_join); var2_join = null;
				}
			}
		}
		class seq22_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_HorizontalLocation;

			public seq22_join(
				System.Collections.IEnumerable var1_HorizontalLocation
			)
			{
				this.var1_HorizontalLocation = var1_HorizontalLocation;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq22_join closure;
				private IEnumerator var2_filter;
				private IEnumerator var3_HorizontalLocation;
				public Enumerator(seq22_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_filter = (closure.var1_HorizontalLocation).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_filter.MoveNext()) { state = 3; goto case 3; }
							if (!((bool)Altova.Functions.Core.First((new seq5_CoreAny((new seq4_map((Altova.Mapforce.IMFNode)(var2_filter.Current)))))))) { state = 2; goto case 2;  }
							var3_HorizontalLocation = (closure.var1_HorizontalLocation).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_filter); var2_filter = null;
							return false;
						case 4:
							state = 4;
							if (!var3_HorizontalLocation.MoveNext()) { state = 5; goto case 5; }
							current = var3_HorizontalLocation.Current;
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_HorizontalLocation); var3_HorizontalLocation = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_HorizontalLocation); var3_HorizontalLocation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_filter); var2_filter = null;
				}
			}
		}
		class seq23_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_filter;
			private readonly Altova.Functions.RuntimeContext var2_state;

			public seq23_join(
				System.Collections.IEnumerable var1_filter,
				Altova.Functions.RuntimeContext var2_state
			)
			{
				this.var1_filter = var1_filter;
				this.var2_state = var2_state;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq23_join closure;
				private IEnumerator var3_filter;
				private string var4_cast;
				private System.Collections.IEnumerable var5_value;
				private System.Collections.IEnumerable var6_select_exists;
				private IEnumerator var7_result;
				public Enumerator(seq23_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_filter = (closure.var1_filter).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var3_filter.MoveNext()) { state = 3; goto case 3; }
							var4_cast = (Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Longitude", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_filter.Current)))))));
							var5_value = new Altova.Functions.Core.SequenceCache((new seq24_join(closure.var1_filter, closure.var2_state)));
							Altova.Functions.Core.Exists(var5_value);
							var6_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var2_state, var4_cast, var5_value));
							var7_result = (var6_select_exists).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_filter); var3_filter = null;
							return false;
						case 4:
							state = 4;
							if (!var7_result.MoveNext()) { state = 5; goto case 5; }
							current = var7_result.Current;
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var7_result); var7_result = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var7_result); var7_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_filter); var3_filter = null;
				}
			}
		}
		class seq24_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_filter;
			private readonly Altova.Functions.RuntimeContext var2_state;

			public seq24_join(
				System.Collections.IEnumerable var1_filter,
				Altova.Functions.RuntimeContext var2_state
			)
			{
				this.var1_filter = var1_filter;
				this.var2_state = var2_state;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq24_join closure;
				private IEnumerator var3_filter;
				private string var4_cast;
				private System.Collections.IEnumerable var5_select_exists;
				private IEnumerator var6_result;
				public Enumerator(seq24_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_filter = (closure.var1_filter).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var3_filter.MoveNext()) { state = 3; goto case 3; }
							var4_cast = (Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Latitude", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_filter.Current)))))));
							var5_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var2_state, var4_cast, (new seq25_seq_())));
							var6_result = (var5_select_exists).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_filter); var3_filter = null;
							return false;
						case 4:
							state = 4;
							if (!var6_result.MoveNext()) { state = 5; goto case 5; }
							current = var6_result.Current;
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var6_result); var6_result = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var6_result); var6_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_filter); var3_filter = null;
				}
			}
		}
		class seq25_seq_ : IEnumerable
		{

			public seq25_seq_(
			)
			{
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq25_seq_ closure;
				public Enumerator(seq25_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq26_filter : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_HorizontalLocation;

			public seq26_filter(
				System.Collections.IEnumerable var1_HorizontalLocation
			)
			{
				this.var1_HorizontalLocation = var1_HorizontalLocation;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq26_filter closure;
				private IEnumerator var2_HorizontalLocation;
				public Enumerator(seq26_filter closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_HorizontalLocation = (closure.var1_HorizontalLocation).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_HorizontalLocation.MoveNext()) { state = 3; goto case 3; }
							if (!((bool)Altova.Functions.Core.First((new seq5_CoreAny((new seq4_map((Altova.Mapforce.IMFNode)(var2_HorizontalLocation.Current)))))))) { state = 2; goto case 2;  }
							current = var2_HorizontalLocation.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_HorizontalLocation); var2_HorizontalLocation = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_HorizontalLocation); var2_HorizontalLocation = null;
				}
			}
		}
		class seq27_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_filter;
			private readonly System.Collections.IEnumerable var2_filter;
			private readonly System.Collections.IEnumerable var3_GeographicLocationWG;

			public seq27_join(
				System.Collections.IEnumerable var1_filter,
				System.Collections.IEnumerable var2_filter,
				System.Collections.IEnumerable var3_GeographicLocationWG
			)
			{
				this.var1_filter = var1_filter;
				this.var2_filter = var2_filter;
				this.var3_GeographicLocationWG = var3_GeographicLocationWG;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq27_join closure;
				private IEnumerator var4_filter;
				private IEnumerator var5_filter;
				private IEnumerator var6_filter;
				private IEnumerator var7_filter;
				private IEnumerator var8_filter;
				private IEnumerator var9_filter;
				private IEnumerator var10_Original;
				private IEnumerator var11_filter;
				private IEnumerator var12_Description;
				public Enumerator(seq27_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var4_filter = (closure.var1_filter).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var4_filter.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), (Altova.Mapforce.IMFNode)(var4_filter.Current))))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var4_filter); var4_filter = null;
							var5_filter = (closure.var2_filter).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var5_filter.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("latitude", "http://www.witsml.org/schemas/1series"), (new seq28_join(closure.var3_GeographicLocationWG, (Altova.Mapforce.IMFNode)(var5_filter.Current))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var5_filter); var5_filter = null;
							var6_filter = (closure.var2_filter).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var6_filter.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("longitude", "http://www.witsml.org/schemas/1series"), (new seq29_join(closure.var3_GeographicLocationWG, (Altova.Mapforce.IMFNode)(var6_filter.Current))));
							pos++;
							return true;
						case 9:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var6_filter); var6_filter = null;
							var7_filter = (closure.var1_filter).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var7_filter.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("localX", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Coordinate1", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var7_filter.Current))))))));
							pos++;
							return true;
						case 12:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var7_filter); var7_filter = null;
							var8_filter = (closure.var1_filter).GetEnumerator();
							goto case 14;
						case 14:
							state = 14;
							if (!var8_filter.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("localY", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Coordinate2", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var8_filter.Current))))))));
							pos++;
							return true;
						case 15:
							state = 17;
							Altova.Mapforce.MFEnumerator.Dispose(var8_filter); var8_filter = null;
							var9_filter = (closure.var2_filter).GetEnumerator();
							goto case 17;
						case 17:
							state = 19;
							if (!var9_filter.MoveNext()) { state = 18; goto case 18; }
							var10_Original = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Original", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var9_filter.Current))).GetEnumerator();
							goto case 19;
						case 18:
							state = 22;
							Altova.Mapforce.MFEnumerator.Dispose(var9_filter); var9_filter = null;
							var11_filter = (closure.var2_filter).GetEnumerator();
							goto case 22;
						case 19:
							state = 19;
							if (!var10_Original.MoveNext()) { state = 20; goto case 20; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("original", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var10_Original.Current))))));
							pos++;
							return true;
						case 20:
							state = 17;
							Altova.Mapforce.MFEnumerator.Dispose(var10_Original); var10_Original = null;
							goto case 17;
						case 22:
							state = 24;
							if (!var11_filter.MoveNext()) { state = 23; goto case 23; }
							var12_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var11_filter.Current))).GetEnumerator();
							goto case 24;
						case 23:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var11_filter); var11_filter = null;
							return false;
						case 24:
							state = 24;
							if (!var12_Description.MoveNext()) { state = 25; goto case 25; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var12_Description.Current))));
							pos++;
							return true;
						case 25:
							state = 22;
							Altova.Mapforce.MFEnumerator.Dispose(var12_Description); var12_Description = null;
							goto case 22;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_filter); var4_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_filter); var5_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_filter); var6_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_filter); var7_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_filter); var8_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_Original); var10_Original = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_filter); var9_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_Description); var12_Description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_filter); var11_filter = null;
				}
			}
		}
		class seq28_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_GeographicLocationWG;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq28_join(
				System.Collections.IEnumerable var1_GeographicLocationWG,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_GeographicLocationWG = var1_GeographicLocationWG;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq28_join closure;
				private IEnumerator var3_GeographicLocationWG;
				public Enumerator(seq28_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_GeographicLocationWG = (closure.var1_GeographicLocationWG).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_GeographicLocationWG.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Latitude", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_GeographicLocationWG.Current))))))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_GeographicLocationWG); var3_GeographicLocationWG = null;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Latitude", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)))));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_GeographicLocationWG); var3_GeographicLocationWG = null;
				}
			}
		}
		class seq29_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_GeographicLocationWG;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq29_join(
				System.Collections.IEnumerable var1_GeographicLocationWG,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_GeographicLocationWG = var1_GeographicLocationWG;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq29_join closure;
				private IEnumerator var3_GeographicLocationWG;
				public Enumerator(seq29_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_GeographicLocationWG = (closure.var1_GeographicLocationWG).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_GeographicLocationWG.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Longitude", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_GeographicLocationWG.Current))))))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_GeographicLocationWG); var3_GeographicLocationWG = null;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Longitude", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)))));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_GeographicLocationWG); var3_GeographicLocationWG = null;
				}
			}
		}
		class seq30_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq30_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq30_join closure;
				private IEnumerator var2_DTim;
				private IEnumerator var3_Index;
				private IEnumerator var4_MeasureClass;
				private IEnumerator var5_Description;
				public Enumerator(seq30_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Value", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_DTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTim", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var2_DTim.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_DTim.Current))))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_DTim); var2_DTim = null;
							var3_Index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Index", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var3_Index.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_Index.Current))))))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
							var4_MeasureClass = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_MeasureClass.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_MeasureClass.Current))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_MeasureClass); var4_MeasureClass = null;
							var5_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_Description.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_Description.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_DTim); var2_DTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_MeasureClass); var4_MeasureClass = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
				}
			}
		}
		class seq31_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq31_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq31_seq_ closure;
				public Enumerator(seq31_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq32_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_filter;
			private readonly Altova.Mapforce.IMFNode var2_current;

			public seq32_join(
				System.Collections.IEnumerable var1_filter,
				Altova.Mapforce.IMFNode var2_current
			)
			{
				this.var1_filter = var1_filter;
				this.var2_current = var2_current;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq32_join closure;
				private IEnumerator var3_Crs;
				private IEnumerator var4_Original;
				private IEnumerator var5_Description;
				private IEnumerator var6_ExtensionNameValue;
				public Enumerator(seq32_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var2_current)))));
							pos++;
							return true;
						case 2:
							state = 3;
							var3_Crs = ((new seq33_Crs(closure.var2_current))).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var3_Crs.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wellCRS", "http://www.witsml.org/schemas/1series"), (new seq35_join(closure.var1_filter, (Altova.Mapforce.IMFNode)(var3_Crs.Current))));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Crs); var3_Crs = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("latitude", "http://www.witsml.org/schemas/1series"), (new seq37_join(closure.var2_current)));
							pos++;
							return true;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("longitude", "http://www.witsml.org/schemas/1series"), (new seq38_join(closure.var2_current)));
							pos++;
							return true;
						case 7:
							state = 8;
							var4_Original = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Original", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_current)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var4_Original.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("original", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_Original.Current))))));
							pos++;
							return true;
						case 9:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var4_Original); var4_Original = null;
							var5_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_current)).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var5_Description.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_Description.Current))));
							pos++;
							return true;
						case 12:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
							var6_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_current)).GetEnumerator();
							goto case 14;
						case 14:
							state = 14;
							if (!var6_ExtensionNameValue.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (new seq30_join((Altova.Mapforce.IMFNode)(var6_ExtensionNameValue.Current))));
							pos++;
							return true;
						case 15:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var6_ExtensionNameValue); var6_ExtensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Crs); var3_Crs = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_Original); var4_Original = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_ExtensionNameValue); var6_ExtensionNameValue = null;
				}
			}
		}
		class seq33_Crs : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_current;

			public seq33_Crs(
				Altova.Mapforce.IMFNode var1_current
			)
			{
				this.var1_current = var1_current;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq33_Crs closure;
				private Altova.Mapforce.IMFNode var2_Crs;
				public Enumerator(seq33_Crs closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							var2_Crs = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Crs", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_current)));
							if (!((bool)Altova.Functions.Core.First((new seq5_CoreAny((new seq34_map(var2_Crs))))))) { state = 0; return false; }
							current = var2_Crs;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq34_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq34_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq34_map closure;
				private IEnumerator var2_type;
				public Enumerator(seq34_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_type = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("type", "http://www.w3.org/2001/XMLSchema-instance"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_type.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Equal(Altova.CoreTypes.NodeToQName((Altova.Mapforce.IMFNode)(var2_type.Current)), Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/commonv2}GeodeticLocalAuthorityCrs"));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
				}
			}
		}
		class seq35_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_filter;
			private readonly Altova.Mapforce.IMFNode var2_current;

			public seq35_join(
				System.Collections.IEnumerable var1_filter,
				Altova.Mapforce.IMFNode var2_current
			)
			{
				this.var1_filter = var1_filter;
				this.var2_current = var2_current;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq35_join closure;
				private IEnumerator var3_first_items;
				public Enumerator(seq35_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_first_items = (Altova.Functions.Core.FirstItems((new seq36_join(closure.var1_filter)), 1m)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_first_items.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uidRef", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_first_items.Current))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LocalAuthorityCrsName", "http://www.energistics.org/energyml/data/commonv2"), closure.var2_current)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
				}
			}
		}
		class seq36_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_filter;

			public seq36_join(
				System.Collections.IEnumerable var1_filter
			)
			{
				this.var1_filter = var1_filter;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq36_join closure;
				private IEnumerator var2_filter;
				public Enumerator(seq36_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_filter = (closure.var1_filter).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_filter.MoveNext()) { state = 3; goto case 3; }
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), (Altova.Mapforce.IMFNode)(var2_filter.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_filter); var2_filter = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_filter); var2_filter = null;
				}
			}
		}
		class seq37_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_current;

			public seq37_join(
				Altova.Mapforce.IMFNode var1_current
			)
			{
				this.var1_current = var1_current;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq37_join closure;
				private Altova.Mapforce.IMFNode var2_Latitude;
				public Enumerator(seq37_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Latitude = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Latitude", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_current)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_Latitude)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_Latitude)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq38_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_current;

			public seq38_join(
				Altova.Mapforce.IMFNode var1_current
			)
			{
				this.var1_current = var1_current;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq38_join closure;
				private Altova.Mapforce.IMFNode var2_Longitude;
				public Enumerator(seq38_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Longitude = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Longitude", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_current)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_Longitude)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_Longitude)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq39_map : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_WellLocation;

			public seq39_map(
				System.Collections.IEnumerable var1_WellLocation
			)
			{
				this.var1_WellLocation = var1_WellLocation;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq39_map closure;
				private IEnumerator var2_WellLocation;
				public Enumerator(seq39_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_WellLocation = (closure.var1_WellLocation).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_WellLocation.MoveNext()) { state = 3; goto case 3; }
							current = (bool)Altova.Functions.Core.First((new seq5_CoreAny((new seq4_map((Altova.Mapforce.IMFNode)(var2_WellLocation.Current))))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_WellLocation); var2_WellLocation = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_WellLocation); var2_WellLocation = null;
				}
			}
		}
		class seq40_seq_ : IEnumerable
		{

			public seq40_seq_(
			)
			{
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq40_seq_ closure;
				public Enumerator(seq40_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box("dega"));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.DecimalToDouble(0m));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq41_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_filter;

			public seq41_join(
				System.Collections.IEnumerable var1_filter
			)
			{
				this.var1_filter = var1_filter;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq41_join closure;
				private IEnumerator var2_filter;
				private IEnumerator var3_Crs;
				public Enumerator(seq41_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_filter = (closure.var1_filter).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_filter.MoveNext()) { state = 3; goto case 3; }
							var3_Crs = ((new seq42_Crs((Altova.Mapforce.IMFNode)(var2_filter.Current)))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_filter); var2_filter = null;
							return false;
						case 4:
							state = 4;
							if (!var3_Crs.MoveNext()) { state = 5; goto case 5; }
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LocalAuthorityCrsName", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var3_Crs.Current)));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Crs); var3_Crs = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Crs); var3_Crs = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_filter); var2_filter = null;
				}
			}
		}
		class seq42_Crs : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_current;

			public seq42_Crs(
				Altova.Mapforce.IMFNode var1_current
			)
			{
				this.var1_current = var1_current;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq42_Crs closure;
				private Altova.Mapforce.IMFNode var2_Crs;
				public Enumerator(seq42_Crs closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							var2_Crs = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Crs", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_current)));
							if (!((bool)Altova.Functions.Core.First((new seq5_CoreAny((new seq34_map(var2_Crs))))))) { state = 0; return false; }
							current = var2_Crs;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq43_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_first_items;
			private readonly System.Collections.IEnumerable var2_seq_;
			private readonly System.Collections.IEnumerable var3_WellDatum;
			private readonly System.Collections.IEnumerable var4_filter;
			private readonly System.Collections.IEnumerable var5_filter;
			private readonly Altova.Functions.RuntimeContext var6_state;
			private readonly Altova.Mapforce.IMFNode var7_cur;

			public seq43_join(
				System.Collections.IEnumerable var1_first_items,
				System.Collections.IEnumerable var2_seq_,
				System.Collections.IEnumerable var3_WellDatum,
				System.Collections.IEnumerable var4_filter,
				System.Collections.IEnumerable var5_filter,
				Altova.Functions.RuntimeContext var6_state,
				Altova.Mapforce.IMFNode var7_cur
			)
			{
				this.var1_first_items = var1_first_items;
				this.var2_seq_ = var2_seq_;
				this.var3_WellDatum = var3_WellDatum;
				this.var4_filter = var4_filter;
				this.var5_filter = var5_filter;
				this.var6_state = var6_state;
				this.var7_cur = var7_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq43_join closure;
				private IEnumerator var8_filter;
				private IEnumerator var9_Original;
				private IEnumerator var19_filter;
				private System.Collections.IEnumerable var10_Original;
				private IEnumerator var11_filter;
				private IEnumerator var20_Description;
				private IEnumerator var29_ExtensionNameValue;
				private System.Collections.IEnumerable var21_Description;
				private IEnumerator var12_Original;
				private IEnumerator var22_filter;
				private System.Collections.IEnumerable var13_select_exists;
				private IEnumerator var14_Original;
				private IEnumerator var23_Description;
				private string var15_cast;
				private System.Collections.IEnumerable var24_select_exists;
				private System.Collections.IEnumerable var16_select_exists;
				private IEnumerator var25_filter;
				private System.Collections.IEnumerable var17_select_exists;
				private IEnumerator var18_result;
				private System.Collections.IEnumerable var26_select_exists;
				private System.Collections.IEnumerable var27_select_exists;
				private IEnumerator var28_result;
				public Enumerator(seq43_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var7_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First((new seq44_last(closure.var1_first_items, closure.var5_filter, closure.var6_state)));
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("latitude", "http://www.witsml.org/schemas/1series"), closure.var2_seq_);
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("longitude", "http://www.witsml.org/schemas/1series"), closure.var2_seq_);
							pos++;
							return true;
						case 5:
							state = 6;
							var8_filter = (closure.var5_filter).GetEnumerator();
							goto case 6;
						case 6:
							state = 8;
							if (!var8_filter.MoveNext()) { state = 7; goto case 7; }
							var9_Original = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Original", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var8_filter.Current))).GetEnumerator();
							goto case 8;
						case 7:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var8_filter); var8_filter = null;
							var19_filter = (closure.var4_filter).GetEnumerator();
							goto case 19;
						case 8:
							state = 10;
							if (!var9_Original.MoveNext()) { state = 9; goto case 9; }
							var10_Original = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Original", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var7_cur));
							var11_filter = ((new seq48_join(var10_Original, closure.var3_WellDatum))).GetEnumerator();
							goto case 10;
						case 9:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var9_Original); var9_Original = null;
							goto case 6;
						case 10:
							state = 12;
							if (!var11_filter.MoveNext()) { state = 11; goto case 11; }
							if (!((bool)Altova.Functions.Core.First((new seq5_CoreAny((new seq7_map((Altova.Mapforce.IMFNode)(var11_filter.Current)))))))) { state = 10; goto case 10;  }
							var12_Original = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Original", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var11_filter.Current))).GetEnumerator();
							goto case 12;
						case 11:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var11_filter); var11_filter = null;
							goto case 8;
						case 12:
							state = 14;
							if (!var12_Original.MoveNext()) { state = 13; goto case 13; }
							var13_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var6_state, Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var12_Original.Current)))), (new seq25_seq_())));
							var14_Original = (var10_Original).GetEnumerator();
							goto case 14;
						case 13:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var12_Original); var12_Original = null;
							goto case 10;
						case 14:
							state = 16;
							if (!var14_Original.MoveNext()) { state = 15; goto case 15; }
							var15_cast = (Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var14_Original.Current)))));
							var16_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var6_state, var15_cast, var13_select_exists));
							var17_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var6_state, Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var9_Original.Current)))), var16_select_exists));
							var18_result = (var17_select_exists).GetEnumerator();
							goto case 16;
						case 15:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var14_Original); var14_Original = null;
							goto case 12;
						case 16:
							state = 16;
							if (!var18_result.MoveNext()) { state = 17; goto case 17; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("original", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean((string)(var18_result.Current)))));
							pos++;
							return true;
						case 17:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var18_result); var18_result = null;
							goto case 14;
						case 19:
							state = 21;
							if (!var19_filter.MoveNext()) { state = 20; goto case 20; }
							var20_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var19_filter.Current))).GetEnumerator();
							goto case 21;
						case 20:
							state = 32;
							Altova.Mapforce.MFEnumerator.Dispose(var19_filter); var19_filter = null;
							var29_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var7_cur)).GetEnumerator();
							goto case 32;
						case 21:
							state = 23;
							if (!var20_Description.MoveNext()) { state = 22; goto case 22; }
							var21_Description = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var7_cur));
							var22_filter = ((new seq49_join(var21_Description, closure.var3_WellDatum))).GetEnumerator();
							goto case 23;
						case 22:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var20_Description); var20_Description = null;
							goto case 19;
						case 23:
							state = 25;
							if (!var22_filter.MoveNext()) { state = 24; goto case 24; }
							if (!((bool)Altova.Functions.Core.First((new seq5_CoreAny((new seq7_map((Altova.Mapforce.IMFNode)(var22_filter.Current)))))))) { state = 23; goto case 23;  }
							var23_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var22_filter.Current))).GetEnumerator();
							goto case 25;
						case 24:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var22_filter); var22_filter = null;
							goto case 21;
						case 25:
							state = 27;
							if (!var23_Description.MoveNext()) { state = 26; goto case 26; }
							var24_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var6_state, Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var23_Description.Current)), (new seq25_seq_())));
							var25_filter = (var21_Description).GetEnumerator();
							goto case 27;
						case 26:
							state = 23;
							Altova.Mapforce.MFEnumerator.Dispose(var23_Description); var23_Description = null;
							goto case 23;
						case 27:
							state = 29;
							if (!var25_filter.MoveNext()) { state = 28; goto case 28; }
							var26_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var6_state, Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var25_filter.Current)), var24_select_exists));
							var27_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var6_state, Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var20_Description.Current)), var26_select_exists));
							var28_result = (var27_select_exists).GetEnumerator();
							goto case 29;
						case 28:
							state = 25;
							Altova.Mapforce.MFEnumerator.Dispose(var25_filter); var25_filter = null;
							goto case 25;
						case 29:
							state = 29;
							if (!var28_result.MoveNext()) { state = 30; goto case 30; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box((string)(var28_result.Current)));
							pos++;
							return true;
						case 30:
							state = 27;
							Altova.Mapforce.MFEnumerator.Dispose(var28_result); var28_result = null;
							goto case 27;
						case 32:
							state = 32;
							if (!var29_ExtensionNameValue.MoveNext()) { state = 33; goto case 33; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (new seq30_join((Altova.Mapforce.IMFNode)(var29_ExtensionNameValue.Current))));
							pos++;
							return true;
						case 33:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var29_ExtensionNameValue); var29_ExtensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var18_result); var18_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_Original); var14_Original = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_Original); var12_Original = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_filter); var11_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_Original); var9_Original = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_filter); var8_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var28_result); var28_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var25_filter); var25_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var23_Description); var23_Description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_filter); var22_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_Description); var20_Description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_filter); var19_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var29_ExtensionNameValue); var29_ExtensionNameValue = null;
				}
			}
		}
		class seq44_last : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_first_items;
			private readonly System.Collections.IEnumerable var2_filter;
			private readonly Altova.Functions.RuntimeContext var3_state;

			public seq44_last(
				System.Collections.IEnumerable var1_first_items,
				System.Collections.IEnumerable var2_filter,
				Altova.Functions.RuntimeContext var3_state
			)
			{
				this.var1_first_items = var1_first_items;
				this.var2_filter = var2_filter;
				this.var3_state = var3_state;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq44_last closure;
				private string var4_last;
				private System.Collections.IEnumerable var5_first_items;
				private System.Collections.IEnumerable var6_value;
				public Enumerator(seq44_last closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							var4_last = ((string)Altova.Functions.Core.Last((new seq45_if_exists(closure.var1_first_items))));
							var5_first_items = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FirstItems((new seq36_join(closure.var2_filter)), 1m));
							var6_value = new Altova.Functions.Core.SequenceCache((new seq46_seq_(var5_first_items, var4_last, closure.var3_state)));
							Altova.Functions.Core.Exists(var6_value);
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wellCRS", "http://www.witsml.org/schemas/1series"), var6_value);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq45_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_first_items;

			public seq45_if_exists(
				System.Collections.IEnumerable var1_first_items
			)
			{
				this.var1_first_items = var1_first_items;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq45_if_exists closure;
				private IEnumerator var2_first_items;
				public Enumerator(seq45_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_first_items))) { state = 2; goto case 2;  }
							var2_first_items = (closure.var1_first_items).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = "fake_wellCRS";
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var2_first_items.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_first_items.Current));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_first_items); var2_first_items = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_first_items); var2_first_items = null;
				}
			}
		}
		class seq46_seq_ : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_first_items;
			private readonly string var2_cur;
			private readonly Altova.Functions.RuntimeContext var3_state;

			public seq46_seq_(
				System.Collections.IEnumerable var1_first_items,
				string var2_cur,
				Altova.Functions.RuntimeContext var3_state
			)
			{
				this.var1_first_items = var1_first_items;
				this.var2_cur = var2_cur;
				this.var3_state = var3_state;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq46_seq_ closure;
				private System.Collections.IEnumerable var4_value;
				public Enumerator(seq46_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var4_value = new Altova.Functions.Core.SequenceCache((new seq47_if_exists(closure.var1_first_items, closure.var3_state)));
							Altova.Functions.Core.Exists(var4_value);
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uidRef", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.Last(var4_value)));
							pos++;
							return true;
						case 2:
							state = 0;
							current = closure.var2_cur;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq47_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_first_items;
			private readonly Altova.Functions.RuntimeContext var2_state;

			public seq47_if_exists(
				System.Collections.IEnumerable var1_first_items,
				Altova.Functions.RuntimeContext var2_state
			)
			{
				this.var1_first_items = var1_first_items;
				this.var2_state = var2_state;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq47_if_exists closure;
				private IEnumerator var3_first_items;
				public Enumerator(seq47_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_first_items))) { state = 2; goto case 2;  }
							var3_first_items = (closure.var1_first_items).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = Altova.Functions.Core.Concat("", Altova.Functions.Lang.CreateGuid(closure.var2_state));
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var3_first_items.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_first_items.Current));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
				}
			}
		}
		class seq48_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_Original;
			private readonly System.Collections.IEnumerable var2_WellDatum;

			public seq48_join(
				System.Collections.IEnumerable var1_Original,
				System.Collections.IEnumerable var2_WellDatum
			)
			{
				this.var1_Original = var1_Original;
				this.var2_WellDatum = var2_WellDatum;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq48_join closure;
				private IEnumerator var3_Original;
				private IEnumerator var4_WellDatum;
				private IEnumerator var5_HorizontalLocation;
				public Enumerator(seq48_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_Original = (closure.var1_Original).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var3_Original.MoveNext()) { state = 3; goto case 3; }
							var4_WellDatum = (closure.var2_WellDatum).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Original); var3_Original = null;
							return false;
						case 4:
							state = 6;
							if (!var4_WellDatum.MoveNext()) { state = 5; goto case 5; }
							var5_HorizontalLocation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("HorizontalLocation", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_WellDatum.Current))).GetEnumerator();
							goto case 6;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var4_WellDatum); var4_WellDatum = null;
							goto case 2;
						case 6:
							state = 6;
							if (!var5_HorizontalLocation.MoveNext()) { state = 7; goto case 7; }
							current = var5_HorizontalLocation.Current;
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var5_HorizontalLocation); var5_HorizontalLocation = null;
							goto case 4;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_HorizontalLocation); var5_HorizontalLocation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_WellDatum); var4_WellDatum = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_Original); var3_Original = null;
				}
			}
		}
		class seq49_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_filter;
			private readonly System.Collections.IEnumerable var2_WellDatum;

			public seq49_join(
				System.Collections.IEnumerable var1_filter,
				System.Collections.IEnumerable var2_WellDatum
			)
			{
				this.var1_filter = var1_filter;
				this.var2_WellDatum = var2_WellDatum;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq49_join closure;
				private IEnumerator var3_filter;
				private IEnumerator var4_WellDatum;
				private IEnumerator var5_HorizontalLocation;
				public Enumerator(seq49_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_filter = (closure.var1_filter).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var3_filter.MoveNext()) { state = 3; goto case 3; }
							var4_WellDatum = (closure.var2_WellDatum).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_filter); var3_filter = null;
							return false;
						case 4:
							state = 6;
							if (!var4_WellDatum.MoveNext()) { state = 5; goto case 5; }
							var5_HorizontalLocation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("HorizontalLocation", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_WellDatum.Current))).GetEnumerator();
							goto case 6;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var4_WellDatum); var4_WellDatum = null;
							goto case 2;
						case 6:
							state = 6;
							if (!var5_HorizontalLocation.MoveNext()) { state = 7; goto case 7; }
							current = var5_HorizontalLocation.Current;
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var5_HorizontalLocation); var5_HorizontalLocation = null;
							goto case 4;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_HorizontalLocation); var5_HorizontalLocation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_WellDatum); var4_WellDatum = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_filter); var3_filter = null;
				}
			}
		}
		class seq50_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq50_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq50_join closure;
				private IEnumerator var2_PrincipalMeridian;
				private IEnumerator var3_Range;
				private IEnumerator var4_RangeDir;
				private IEnumerator var5_Township;
				private IEnumerator var6_TownshipDir;
				private IEnumerator var7_Section;
				private IEnumerator var8_QuarterSection;
				private IEnumerator var9_QuarterTownship;
				private IEnumerator var10_FootageNS;
				private IEnumerator var11_FootageEW;
				public Enumerator(seq50_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_PrincipalMeridian = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PrincipalMeridian", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_PrincipalMeridian.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("principalMeridian", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_PrincipalMeridian.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_PrincipalMeridian); var2_PrincipalMeridian = null;
							var3_Range = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Range", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_Range.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("range", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_Range.Current))))))))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Range); var3_Range = null;
							var4_RangeDir = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("RangeDir", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var4_RangeDir.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("rangeDir", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_RangeDir.Current))));
							pos++;
							return true;
						case 9:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var4_RangeDir); var4_RangeDir = null;
							var5_Township = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Township", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var5_Township.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("township", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_Township.Current))))))))));
							pos++;
							return true;
						case 12:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Township); var5_Township = null;
							var6_TownshipDir = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TownshipDir", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 14;
						case 14:
							state = 14;
							if (!var6_TownshipDir.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("townshipDir", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_TownshipDir.Current))));
							pos++;
							return true;
						case 15:
							state = 17;
							Altova.Mapforce.MFEnumerator.Dispose(var6_TownshipDir); var6_TownshipDir = null;
							var7_Section = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Section", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 17;
						case 17:
							state = 17;
							if (!var7_Section.MoveNext()) { state = 18; goto case 18; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("section", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_Section.Current))));
							pos++;
							return true;
						case 18:
							state = 20;
							Altova.Mapforce.MFEnumerator.Dispose(var7_Section); var7_Section = null;
							var8_QuarterSection = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("QuarterSection", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 20;
						case 20:
							state = 20;
							if (!var8_QuarterSection.MoveNext()) { state = 21; goto case 21; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("quarterSection", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_QuarterSection.Current))));
							pos++;
							return true;
						case 21:
							state = 23;
							Altova.Mapforce.MFEnumerator.Dispose(var8_QuarterSection); var8_QuarterSection = null;
							var9_QuarterTownship = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("QuarterTownship", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 23;
						case 23:
							state = 23;
							if (!var9_QuarterTownship.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("quarterTownship", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var9_QuarterTownship.Current))));
							pos++;
							return true;
						case 24:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var9_QuarterTownship); var9_QuarterTownship = null;
							var10_FootageNS = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("FootageNS", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 26;
						case 26:
							state = 26;
							if (!var10_FootageNS.MoveNext()) { state = 27; goto case 27; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("footageNS", "http://www.witsml.org/schemas/1series"), tbf.tbf5_footageNorthSouth.Eval((Altova.Mapforce.IMFNode)(var10_FootageNS.Current)));
							pos++;
							return true;
						case 27:
							state = 29;
							Altova.Mapforce.MFEnumerator.Dispose(var10_FootageNS); var10_FootageNS = null;
							var11_FootageEW = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("FootageEW", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 29;
						case 29:
							state = 29;
							if (!var11_FootageEW.MoveNext()) { state = 30; goto case 30; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("footageEW", "http://www.witsml.org/schemas/1series"), tbf.tbf6_footageEastWest.Eval((Altova.Mapforce.IMFNode)(var11_FootageEW.Current)));
							pos++;
							return true;
						case 30:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var11_FootageEW); var11_FootageEW = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_PrincipalMeridian); var2_PrincipalMeridian = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_Range); var3_Range = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_RangeDir); var4_RangeDir = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Township); var5_Township = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_TownshipDir); var6_TownshipDir = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_Section); var7_Section = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_QuarterSection); var8_QuarterSection = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_QuarterTownship); var9_QuarterTownship = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_FootageNS); var10_FootageNS = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_FootageEW); var11_FootageEW = null;
				}
			}
		}
		class seq51_filter : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_Location;

			public seq51_filter(
				System.Collections.IEnumerable var1_Location
			)
			{
				this.var1_Location = var1_Location;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq51_filter closure;
				private IEnumerator var2_Location;
				public Enumerator(seq51_filter closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Location = (closure.var1_Location).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_Location.MoveNext()) { state = 3; goto case 3; }
							if (!((bool)Altova.Functions.Core.First((new seq5_CoreAny((new seq4_map((Altova.Mapforce.IMFNode)(var2_Location.Current)))))))) { state = 2; goto case 2;  }
							current = var2_Location.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Location); var2_Location = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Location); var2_Location = null;
				}
			}
		}
		class seq52_map : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_Location;

			public seq52_map(
				System.Collections.IEnumerable var1_Location
			)
			{
				this.var1_Location = var1_Location;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq52_map closure;
				private IEnumerator var2_Location;
				public Enumerator(seq52_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Location = (closure.var1_Location).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_Location.MoveNext()) { state = 3; goto case 3; }
							current = (bool)Altova.Functions.Core.First((new seq5_CoreAny((new seq4_map((Altova.Mapforce.IMFNode)(var2_Location.Current))))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Location); var2_Location = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Location); var2_Location = null;
				}
			}
		}
		class seq53_join : IEnumerable
		{
			private readonly bool var1_any;
			private readonly System.Collections.IEnumerable var2_filter;
			private readonly System.Collections.IEnumerable var3_filter;
			private readonly Altova.Mapforce.IMFNode var4_cur;
			private readonly Altova.Functions.RuntimeContext var5_state;

			public seq53_join(
				bool var1_any,
				System.Collections.IEnumerable var2_filter,
				System.Collections.IEnumerable var3_filter,
				Altova.Mapforce.IMFNode var4_cur,
				Altova.Functions.RuntimeContext var5_state
			)
			{
				this.var1_any = var1_any;
				this.var2_filter = var2_filter;
				this.var3_filter = var3_filter;
				this.var4_cur = var4_cur;
				this.var5_state = var5_state;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq53_join closure;
				private IEnumerator var6_Type;
				private IEnumerator var7_Elevation;
				private IEnumerator var8_MeasuredDepth;
				private System.Collections.IEnumerable var9_value;
				private IEnumerator var10_Description;
				private IEnumerator var11_ExtensionNameValue;
				public Enumerator(seq53_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var4_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var4_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var6_Type = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Type", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var4_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var6_Type.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("type", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_Type.Current))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var6_Type); var6_Type = null;
							var7_Elevation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Elevation", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var4_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var7_Elevation.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("elevation", "http://www.witsml.org/schemas/1series"), tbf.tbf2_wellElevationCoord.Eval((Altova.Mapforce.IMFNode)(var7_Elevation.Current)));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var7_Elevation); var7_Elevation = null;
							var8_MeasuredDepth = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MeasuredDepth", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var4_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var8_MeasuredDepth.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("measuredDepth", "http://www.witsml.org/schemas/1series"), tbf.tbf3_measuredDepthCoord.Eval((Altova.Mapforce.IMFNode)(var8_MeasuredDepth.Current)));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var8_MeasuredDepth); var8_MeasuredDepth = null;
							var9_value = new Altova.Functions.Core.SequenceCache((new seq54_join(closure.var1_any, closure.var2_filter, closure.var3_filter, closure.var5_state)));
							Altova.Functions.Core.Exists(var9_value);
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("location", "http://www.witsml.org/schemas/1series"), var9_value);
							pos++;
							return true;
						case 13:
							state = 14;
							var10_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var4_cur)).GetEnumerator();
							goto case 14;
						case 14:
							state = 14;
							if (!var10_Description.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var10_Description.Current))));
							pos++;
							return true;
						case 15:
							state = 17;
							Altova.Mapforce.MFEnumerator.Dispose(var10_Description); var10_Description = null;
							var11_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var4_cur)).GetEnumerator();
							goto case 17;
						case 17:
							state = 17;
							if (!var11_ExtensionNameValue.MoveNext()) { state = 18; goto case 18; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (new seq62_join((Altova.Mapforce.IMFNode)(var11_ExtensionNameValue.Current))));
							pos++;
							return true;
						case 18:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var11_ExtensionNameValue); var11_ExtensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var6_Type); var6_Type = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_Elevation); var7_Elevation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_MeasuredDepth); var8_MeasuredDepth = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_Description); var10_Description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_ExtensionNameValue); var11_ExtensionNameValue = null;
				}
			}
		}
		class seq54_join : IEnumerable
		{
			private readonly bool var1_any;
			private readonly System.Collections.IEnumerable var2_filter;
			private readonly System.Collections.IEnumerable var3_filter;
			private readonly Altova.Functions.RuntimeContext var4_state;

			public seq54_join(
				bool var1_any,
				System.Collections.IEnumerable var2_filter,
				System.Collections.IEnumerable var3_filter,
				Altova.Functions.RuntimeContext var4_state
			)
			{
				this.var1_any = var1_any;
				this.var2_filter = var2_filter;
				this.var3_filter = var3_filter;
				this.var4_state = var4_state;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq54_join closure;
				private System.Collections.IEnumerable var5_value;
				private IEnumerator var6_filter;
				private IEnumerator var7_Original;
				private IEnumerator var8_filter;
				private IEnumerator var9_Description;
				private IEnumerator var15_filter;
				private IEnumerator var10_filter;
				private IEnumerator var16_ExtensionNameValue;
				private IEnumerator var11_Description;
				private System.Collections.IEnumerable var12_select_exists;
				private System.Collections.IEnumerable var13_select_exists;
				private IEnumerator var14_result;
				public Enumerator(seq54_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var5_value = new Altova.Functions.Core.SequenceCache((new seq55_if_any(closure.var1_any, closure.var2_filter, closure.var4_state)));
							Altova.Functions.Core.Exists(var5_value);
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.Last(var5_value)));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("latitude", "http://www.witsml.org/schemas/1series"), (new seq56_seq_(closure.var1_any, closure.var2_filter)));
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("longitude", "http://www.witsml.org/schemas/1series"), (new seq59_seq_(closure.var1_any, closure.var2_filter)));
							pos++;
							return true;
						case 4:
							state = 5;
							var6_filter = (closure.var2_filter).GetEnumerator();
							goto case 5;
						case 5:
							state = 7;
							if (!var6_filter.MoveNext()) { state = 6; goto case 6; }
							var7_Original = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Original", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var6_filter.Current))).GetEnumerator();
							goto case 7;
						case 6:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var6_filter); var6_filter = null;
							var8_filter = (closure.var2_filter).GetEnumerator();
							goto case 10;
						case 7:
							state = 7;
							if (!var7_Original.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("original", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_Original.Current))))));
							pos++;
							return true;
						case 8:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var7_Original); var7_Original = null;
							goto case 5;
						case 10:
							state = 12;
							if (!var8_filter.MoveNext()) { state = 11; goto case 11; }
							var9_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var8_filter.Current))).GetEnumerator();
							goto case 12;
						case 11:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var8_filter); var8_filter = null;
							var15_filter = (closure.var2_filter).GetEnumerator();
							goto case 21;
						case 12:
							state = 14;
							if (!var9_Description.MoveNext()) { state = 13; goto case 13; }
							var10_filter = (closure.var3_filter).GetEnumerator();
							goto case 14;
						case 13:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var9_Description); var9_Description = null;
							goto case 10;
						case 14:
							state = 16;
							if (!var10_filter.MoveNext()) { state = 15; goto case 15; }
							var11_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var10_filter.Current))).GetEnumerator();
							goto case 16;
						case 15:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var10_filter); var10_filter = null;
							goto case 12;
						case 16:
							state = 18;
							if (!var11_Description.MoveNext()) { state = 17; goto case 17; }
							var12_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var4_state, Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var11_Description.Current)), (new seq25_seq_())));
							var13_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var4_state, Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var9_Description.Current)), var12_select_exists));
							var14_result = (var13_select_exists).GetEnumerator();
							goto case 18;
						case 17:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var11_Description); var11_Description = null;
							goto case 14;
						case 18:
							state = 18;
							if (!var14_result.MoveNext()) { state = 19; goto case 19; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box((string)(var14_result.Current)));
							pos++;
							return true;
						case 19:
							state = 16;
							Altova.Mapforce.MFEnumerator.Dispose(var14_result); var14_result = null;
							goto case 16;
						case 21:
							state = 23;
							if (!var15_filter.MoveNext()) { state = 22; goto case 22; }
							var16_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var15_filter.Current))).GetEnumerator();
							goto case 23;
						case 22:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var15_filter); var15_filter = null;
							return false;
						case 23:
							state = 23;
							if (!var16_ExtensionNameValue.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (new seq30_join((Altova.Mapforce.IMFNode)(var16_ExtensionNameValue.Current))));
							pos++;
							return true;
						case 24:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var16_ExtensionNameValue); var16_ExtensionNameValue = null;
							goto case 21;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var7_Original); var7_Original = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_filter); var6_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_result); var14_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_Description); var11_Description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_filter); var10_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_Description); var9_Description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_filter); var8_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_ExtensionNameValue); var16_ExtensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_filter); var15_filter = null;
				}
			}
		}
		class seq55_if_any : IEnumerable
		{
			private readonly bool var1_any;
			private readonly System.Collections.IEnumerable var2_filter;
			private readonly Altova.Functions.RuntimeContext var3_state;

			public seq55_if_any(
				bool var1_any,
				System.Collections.IEnumerable var2_filter,
				Altova.Functions.RuntimeContext var3_state
			)
			{
				this.var1_any = var1_any;
				this.var2_filter = var2_filter;
				this.var3_state = var3_state;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq55_if_any closure;
				private IEnumerator var4_filter;
				public Enumerator(seq55_if_any closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(closure.var1_any)) { state = 2; goto case 2;  }
							var4_filter = (closure.var2_filter).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = Altova.Functions.Core.Concat("", Altova.Functions.Lang.CreateGuid(closure.var3_state));
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var4_filter.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), (Altova.Mapforce.IMFNode)(var4_filter.Current))));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_filter); var4_filter = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_filter); var4_filter = null;
				}
			}
		}
		class seq56_seq_ : IEnumerable
		{
			private readonly bool var1_any;
			private readonly System.Collections.IEnumerable var2_filter;

			public seq56_seq_(
				bool var1_any,
				System.Collections.IEnumerable var2_filter
			)
			{
				this.var1_any = var1_any;
				this.var2_filter = var2_filter;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq56_seq_ closure;
				public Enumerator(seq56_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.Last((new seq57_if_any(closure.var1_any, closure.var2_filter)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString((double)Altova.Functions.Core.Last((new seq58_if_any(closure.var1_any, closure.var2_filter))));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq57_if_any : IEnumerable
		{
			private readonly bool var1_any;
			private readonly System.Collections.IEnumerable var2_filter;

			public seq57_if_any(
				bool var1_any,
				System.Collections.IEnumerable var2_filter
			)
			{
				this.var1_any = var1_any;
				this.var2_filter = var2_filter;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq57_if_any closure;
				private IEnumerator var3_filter;
				public Enumerator(seq57_if_any closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(closure.var1_any)) { state = 2; goto case 2;  }
							var3_filter = (closure.var2_filter).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = "dega";
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var3_filter.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Latitude", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_filter.Current))))));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_filter); var3_filter = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_filter); var3_filter = null;
				}
			}
		}
		class seq58_if_any : IEnumerable
		{
			private readonly bool var1_any;
			private readonly System.Collections.IEnumerable var2_filter;

			public seq58_if_any(
				bool var1_any,
				System.Collections.IEnumerable var2_filter
			)
			{
				this.var1_any = var1_any;
				this.var2_filter = var2_filter;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq58_if_any closure;
				private IEnumerator var3_filter;
				public Enumerator(seq58_if_any closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(closure.var1_any)) { state = 2; goto case 2;  }
							var3_filter = (closure.var2_filter).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DecimalToDouble(0m);
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var3_filter.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Latitude", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_filter.Current)))));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_filter); var3_filter = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_filter); var3_filter = null;
				}
			}
		}
		class seq59_seq_ : IEnumerable
		{
			private readonly bool var1_any;
			private readonly System.Collections.IEnumerable var2_filter;

			public seq59_seq_(
				bool var1_any,
				System.Collections.IEnumerable var2_filter
			)
			{
				this.var1_any = var1_any;
				this.var2_filter = var2_filter;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq59_seq_ closure;
				public Enumerator(seq59_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.Last((new seq60_if_any(closure.var1_any, closure.var2_filter)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString((double)Altova.Functions.Core.Last((new seq61_if_any(closure.var1_any, closure.var2_filter))));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq60_if_any : IEnumerable
		{
			private readonly bool var1_any;
			private readonly System.Collections.IEnumerable var2_filter;

			public seq60_if_any(
				bool var1_any,
				System.Collections.IEnumerable var2_filter
			)
			{
				this.var1_any = var1_any;
				this.var2_filter = var2_filter;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq60_if_any closure;
				private IEnumerator var3_filter;
				public Enumerator(seq60_if_any closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(closure.var1_any)) { state = 2; goto case 2;  }
							var3_filter = (closure.var2_filter).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = "dega";
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var3_filter.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Longitude", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_filter.Current))))));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_filter); var3_filter = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_filter); var3_filter = null;
				}
			}
		}
		class seq61_if_any : IEnumerable
		{
			private readonly bool var1_any;
			private readonly System.Collections.IEnumerable var2_filter;

			public seq61_if_any(
				bool var1_any,
				System.Collections.IEnumerable var2_filter
			)
			{
				this.var1_any = var1_any;
				this.var2_filter = var2_filter;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq61_if_any closure;
				private IEnumerator var3_filter;
				public Enumerator(seq61_if_any closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(closure.var1_any)) { state = 2; goto case 2;  }
							var3_filter = (closure.var2_filter).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DecimalToDouble(0m);
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var3_filter.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Longitude", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_filter.Current)))));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_filter); var3_filter = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_filter); var3_filter = null;
				}
			}
		}
		class seq62_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq62_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq62_join closure;
				private IEnumerator var2_DTim;
				private IEnumerator var3_Index;
				private IEnumerator var4_MeasureClass;
				private IEnumerator var5_Description;
				public Enumerator(seq62_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), tbf.tbf7_extensionvalue.Eval((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Value", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur))));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_DTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTim", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var2_DTim.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_DTim.Current))))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_DTim); var2_DTim = null;
							var3_Index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Index", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var3_Index.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_Index.Current))))))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
							var4_MeasureClass = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_MeasureClass.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_MeasureClass.Current))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_MeasureClass); var4_MeasureClass = null;
							var5_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_Description.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_Description.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_DTim); var2_DTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_MeasureClass); var4_MeasureClass = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
				}
			}
		}
		class seq63_Crs : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_current;

			public seq63_Crs(
				Altova.Mapforce.IMFNode var1_current
			)
			{
				this.var1_current = var1_current;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq63_Crs closure;
				private Altova.Mapforce.IMFNode var2_Crs;
				public Enumerator(seq63_Crs closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							var2_Crs = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Crs", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_current)));
							if (!((bool)Altova.Functions.Core.First((new seq5_CoreAny((new seq64_map(var2_Crs))))))) { state = 0; return false; }
							current = var2_Crs;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq64_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq64_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq64_map closure;
				private IEnumerator var2_type;
				public Enumerator(seq64_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_type = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("type", "http://www.w3.org/2001/XMLSchema-instance"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_type.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Equal(Altova.CoreTypes.NodeToQName((Altova.Mapforce.IMFNode)(var2_type.Current)), Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/commonv2}ProjectedLocalAuthorityCrs"));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
				}
			}
		}
		class seq65_seq_ : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_Crs;
			private readonly Altova.Functions.RuntimeContext var2_state;
			private readonly Altova.Mapforce.IMFNode var3_current;

			public seq65_seq_(
				System.Collections.IEnumerable var1_Crs,
				Altova.Functions.RuntimeContext var2_state,
				Altova.Mapforce.IMFNode var3_current
			)
			{
				this.var1_Crs = var1_Crs;
				this.var2_state = var2_state;
				this.var3_current = var3_current;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq65_seq_ closure;
				public Enumerator(seq65_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.Functions.Core.Concat("", Altova.Functions.Lang.CreateGuid(closure.var2_state))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mapProjection", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("nameCRS", "http://www.witsml.org/schemas/1series"), (new seq66_join(closure.var1_Crs, closure.var3_current)))));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq66_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_Crs;
			private readonly Altova.Mapforce.IMFNode var2_current;

			public seq66_join(
				System.Collections.IEnumerable var1_Crs,
				Altova.Mapforce.IMFNode var2_current
			)
			{
				this.var1_Crs = var1_Crs;
				this.var2_current = var2_current;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq66_join closure;
				private IEnumerator var3_Crs;
				private IEnumerator var4_Crs;
				public Enumerator(seq66_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_Crs = (closure.var1_Crs).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_Crs.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("namingSystem", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LocalAuthorityCrsName", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var3_Crs.Current))))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Crs); var3_Crs = null;
							var4_Crs = (closure.var1_Crs).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var4_Crs.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("code", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("authority", ""), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LocalAuthorityCrsName", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var4_Crs.Current))))))));
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_Crs); var4_Crs = null;
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var2_current)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Crs); var3_Crs = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_Crs); var4_Crs = null;
				}
			}
		}
		class seq67_Crs : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq67_Crs(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq67_Crs closure;
				private Altova.Mapforce.IMFNode var2_Crs;
				public Enumerator(seq67_Crs closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							var2_Crs = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Crs", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)));
							if (!((bool)Altova.Functions.Core.First((new seq5_CoreAny((new seq34_map(var2_Crs))))))) { state = 0; return false; }
							current = var2_Crs;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq68_seq_ : IEnumerable
		{
			private readonly Altova.Functions.RuntimeContext var1_state;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq68_seq_(
				Altova.Functions.RuntimeContext var1_state,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_state = var1_state;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq68_seq_ closure;
				public Enumerator(seq68_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.Functions.Core.Concat("", Altova.Functions.Lang.CreateGuid(closure.var1_state))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("geodeticCRS", "http://www.witsml.org/schemas/1series"), (new seq69_seq_(closure.var2_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq69_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq69_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq69_seq_ closure;
				public Enumerator(seq69_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uidRef", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("authority", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.NodeToString(closure.var1_cur);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq70_Crs : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq70_Crs(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq70_Crs closure;
				private Altova.Mapforce.IMFNode var2_Crs;
				public Enumerator(seq70_Crs closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							var2_Crs = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Crs", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)));
							if (!((bool)Altova.Functions.Core.First((new seq5_CoreAny((new seq64_map(var2_Crs))))))) { state = 0; return false; }
							current = var2_Crs;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq71_seq_ : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_filter;
			private readonly Altova.Functions.RuntimeContext var2_state;
			private readonly Altova.Mapforce.IMFNode var3_cur;

			public seq71_seq_(
				System.Collections.IEnumerable var1_filter,
				Altova.Functions.RuntimeContext var2_state,
				Altova.Mapforce.IMFNode var3_cur
			)
			{
				this.var1_filter = var1_filter;
				this.var2_state = var2_state;
				this.var3_cur = var3_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq71_seq_ closure;
				private System.Collections.IEnumerable var4_value;
				public Enumerator(seq71_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.Functions.Core.Concat("", Altova.Functions.Lang.CreateGuid(closure.var2_state))));
							pos++;
							return true;
						case 2:
							state = 0;
							var4_value = new Altova.Functions.Core.SequenceCache((new seq72_join(closure.var1_filter, closure.var2_state, closure.var3_cur)));
							Altova.Functions.Core.Exists(var4_value);
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mapProjectionCRS", "http://www.witsml.org/schemas/1series"), var4_value);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq72_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_filter;
			private readonly Altova.Functions.RuntimeContext var2_state;
			private readonly Altova.Mapforce.IMFNode var3_cur;

			public seq72_join(
				System.Collections.IEnumerable var1_filter,
				Altova.Functions.RuntimeContext var2_state,
				Altova.Mapforce.IMFNode var3_cur
			)
			{
				this.var1_filter = var1_filter;
				this.var2_state = var2_state;
				this.var3_cur = var3_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq72_join closure;
				private IEnumerator var4_filter;
				private IEnumerator var5_filter;
				private System.Collections.IEnumerable var6_value;
				private System.Collections.IEnumerable var7_select_exists;
				private IEnumerator var8_result;
				public Enumerator(seq72_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var4_filter = (closure.var1_filter).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var4_filter.MoveNext()) { state = 3; goto case 3; }
							var5_filter = (closure.var1_filter).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_filter); var4_filter = null;
							current = Altova.CoreTypes.NodeToString(closure.var3_cur);
							pos++;
							return true;
						case 4:
							state = 6;
							if (!var5_filter.MoveNext()) { state = 5; goto case 5; }
							var6_value = new Altova.Functions.Core.SequenceCache((new seq73_authority(closure.var2_state, closure.var3_cur)));
							Altova.Functions.Core.Exists(var6_value);
							var7_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var2_state, Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_filter.Current)), var6_value));
							var8_result = (var7_select_exists).GetEnumerator();
							goto case 6;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var5_filter); var5_filter = null;
							goto case 2;
						case 6:
							state = 6;
							if (!var8_result.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uidRef", ""), Altova.Functions.Core.Box((string)(var8_result.Current)));
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var8_result); var8_result = null;
							goto case 4;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var8_result); var8_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_filter); var5_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_filter); var4_filter = null;
				}
			}
		}
		class seq73_authority : IEnumerable
		{
			private readonly Altova.Functions.RuntimeContext var1_state;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq73_authority(
				Altova.Functions.RuntimeContext var1_state,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_state = var1_state;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq73_authority closure;
				private Altova.Mapforce.IMFNode var3_authority;
				private System.Collections.IEnumerable var4_select_exists;
				private IEnumerator var5_result;
				public Enumerator(seq73_authority closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_authority = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("authority", ""), closure.var2_cur)));
							var4_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var1_state, Altova.CoreTypes.NodeToString(var3_authority), (new seq25_seq_())));
							var5_result = (var4_select_exists).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var5_result.MoveNext()) { state = 3; goto case 3; }
							current = var5_result.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_result); var5_result = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_result); var5_result = null;
				}
			}
		}
		class seq74_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_Citation;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq74_join(
				Altova.Mapforce.IMFNode var1_Citation,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_Citation = var1_Citation;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq74_join closure;
				private IEnumerator var3_LastUpdate;
				private IEnumerator var4_ExtensionNameValue;
				public Enumerator(seq74_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_LastUpdate = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_Citation)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_LastUpdate.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimLastChange", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_LastUpdate.Current))))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_LastUpdate); var3_LastUpdate = null;
							var4_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/commonv2"), closure.var2_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var4_ExtensionNameValue.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (new seq30_join((Altova.Mapforce.IMFNode)(var4_ExtensionNameValue.Current))));
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_ExtensionNameValue); var4_ExtensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_LastUpdate); var3_LastUpdate = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_ExtensionNameValue); var4_ExtensionNameValue = null;
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_Well_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_Well_Instance
			)
			{
				this.var1_Well_Instance = var1_Well_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_Well;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Well = ((new main(closure.var1_Well_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_Well.MoveNext()) { state = 3; goto case 3; }
							current = var2_Well.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Well); var2_Well = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Well); var2_Well = null;
				}
			}
		}

	}
}
