////////////////////////////////////////////////////////////////////////
//
// Map20To14MapToobj_cementJob.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map20To14
{

	public class Map20To14MapToobj_cementJob : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_CementJob2Instance;
		// members
		#endregion //Members


		public void Run(String CementJob2SourceFilename, string obj_cementJob2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input CementJob2Source = new Altova.IO.FileInput(CementJob2SourceFilename))
			// open target stream
			using (Altova.IO.Output obj_cementJob2Target = new Altova.IO.FileOutput(obj_cementJob2TargetFilename))
			{
				// run
				Run(CementJob2Source, obj_cementJob2Target);
			}
		}

		public void Run(Altova.IO.Input CementJob2Source, Altova.IO.Output obj_cementJob2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + CementJob2Source.Filename + "...\n");
			XmlDocument CementJob2DocSourceObject = XmlTreeOperations.LoadDocument(CementJob2Source);


			m_CementJob2Instance = CementJob2DocSourceObject;
			if (runDoesCloseAll)
				CementJob2Source.Close();
				// Create the target
				XmlDocument obj_cementJob2Doc = (obj_cementJob2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? obj_cementJob2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_CementJob2Instance, CementJob2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, obj_cementJob2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				obj_cementJob2Doc,
				obj_cementJob2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					CementJob2Source.Close();
					obj_cementJob2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_CementJob_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_CementJob_Instance
			)
			{
				this.var1_CementJob_Instance = var1_CementJob_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_CementJob;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_CementJob = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CementJob", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_CementJob_Instance));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("cementJobs", "http://www.witsml.org/schemas/1series"), (new seq1_join(var2_CementJob)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_CementJob;

			public seq1_join(
				System.Collections.IEnumerable var1_CementJob
			)
			{
				this.var1_CementJob = var1_CementJob;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_CementJob;
				private IEnumerator var3_Aliases;
				private IEnumerator var4_CementJob;
				private System.Collections.IEnumerable var5_JobReport;
				private System.Collections.IEnumerable var6_MdHole;
				private Altova.Mapforce.IMFNode var7_Citation;
				private bool var8_any;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("abs", "http://www.energistics.org/schemas/abstract");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.witsml.org/schemas/1series http://w3.energistics.org/schema/WITSML_v1.4.1.1_Data_Schema/witsml_v1.4.1.1_data/xsd_schemas/obj_cementJob.xsd"));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_CementJob = (closure.var1_CementJob).GetEnumerator();
							goto case 4;
						case 4:
							state = 6;
							if (!var2_CementJob.MoveNext()) { state = 5; goto case 5; }
							var3_Aliases = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var2_CementJob.Current))).GetEnumerator();
							goto case 6;
						case 5:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var2_CementJob); var2_CementJob = null;
							var4_CementJob = (closure.var1_CementJob).GetEnumerator();
							goto case 9;
						case 6:
							state = 6;
							if (!var3_Aliases.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("version", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("authority", ""), (Altova.Mapforce.IMFNode)(var3_Aliases.Current))))));
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Aliases); var3_Aliases = null;
							goto case 4;
						case 9:
							state = 9;
							if (!var4_CementJob.MoveNext()) { state = 10; goto case 10; }
							var5_JobReport = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("JobReport", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_CementJob.Current)));
							var6_MdHole = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdHole", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_CementJob.Current)));
							var7_Citation = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var4_CementJob.Current))));
							var8_any = ((bool)Altova.Functions.Core.First((new seq3_CoreAny((new seq2_map(var5_JobReport))))));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("cementJob", "http://www.witsml.org/schemas/1series"), (new seq4_join(var7_Citation, var5_JobReport, var8_any, var6_MdHole, (Altova.Mapforce.IMFNode)(var4_CementJob.Current))));
							pos++;
							return true;
						case 10:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_CementJob); var4_CementJob = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Aliases); var3_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_CementJob); var2_CementJob = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_CementJob); var4_CementJob = null;
				}
			}
		}
		class seq2_map : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_JobReport;

			public seq2_map(
				System.Collections.IEnumerable var1_JobReport
			)
			{
				this.var1_JobReport = var1_JobReport;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_map closure;
				private IEnumerator var2_JobReport;
				public Enumerator(seq2_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_JobReport = (closure.var1_JobReport).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_JobReport.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PlugInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_JobReport.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_JobReport); var2_JobReport = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_JobReport); var2_JobReport = null;
				}
			}
		}
		class seq3_CoreAny : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_sequence;

			public seq3_CoreAny(
				System.Collections.IEnumerable var1_sequence
			)
			{
				this.var1_sequence = var1_sequence;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_CoreAny closure;
				private IEnumerator var2_enum;
				public Enumerator(seq3_CoreAny closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_enum = (closure.var1_sequence).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_enum.MoveNext()) { state = 3; goto case 3; }
							if (!((bool)(var2_enum.Current))) { state = 2; goto case 2;  }
							current = Altova.CoreTypes.ParseBoolean("true");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.CoreTypes.ParseBoolean("false");
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_enum); var2_enum = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_enum); var2_enum = null;
				}
			}
		}
		class seq4_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_Citation;
			private readonly System.Collections.IEnumerable var2_JobReport;
			private readonly bool var3_any;
			private readonly System.Collections.IEnumerable var4_MdHole;
			private readonly Altova.Mapforce.IMFNode var5_cur;

			public seq4_join(
				Altova.Mapforce.IMFNode var1_Citation,
				System.Collections.IEnumerable var2_JobReport,
				bool var3_any,
				System.Collections.IEnumerable var4_MdHole,
				Altova.Mapforce.IMFNode var5_cur
			)
			{
				this.var1_Citation = var1_Citation;
				this.var2_JobReport = var2_JobReport;
				this.var3_any = var3_any;
				this.var4_MdHole = var4_MdHole;
				this.var5_cur = var5_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_join closure;
				private IEnumerator var6_JobType;
				private IEnumerator var7_JobConfig;
				private IEnumerator var8_NameCementedString;
				private IEnumerator var9_HoleConfig;
				private IEnumerator var10_NameWorkString;
				private IEnumerator var11_JobReport;
				private IEnumerator var12_Contractor;
				private IEnumerator var13_if_any;
				private IEnumerator var14_OffshoreJob;
				private IEnumerator var15_MdWater;
				private IEnumerator var16_ReturnsToSeabed;
				private IEnumerator var17_if_any;
				private IEnumerator var18_if_any;
				private IEnumerator var19_if_any;
				private IEnumerator var20_if_exists;
				private IEnumerator var21_MdPrevShoe;
				private IEnumerator var22_TvdPrevShoe;
				private IEnumerator var23_MdStringSet;
				private IEnumerator var24_TvdStringSet;
				private IEnumerator var25_JobReport;
				private IEnumerator var26_CementReportStage;
				private IEnumerator var28_TypePlug;
				private System.Collections.IEnumerable var27_StageMdInterval;
				private IEnumerator var29_NameCementString;
				private IEnumerator var30_JobReport;
				private IEnumerator var31_DTimPlugSet;
				private IEnumerator var32_JobReport;
				private IEnumerator var33_CementDrillOut;
				private IEnumerator var34_JobReport;
				private IEnumerator var35_DTimCementDrillOut;
				private IEnumerator var36_TypeSqueeze;
				private IEnumerator var37_MdSqueeze;
				private IEnumerator var38_ToolCompany;
				private IEnumerator var39_TypeTool;
				private IEnumerator var40_JobReport;
				private IEnumerator var41_DTimPipeRotStart;
				private IEnumerator var42_JobReport;
				private IEnumerator var43_DTimPipeRotEnd;
				private IEnumerator var44_JobReport;
				private IEnumerator var45_RpmPipe;
				private IEnumerator var46_JobReport;
				private IEnumerator var47_TqInitPipeRot;
				private IEnumerator var48_JobReport;
				private IEnumerator var49_TqPipeAv;
				private IEnumerator var50_JobReport;
				private IEnumerator var51_TqPipeMx;
				private IEnumerator var52_JobReport;
				private IEnumerator var53_OverPull;
				private IEnumerator var54_JobReport;
				private IEnumerator var55_SlackOff;
				private IEnumerator var56_JobReport;
				private IEnumerator var57_RpmPipeRecip;
				private IEnumerator var58_JobReport;
				private IEnumerator var59_LenPipeRecipStroke;
				private IEnumerator var60_CoilTubing;
				private IEnumerator var61_CustomData;
				public Enumerator(seq4_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uidWellbore", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)))))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_Citation)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var6_JobType = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("JobType", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var6_JobType.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("jobType", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_JobType.Current))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var6_JobType); var6_JobType = null;
							var7_JobConfig = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("JobConfig", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var7_JobConfig.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("jobConfig", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_JobConfig.Current))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var7_JobConfig); var7_JobConfig = null;
							var8_NameCementedString = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NameCementedString", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var8_NameCementedString.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("nameCementedString", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_NameCementedString.Current))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var8_NameCementedString); var8_NameCementedString = null;
							var9_HoleConfig = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("HoleConfig", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var9_HoleConfig.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("holeConfig", "http://www.witsml.org/schemas/1series"), (new seq5_seq_()));
							pos++;
							return true;
						case 14:
							state = 16;
							Altova.Mapforce.MFEnumerator.Dispose(var9_HoleConfig); var9_HoleConfig = null;
							var10_NameWorkString = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NameWorkString", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)).GetEnumerator();
							goto case 16;
						case 16:
							state = 16;
							if (!var10_NameWorkString.MoveNext()) { state = 17; goto case 17; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("nameWorkString", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var10_NameWorkString.Current))));
							pos++;
							return true;
						case 17:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var10_NameWorkString); var10_NameWorkString = null;
							var11_JobReport = (closure.var2_JobReport).GetEnumerator();
							goto case 19;
						case 19:
							state = 21;
							if (!var11_JobReport.MoveNext()) { state = 20; goto case 20; }
							var12_Contractor = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Contractor", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var11_JobReport.Current))).GetEnumerator();
							goto case 21;
						case 20:
							state = 24;
							Altova.Mapforce.MFEnumerator.Dispose(var11_JobReport); var11_JobReport = null;
							var13_if_any = ((new seq6_if_any(closure.var2_JobReport, closure.var5_cur))).GetEnumerator();
							goto case 24;
						case 21:
							state = 21;
							if (!var12_Contractor.MoveNext()) { state = 22; goto case 22; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("contractor", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var12_Contractor.Current))));
							pos++;
							return true;
						case 22:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var12_Contractor); var12_Contractor = null;
							goto case 19;
						case 24:
							state = 24;
							if (!var13_if_any.MoveNext()) { state = 25; goto case 25; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("cementEngr", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box((string)(var13_if_any.Current)));
							pos++;
							return true;
						case 25:
							state = 27;
							Altova.Mapforce.MFEnumerator.Dispose(var13_if_any); var13_if_any = null;
							var14_OffshoreJob = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("OffshoreJob", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)).GetEnumerator();
							goto case 27;
						case 27:
							state = 27;
							if (!var14_OffshoreJob.MoveNext()) { state = 28; goto case 28; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("offshoreJob", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var14_OffshoreJob.Current))))));
							pos++;
							return true;
						case 28:
							state = 30;
							Altova.Mapforce.MFEnumerator.Dispose(var14_OffshoreJob); var14_OffshoreJob = null;
							var15_MdWater = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdWater", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)).GetEnumerator();
							goto case 30;
						case 30:
							state = 30;
							if (!var15_MdWater.MoveNext()) { state = 31; goto case 31; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdWater", "http://www.witsml.org/schemas/1series"), tbf.tbf1_lengthMeasure.Eval((Altova.Mapforce.IMFNode)(var15_MdWater.Current)));
							pos++;
							return true;
						case 31:
							state = 33;
							Altova.Mapforce.MFEnumerator.Dispose(var15_MdWater); var15_MdWater = null;
							var16_ReturnsToSeabed = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReturnsToSeabed", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)).GetEnumerator();
							goto case 33;
						case 33:
							state = 33;
							if (!var16_ReturnsToSeabed.MoveNext()) { state = 34; goto case 34; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("returnsToSeabed", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var16_ReturnsToSeabed.Current))))));
							pos++;
							return true;
						case 34:
							state = 36;
							Altova.Mapforce.MFEnumerator.Dispose(var16_ReturnsToSeabed); var16_ReturnsToSeabed = null;
							var17_if_any = ((new seq9_if_any(closure.var2_JobReport, closure.var5_cur))).GetEnumerator();
							goto case 36;
						case 36:
							state = 36;
							if (!var17_if_any.MoveNext()) { state = 37; goto case 37; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("reciprocating", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString((bool)(var17_if_any.Current))));
							pos++;
							return true;
						case 37:
							state = 39;
							Altova.Mapforce.MFEnumerator.Dispose(var17_if_any); var17_if_any = null;
							var18_if_any = ((new seq12_if_any(closure.var2_JobReport, closure.var3_any, closure.var5_cur))).GetEnumerator();
							goto case 39;
						case 39:
							state = 39;
							if (!var18_if_any.MoveNext()) { state = 40; goto case 40; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdPlugTop", "http://www.witsml.org/schemas/1series"), (new seq14_join(closure.var2_JobReport, closure.var3_any, closure.var5_cur, (double)(var18_if_any.Current))));
							pos++;
							return true;
						case 40:
							state = 42;
							Altova.Mapforce.MFEnumerator.Dispose(var18_if_any); var18_if_any = null;
							var19_if_any = ((new seq17_if_any(closure.var2_JobReport, closure.var3_any, closure.var5_cur))).GetEnumerator();
							goto case 42;
						case 42:
							state = 42;
							if (!var19_if_any.MoveNext()) { state = 43; goto case 43; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdPlugBot", "http://www.witsml.org/schemas/1series"), (new seq18_join(closure.var2_JobReport, closure.var3_any, closure.var5_cur, (double)(var19_if_any.Current))));
							pos++;
							return true;
						case 43:
							state = 45;
							Altova.Mapforce.MFEnumerator.Dispose(var19_if_any); var19_if_any = null;
							var20_if_exists = ((new seq20_if_exists(closure.var2_JobReport, closure.var4_MdHole, closure.var5_cur))).GetEnumerator();
							goto case 45;
						case 45:
							state = 45;
							if (!var20_if_exists.MoveNext()) { state = 46; goto case 46; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdHole", "http://www.witsml.org/schemas/1series"), (new seq23_join(closure.var2_JobReport, closure.var4_MdHole, closure.var5_cur, (double)(var20_if_exists.Current))));
							pos++;
							return true;
						case 46:
							state = 48;
							Altova.Mapforce.MFEnumerator.Dispose(var20_if_exists); var20_if_exists = null;
							var21_MdPrevShoe = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdPrevShoe", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)).GetEnumerator();
							goto case 48;
						case 48:
							state = 48;
							if (!var21_MdPrevShoe.MoveNext()) { state = 49; goto case 49; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdShoe", "http://www.witsml.org/schemas/1series"), (new seq26_join((Altova.Mapforce.IMFNode)(var21_MdPrevShoe.Current))));
							pos++;
							return true;
						case 49:
							state = 51;
							Altova.Mapforce.MFEnumerator.Dispose(var21_MdPrevShoe); var21_MdPrevShoe = null;
							var22_TvdPrevShoe = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TvdPrevShoe", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)).GetEnumerator();
							goto case 51;
						case 51:
							state = 51;
							if (!var22_TvdPrevShoe.MoveNext()) { state = 52; goto case 52; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("tvdShoe", "http://www.witsml.org/schemas/1series"), (new seq26_join((Altova.Mapforce.IMFNode)(var22_TvdPrevShoe.Current))));
							pos++;
							return true;
						case 52:
							state = 54;
							Altova.Mapforce.MFEnumerator.Dispose(var22_TvdPrevShoe); var22_TvdPrevShoe = null;
							var23_MdStringSet = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdStringSet", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)).GetEnumerator();
							goto case 54;
						case 54:
							state = 54;
							if (!var23_MdStringSet.MoveNext()) { state = 55; goto case 55; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdStringSet", "http://www.witsml.org/schemas/1series"), (new seq27_join((Altova.Mapforce.IMFNode)(var23_MdStringSet.Current))));
							pos++;
							return true;
						case 55:
							state = 57;
							Altova.Mapforce.MFEnumerator.Dispose(var23_MdStringSet); var23_MdStringSet = null;
							var24_TvdStringSet = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TvdStringSet", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)).GetEnumerator();
							goto case 57;
						case 57:
							state = 57;
							if (!var24_TvdStringSet.MoveNext()) { state = 58; goto case 58; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("tvdStringSet", "http://www.witsml.org/schemas/1series"), (new seq26_join((Altova.Mapforce.IMFNode)(var24_TvdStringSet.Current))));
							pos++;
							return true;
						case 58:
							state = 60;
							Altova.Mapforce.MFEnumerator.Dispose(var24_TvdStringSet); var24_TvdStringSet = null;
							var25_JobReport = (closure.var2_JobReport).GetEnumerator();
							goto case 60;
						case 60:
							state = 62;
							if (!var25_JobReport.MoveNext()) { state = 61; goto case 61; }
							var26_CementReportStage = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CementReportStage", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var25_JobReport.Current))).GetEnumerator();
							goto case 62;
						case 61:
							state = 65;
							Altova.Mapforce.MFEnumerator.Dispose(var25_JobReport); var25_JobReport = null;
							var28_TypePlug = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TypePlug", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)).GetEnumerator();
							goto case 65;
						case 62:
							state = 62;
							if (!var26_CementReportStage.MoveNext()) { state = 63; goto case 63; }
							var27_StageMdInterval = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("StageMdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var26_CementReportStage.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("cementStage", "http://www.witsml.org/schemas/1series"), (new seq28_join(var27_StageMdInterval, (Altova.Mapforce.IMFNode)(var26_CementReportStage.Current), closure.var5_cur)));
							pos++;
							return true;
						case 63:
							state = 60;
							Altova.Mapforce.MFEnumerator.Dispose(var26_CementReportStage); var26_CementReportStage = null;
							goto case 60;
						case 65:
							state = 65;
							if (!var28_TypePlug.MoveNext()) { state = 66; goto case 66; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("typePlug", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var28_TypePlug.Current))));
							pos++;
							return true;
						case 66:
							state = 68;
							Altova.Mapforce.MFEnumerator.Dispose(var28_TypePlug); var28_TypePlug = null;
							var29_NameCementString = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NameCementString", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)).GetEnumerator();
							goto case 68;
						case 68:
							state = 68;
							if (!var29_NameCementString.MoveNext()) { state = 69; goto case 69; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("nameCementString", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var29_NameCementString.Current))));
							pos++;
							return true;
						case 69:
							state = 71;
							Altova.Mapforce.MFEnumerator.Dispose(var29_NameCementString); var29_NameCementString = null;
							var30_JobReport = (closure.var2_JobReport).GetEnumerator();
							goto case 71;
						case 71:
							state = 73;
							if (!var30_JobReport.MoveNext()) { state = 72; goto case 72; }
							var31_DTimPlugSet = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTimPlugSet", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var30_JobReport.Current))).GetEnumerator();
							goto case 73;
						case 72:
							state = 76;
							Altova.Mapforce.MFEnumerator.Dispose(var30_JobReport); var30_JobReport = null;
							var32_JobReport = (closure.var2_JobReport).GetEnumerator();
							goto case 76;
						case 73:
							state = 73;
							if (!var31_DTimPlugSet.MoveNext()) { state = 74; goto case 74; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimPlugSet", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var31_DTimPlugSet.Current))))));
							pos++;
							return true;
						case 74:
							state = 71;
							Altova.Mapforce.MFEnumerator.Dispose(var31_DTimPlugSet); var31_DTimPlugSet = null;
							goto case 71;
						case 76:
							state = 78;
							if (!var32_JobReport.MoveNext()) { state = 77; goto case 77; }
							var33_CementDrillOut = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CementDrillOut", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var32_JobReport.Current))).GetEnumerator();
							goto case 78;
						case 77:
							state = 81;
							Altova.Mapforce.MFEnumerator.Dispose(var32_JobReport); var32_JobReport = null;
							var34_JobReport = (closure.var2_JobReport).GetEnumerator();
							goto case 81;
						case 78:
							state = 78;
							if (!var33_CementDrillOut.MoveNext()) { state = 79; goto case 79; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("cementDrillOut", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var33_CementDrillOut.Current))))));
							pos++;
							return true;
						case 79:
							state = 76;
							Altova.Mapforce.MFEnumerator.Dispose(var33_CementDrillOut); var33_CementDrillOut = null;
							goto case 76;
						case 81:
							state = 83;
							if (!var34_JobReport.MoveNext()) { state = 82; goto case 82; }
							var35_DTimCementDrillOut = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTimCementDrillOut", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var34_JobReport.Current))).GetEnumerator();
							goto case 83;
						case 82:
							state = 86;
							Altova.Mapforce.MFEnumerator.Dispose(var34_JobReport); var34_JobReport = null;
							var36_TypeSqueeze = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TypeSqueeze", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)).GetEnumerator();
							goto case 86;
						case 83:
							state = 83;
							if (!var35_DTimCementDrillOut.MoveNext()) { state = 84; goto case 84; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimCementDrillOut", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var35_DTimCementDrillOut.Current))))));
							pos++;
							return true;
						case 84:
							state = 81;
							Altova.Mapforce.MFEnumerator.Dispose(var35_DTimCementDrillOut); var35_DTimCementDrillOut = null;
							goto case 81;
						case 86:
							state = 86;
							if (!var36_TypeSqueeze.MoveNext()) { state = 87; goto case 87; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("typeSqueeze", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var36_TypeSqueeze.Current))));
							pos++;
							return true;
						case 87:
							state = 89;
							Altova.Mapforce.MFEnumerator.Dispose(var36_TypeSqueeze); var36_TypeSqueeze = null;
							var37_MdSqueeze = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdSqueeze", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)).GetEnumerator();
							goto case 89;
						case 89:
							state = 89;
							if (!var37_MdSqueeze.MoveNext()) { state = 90; goto case 90; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdSqueeze", "http://www.witsml.org/schemas/1series"), (new seq34_seq_((Altova.Mapforce.IMFNode)(var37_MdSqueeze.Current))));
							pos++;
							return true;
						case 90:
							state = 92;
							Altova.Mapforce.MFEnumerator.Dispose(var37_MdSqueeze); var37_MdSqueeze = null;
							var38_ToolCompany = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ToolCompany", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)).GetEnumerator();
							goto case 92;
						case 92:
							state = 92;
							if (!var38_ToolCompany.MoveNext()) { state = 93; goto case 93; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("toolCompany", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var38_ToolCompany.Current))));
							pos++;
							return true;
						case 93:
							state = 95;
							Altova.Mapforce.MFEnumerator.Dispose(var38_ToolCompany); var38_ToolCompany = null;
							var39_TypeTool = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TypeTool", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)).GetEnumerator();
							goto case 95;
						case 95:
							state = 95;
							if (!var39_TypeTool.MoveNext()) { state = 96; goto case 96; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("typeTool", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var39_TypeTool.Current))));
							pos++;
							return true;
						case 96:
							state = 98;
							Altova.Mapforce.MFEnumerator.Dispose(var39_TypeTool); var39_TypeTool = null;
							var40_JobReport = (closure.var2_JobReport).GetEnumerator();
							goto case 98;
						case 98:
							state = 100;
							if (!var40_JobReport.MoveNext()) { state = 99; goto case 99; }
							var41_DTimPipeRotStart = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTimPipeRotStart", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var40_JobReport.Current))).GetEnumerator();
							goto case 100;
						case 99:
							state = 103;
							Altova.Mapforce.MFEnumerator.Dispose(var40_JobReport); var40_JobReport = null;
							var42_JobReport = (closure.var2_JobReport).GetEnumerator();
							goto case 103;
						case 100:
							state = 100;
							if (!var41_DTimPipeRotStart.MoveNext()) { state = 101; goto case 101; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimPipeRotStart", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var41_DTimPipeRotStart.Current))))));
							pos++;
							return true;
						case 101:
							state = 98;
							Altova.Mapforce.MFEnumerator.Dispose(var41_DTimPipeRotStart); var41_DTimPipeRotStart = null;
							goto case 98;
						case 103:
							state = 105;
							if (!var42_JobReport.MoveNext()) { state = 104; goto case 104; }
							var43_DTimPipeRotEnd = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTimPipeRotEnd", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var42_JobReport.Current))).GetEnumerator();
							goto case 105;
						case 104:
							state = 108;
							Altova.Mapforce.MFEnumerator.Dispose(var42_JobReport); var42_JobReport = null;
							var44_JobReport = (closure.var2_JobReport).GetEnumerator();
							goto case 108;
						case 105:
							state = 105;
							if (!var43_DTimPipeRotEnd.MoveNext()) { state = 106; goto case 106; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimPipeRotEnd", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var43_DTimPipeRotEnd.Current))))));
							pos++;
							return true;
						case 106:
							state = 103;
							Altova.Mapforce.MFEnumerator.Dispose(var43_DTimPipeRotEnd); var43_DTimPipeRotEnd = null;
							goto case 103;
						case 108:
							state = 110;
							if (!var44_JobReport.MoveNext()) { state = 109; goto case 109; }
							var45_RpmPipe = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("RpmPipe", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var44_JobReport.Current))).GetEnumerator();
							goto case 110;
						case 109:
							state = 113;
							Altova.Mapforce.MFEnumerator.Dispose(var44_JobReport); var44_JobReport = null;
							var46_JobReport = (closure.var2_JobReport).GetEnumerator();
							goto case 113;
						case 110:
							state = 110;
							if (!var45_RpmPipe.MoveNext()) { state = 111; goto case 111; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("rpmPipe", "http://www.witsml.org/schemas/1series"), tbf.tbf14_anglePerTimeMeasure.Eval((Altova.Mapforce.IMFNode)(var45_RpmPipe.Current)));
							pos++;
							return true;
						case 111:
							state = 108;
							Altova.Mapforce.MFEnumerator.Dispose(var45_RpmPipe); var45_RpmPipe = null;
							goto case 108;
						case 113:
							state = 115;
							if (!var46_JobReport.MoveNext()) { state = 114; goto case 114; }
							var47_TqInitPipeRot = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TqInitPipeRot", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var46_JobReport.Current))).GetEnumerator();
							goto case 115;
						case 114:
							state = 118;
							Altova.Mapforce.MFEnumerator.Dispose(var46_JobReport); var46_JobReport = null;
							var48_JobReport = (closure.var2_JobReport).GetEnumerator();
							goto case 118;
						case 115:
							state = 115;
							if (!var47_TqInitPipeRot.MoveNext()) { state = 116; goto case 116; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("tqInitPipeRot", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var47_TqInitPipeRot.Current))))));
							pos++;
							return true;
						case 116:
							state = 113;
							Altova.Mapforce.MFEnumerator.Dispose(var47_TqInitPipeRot); var47_TqInitPipeRot = null;
							goto case 113;
						case 118:
							state = 120;
							if (!var48_JobReport.MoveNext()) { state = 119; goto case 119; }
							var49_TqPipeAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TqPipeAv", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var48_JobReport.Current))).GetEnumerator();
							goto case 120;
						case 119:
							state = 123;
							Altova.Mapforce.MFEnumerator.Dispose(var48_JobReport); var48_JobReport = null;
							var50_JobReport = (closure.var2_JobReport).GetEnumerator();
							goto case 123;
						case 120:
							state = 120;
							if (!var49_TqPipeAv.MoveNext()) { state = 121; goto case 121; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("tqPipeAv", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var49_TqPipeAv.Current))))));
							pos++;
							return true;
						case 121:
							state = 118;
							Altova.Mapforce.MFEnumerator.Dispose(var49_TqPipeAv); var49_TqPipeAv = null;
							goto case 118;
						case 123:
							state = 125;
							if (!var50_JobReport.MoveNext()) { state = 124; goto case 124; }
							var51_TqPipeMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TqPipeMx", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var50_JobReport.Current))).GetEnumerator();
							goto case 125;
						case 124:
							state = 128;
							Altova.Mapforce.MFEnumerator.Dispose(var50_JobReport); var50_JobReport = null;
							var52_JobReport = (closure.var2_JobReport).GetEnumerator();
							goto case 128;
						case 125:
							state = 125;
							if (!var51_TqPipeMx.MoveNext()) { state = 126; goto case 126; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("tqPipeMx", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var51_TqPipeMx.Current))))));
							pos++;
							return true;
						case 126:
							state = 123;
							Altova.Mapforce.MFEnumerator.Dispose(var51_TqPipeMx); var51_TqPipeMx = null;
							goto case 123;
						case 128:
							state = 130;
							if (!var52_JobReport.MoveNext()) { state = 129; goto case 129; }
							var53_OverPull = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("OverPull", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var52_JobReport.Current))).GetEnumerator();
							goto case 130;
						case 129:
							state = 133;
							Altova.Mapforce.MFEnumerator.Dispose(var52_JobReport); var52_JobReport = null;
							var54_JobReport = (closure.var2_JobReport).GetEnumerator();
							goto case 133;
						case 130:
							state = 130;
							if (!var53_OverPull.MoveNext()) { state = 131; goto case 131; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("overPull", "http://www.witsml.org/schemas/1series"), tbf.tbf15_forceMeasure.Eval((Altova.Mapforce.IMFNode)(var53_OverPull.Current)));
							pos++;
							return true;
						case 131:
							state = 128;
							Altova.Mapforce.MFEnumerator.Dispose(var53_OverPull); var53_OverPull = null;
							goto case 128;
						case 133:
							state = 135;
							if (!var54_JobReport.MoveNext()) { state = 134; goto case 134; }
							var55_SlackOff = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SlackOff", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var54_JobReport.Current))).GetEnumerator();
							goto case 135;
						case 134:
							state = 138;
							Altova.Mapforce.MFEnumerator.Dispose(var54_JobReport); var54_JobReport = null;
							var56_JobReport = (closure.var2_JobReport).GetEnumerator();
							goto case 138;
						case 135:
							state = 135;
							if (!var55_SlackOff.MoveNext()) { state = 136; goto case 136; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("slackOff", "http://www.witsml.org/schemas/1series"), tbf.tbf15_forceMeasure.Eval((Altova.Mapforce.IMFNode)(var55_SlackOff.Current)));
							pos++;
							return true;
						case 136:
							state = 133;
							Altova.Mapforce.MFEnumerator.Dispose(var55_SlackOff); var55_SlackOff = null;
							goto case 133;
						case 138:
							state = 140;
							if (!var56_JobReport.MoveNext()) { state = 139; goto case 139; }
							var57_RpmPipeRecip = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("RpmPipeRecip", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var56_JobReport.Current))).GetEnumerator();
							goto case 140;
						case 139:
							state = 143;
							Altova.Mapforce.MFEnumerator.Dispose(var56_JobReport); var56_JobReport = null;
							var58_JobReport = (closure.var2_JobReport).GetEnumerator();
							goto case 143;
						case 140:
							state = 140;
							if (!var57_RpmPipeRecip.MoveNext()) { state = 141; goto case 141; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("rpmPipeRecip", "http://www.witsml.org/schemas/1series"), tbf.tbf14_anglePerTimeMeasure.Eval((Altova.Mapforce.IMFNode)(var57_RpmPipeRecip.Current)));
							pos++;
							return true;
						case 141:
							state = 138;
							Altova.Mapforce.MFEnumerator.Dispose(var57_RpmPipeRecip); var57_RpmPipeRecip = null;
							goto case 138;
						case 143:
							state = 145;
							if (!var58_JobReport.MoveNext()) { state = 144; goto case 144; }
							var59_LenPipeRecipStroke = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LenPipeRecipStroke", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var58_JobReport.Current))).GetEnumerator();
							goto case 145;
						case 144:
							state = 148;
							Altova.Mapforce.MFEnumerator.Dispose(var58_JobReport); var58_JobReport = null;
							var60_CoilTubing = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CoilTubing", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)).GetEnumerator();
							goto case 148;
						case 145:
							state = 145;
							if (!var59_LenPipeRecipStroke.MoveNext()) { state = 146; goto case 146; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("lenPipeRecipStroke", "http://www.witsml.org/schemas/1series"), tbf.tbf1_lengthMeasure.Eval((Altova.Mapforce.IMFNode)(var59_LenPipeRecipStroke.Current)));
							pos++;
							return true;
						case 146:
							state = 143;
							Altova.Mapforce.MFEnumerator.Dispose(var59_LenPipeRecipStroke); var59_LenPipeRecipStroke = null;
							goto case 143;
						case 148:
							state = 148;
							if (!var60_CoilTubing.MoveNext()) { state = 149; goto case 149; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("coilTubing", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var60_CoilTubing.Current))))));
							pos++;
							return true;
						case 149:
							state = 151;
							Altova.Mapforce.MFEnumerator.Dispose(var60_CoilTubing); var60_CoilTubing = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("commonData", "http://www.witsml.org/schemas/1series"), (new seq35_map(closure.var1_Citation)));
							pos++;
							return true;
						case 151:
							state = 152;
							var61_CustomData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CustomData", "http://www.energistics.org/energyml/data/commonv2"), closure.var5_cur)).GetEnumerator();
							goto case 152;
						case 152:
							state = 152;
							if (!var61_CustomData.MoveNext()) { state = 153; goto case 153; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), tbf.tbf16_cs_customData.Eval((Altova.Mapforce.IMFNode)(var61_CustomData.Current)));
							pos++;
							return true;
						case 153:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var61_CustomData); var61_CustomData = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var6_JobType); var6_JobType = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_JobConfig); var7_JobConfig = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_NameCementedString); var8_NameCementedString = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_HoleConfig); var9_HoleConfig = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_NameWorkString); var10_NameWorkString = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_Contractor); var12_Contractor = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_JobReport); var11_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_if_any); var13_if_any = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_OffshoreJob); var14_OffshoreJob = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_MdWater); var15_MdWater = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_ReturnsToSeabed); var16_ReturnsToSeabed = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_if_any); var17_if_any = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_if_any); var18_if_any = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_if_any); var19_if_any = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_if_exists); var20_if_exists = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_MdPrevShoe); var21_MdPrevShoe = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_TvdPrevShoe); var22_TvdPrevShoe = null;
					Altova.Mapforce.MFEnumerator.Dispose(var23_MdStringSet); var23_MdStringSet = null;
					Altova.Mapforce.MFEnumerator.Dispose(var24_TvdStringSet); var24_TvdStringSet = null;
					Altova.Mapforce.MFEnumerator.Dispose(var26_CementReportStage); var26_CementReportStage = null;
					Altova.Mapforce.MFEnumerator.Dispose(var25_JobReport); var25_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var28_TypePlug); var28_TypePlug = null;
					Altova.Mapforce.MFEnumerator.Dispose(var29_NameCementString); var29_NameCementString = null;
					Altova.Mapforce.MFEnumerator.Dispose(var31_DTimPlugSet); var31_DTimPlugSet = null;
					Altova.Mapforce.MFEnumerator.Dispose(var30_JobReport); var30_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var33_CementDrillOut); var33_CementDrillOut = null;
					Altova.Mapforce.MFEnumerator.Dispose(var32_JobReport); var32_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var35_DTimCementDrillOut); var35_DTimCementDrillOut = null;
					Altova.Mapforce.MFEnumerator.Dispose(var34_JobReport); var34_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var36_TypeSqueeze); var36_TypeSqueeze = null;
					Altova.Mapforce.MFEnumerator.Dispose(var37_MdSqueeze); var37_MdSqueeze = null;
					Altova.Mapforce.MFEnumerator.Dispose(var38_ToolCompany); var38_ToolCompany = null;
					Altova.Mapforce.MFEnumerator.Dispose(var39_TypeTool); var39_TypeTool = null;
					Altova.Mapforce.MFEnumerator.Dispose(var41_DTimPipeRotStart); var41_DTimPipeRotStart = null;
					Altova.Mapforce.MFEnumerator.Dispose(var40_JobReport); var40_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var43_DTimPipeRotEnd); var43_DTimPipeRotEnd = null;
					Altova.Mapforce.MFEnumerator.Dispose(var42_JobReport); var42_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var45_RpmPipe); var45_RpmPipe = null;
					Altova.Mapforce.MFEnumerator.Dispose(var44_JobReport); var44_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var47_TqInitPipeRot); var47_TqInitPipeRot = null;
					Altova.Mapforce.MFEnumerator.Dispose(var46_JobReport); var46_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var49_TqPipeAv); var49_TqPipeAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var48_JobReport); var48_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var51_TqPipeMx); var51_TqPipeMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var50_JobReport); var50_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var53_OverPull); var53_OverPull = null;
					Altova.Mapforce.MFEnumerator.Dispose(var52_JobReport); var52_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var55_SlackOff); var55_SlackOff = null;
					Altova.Mapforce.MFEnumerator.Dispose(var54_JobReport); var54_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var57_RpmPipeRecip); var57_RpmPipeRecip = null;
					Altova.Mapforce.MFEnumerator.Dispose(var56_JobReport); var56_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var59_LenPipeRecipStroke); var59_LenPipeRecipStroke = null;
					Altova.Mapforce.MFEnumerator.Dispose(var58_JobReport); var58_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var60_CoilTubing); var60_CoilTubing = null;
					Altova.Mapforce.MFEnumerator.Dispose(var61_CustomData); var61_CustomData = null;
				}
			}
		}
		class seq5_seq_ : IEnumerable
		{

			public seq5_seq_(
			)
			{
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_seq_ closure;
				public Enumerator(seq5_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq6_if_any : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_JobReport;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq6_if_any(
				System.Collections.IEnumerable var1_JobReport,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_JobReport = var1_JobReport;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_if_any closure;
				private IEnumerator var3_JobReport;
				private System.Collections.IEnumerable var5_Design;
				private IEnumerator var4_CementEngr;
				private IEnumerator var6_Design;
				private IEnumerator var7_CementEngr;
				public Enumerator(seq6_if_any closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!((bool)Altova.Functions.Core.First((new seq3_CoreAny((new seq7_map(closure.var1_JobReport))))))) { state = 2; goto case 2;  }
							var3_JobReport = (closure.var1_JobReport).GetEnumerator();
							goto case 3;
						case 2:
							state = 10;
							var5_Design = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Design", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur));
							if (!((bool)Altova.Functions.Core.First((new seq3_CoreAny((new seq8_map(var5_Design))))))) { state = 0; return false; }
							var6_Design = (var5_Design).GetEnumerator();
							goto case 10;
						case 3:
							state = 5;
							if (!var3_JobReport.MoveNext()) { state = 4; goto case 4; }
							var4_CementEngr = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CementEngr", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_JobReport.Current))).GetEnumerator();
							goto case 5;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_JobReport); var3_JobReport = null;
							return false;
						case 5:
							state = 5;
							if (!var4_CementEngr.MoveNext()) { state = 6; goto case 6; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_CementEngr.Current));
							pos++;
							return true;
						case 6:
							state = 3;
							Altova.Mapforce.MFEnumerator.Dispose(var4_CementEngr); var4_CementEngr = null;
							goto case 3;
						case 10:
							state = 12;
							if (!var6_Design.MoveNext()) { state = 11; goto case 11; }
							var7_CementEngr = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CementEngr", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var6_Design.Current))).GetEnumerator();
							goto case 12;
						case 11:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var6_Design); var6_Design = null;
							return false;
						case 12:
							state = 12;
							if (!var7_CementEngr.MoveNext()) { state = 13; goto case 13; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_CementEngr.Current));
							pos++;
							return true;
						case 13:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var7_CementEngr); var7_CementEngr = null;
							goto case 10;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_CementEngr); var4_CementEngr = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_JobReport); var3_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_CementEngr); var7_CementEngr = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_Design); var6_Design = null;
				}
			}
		}
		class seq7_map : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_JobReport;

			public seq7_map(
				System.Collections.IEnumerable var1_JobReport
			)
			{
				this.var1_JobReport = var1_JobReport;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_map closure;
				private IEnumerator var2_JobReport;
				public Enumerator(seq7_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_JobReport = (closure.var1_JobReport).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_JobReport.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CementEngr", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_JobReport.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_JobReport); var2_JobReport = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_JobReport); var2_JobReport = null;
				}
			}
		}
		class seq8_map : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_Design;

			public seq8_map(
				System.Collections.IEnumerable var1_Design
			)
			{
				this.var1_Design = var1_Design;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq8_map closure;
				private IEnumerator var2_Design;
				public Enumerator(seq8_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Design = (closure.var1_Design).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_Design.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CementEngr", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_Design.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Design); var2_Design = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Design); var2_Design = null;
				}
			}
		}
		class seq9_if_any : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_JobReport;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq9_if_any(
				System.Collections.IEnumerable var1_JobReport,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_JobReport = var1_JobReport;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq9_if_any closure;
				private IEnumerator var3_JobReport;
				private System.Collections.IEnumerable var5_Design;
				private IEnumerator var4_Reciprocating;
				private IEnumerator var6_Design;
				private IEnumerator var7_Reciprocating;
				public Enumerator(seq9_if_any closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!((bool)Altova.Functions.Core.First((new seq3_CoreAny((new seq10_map(closure.var1_JobReport))))))) { state = 2; goto case 2;  }
							var3_JobReport = (closure.var1_JobReport).GetEnumerator();
							goto case 3;
						case 2:
							state = 10;
							var5_Design = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Design", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur));
							if (!((bool)Altova.Functions.Core.First((new seq3_CoreAny((new seq11_map(var5_Design))))))) { state = 0; return false; }
							var6_Design = (var5_Design).GetEnumerator();
							goto case 10;
						case 3:
							state = 5;
							if (!var3_JobReport.MoveNext()) { state = 4; goto case 4; }
							var4_Reciprocating = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Reciprocating", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_JobReport.Current))).GetEnumerator();
							goto case 5;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_JobReport); var3_JobReport = null;
							return false;
						case 5:
							state = 5;
							if (!var4_Reciprocating.MoveNext()) { state = 6; goto case 6; }
							current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_Reciprocating.Current)));
							pos++;
							return true;
						case 6:
							state = 3;
							Altova.Mapforce.MFEnumerator.Dispose(var4_Reciprocating); var4_Reciprocating = null;
							goto case 3;
						case 10:
							state = 12;
							if (!var6_Design.MoveNext()) { state = 11; goto case 11; }
							var7_Reciprocating = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Reciprocating", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var6_Design.Current))).GetEnumerator();
							goto case 12;
						case 11:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var6_Design); var6_Design = null;
							return false;
						case 12:
							state = 12;
							if (!var7_Reciprocating.MoveNext()) { state = 13; goto case 13; }
							current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_Reciprocating.Current)));
							pos++;
							return true;
						case 13:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var7_Reciprocating); var7_Reciprocating = null;
							goto case 10;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_Reciprocating); var4_Reciprocating = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_JobReport); var3_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_Reciprocating); var7_Reciprocating = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_Design); var6_Design = null;
				}
			}
		}
		class seq10_map : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_JobReport;

			public seq10_map(
				System.Collections.IEnumerable var1_JobReport
			)
			{
				this.var1_JobReport = var1_JobReport;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq10_map closure;
				private IEnumerator var2_JobReport;
				public Enumerator(seq10_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_JobReport = (closure.var1_JobReport).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_JobReport.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Reciprocating", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_JobReport.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_JobReport); var2_JobReport = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_JobReport); var2_JobReport = null;
				}
			}
		}
		class seq11_map : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_Design;

			public seq11_map(
				System.Collections.IEnumerable var1_Design
			)
			{
				this.var1_Design = var1_Design;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq11_map closure;
				private IEnumerator var2_Design;
				public Enumerator(seq11_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Design = (closure.var1_Design).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_Design.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Reciprocating", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_Design.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Design); var2_Design = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Design); var2_Design = null;
				}
			}
		}
		class seq12_if_any : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_JobReport;
			private readonly bool var2_any;
			private readonly Altova.Mapforce.IMFNode var3_cur;

			public seq12_if_any(
				System.Collections.IEnumerable var1_JobReport,
				bool var2_any,
				Altova.Mapforce.IMFNode var3_cur
			)
			{
				this.var1_JobReport = var1_JobReport;
				this.var2_any = var2_any;
				this.var3_cur = var3_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq12_if_any closure;
				private IEnumerator var4_JobReport;
				private System.Collections.IEnumerable var6_Design;
				private IEnumerator var5_PlugInterval;
				private IEnumerator var7_Design;
				private IEnumerator var8_PlugInterval;
				public Enumerator(seq12_if_any closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(closure.var2_any)) { state = 2; goto case 2;  }
							var4_JobReport = (closure.var1_JobReport).GetEnumerator();
							goto case 3;
						case 2:
							state = 10;
							var6_Design = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Design", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var3_cur));
							if (!((bool)Altova.Functions.Core.First((new seq3_CoreAny((new seq13_map(var6_Design))))))) { state = 0; return false; }
							var7_Design = (var6_Design).GetEnumerator();
							goto case 10;
						case 3:
							state = 5;
							if (!var4_JobReport.MoveNext()) { state = 4; goto case 4; }
							var5_PlugInterval = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PlugInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_JobReport.Current))).GetEnumerator();
							goto case 5;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_JobReport); var4_JobReport = null;
							return false;
						case 5:
							state = 5;
							if (!var5_PlugInterval.MoveNext()) { state = 6; goto case 6; }
							current = Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdTop", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var5_PlugInterval.Current)))));
							pos++;
							return true;
						case 6:
							state = 3;
							Altova.Mapforce.MFEnumerator.Dispose(var5_PlugInterval); var5_PlugInterval = null;
							goto case 3;
						case 10:
							state = 12;
							if (!var7_Design.MoveNext()) { state = 11; goto case 11; }
							var8_PlugInterval = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PlugInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var7_Design.Current))).GetEnumerator();
							goto case 12;
						case 11:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var7_Design); var7_Design = null;
							return false;
						case 12:
							state = 12;
							if (!var8_PlugInterval.MoveNext()) { state = 13; goto case 13; }
							current = Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdTop", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var8_PlugInterval.Current)))));
							pos++;
							return true;
						case 13:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var8_PlugInterval); var8_PlugInterval = null;
							goto case 10;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_PlugInterval); var5_PlugInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_JobReport); var4_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_PlugInterval); var8_PlugInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_Design); var7_Design = null;
				}
			}
		}
		class seq13_map : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_Design;

			public seq13_map(
				System.Collections.IEnumerable var1_Design
			)
			{
				this.var1_Design = var1_Design;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq13_map closure;
				private IEnumerator var2_Design;
				public Enumerator(seq13_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Design = (closure.var1_Design).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_Design.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PlugInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_Design.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Design); var2_Design = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Design); var2_Design = null;
				}
			}
		}
		class seq14_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_JobReport;
			private readonly bool var2_any;
			private readonly Altova.Mapforce.IMFNode var3_cur;
			private readonly double var4_cur;

			public seq14_join(
				System.Collections.IEnumerable var1_JobReport,
				bool var2_any,
				Altova.Mapforce.IMFNode var3_cur,
				double var4_cur
			)
			{
				this.var1_JobReport = var1_JobReport;
				this.var2_any = var2_any;
				this.var3_cur = var3_cur;
				this.var4_cur = var4_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq14_join closure;
				private IEnumerator var5_if_any;
				public Enumerator(seq14_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var5_if_any = ((new seq15_if_any(closure.var1_JobReport, closure.var2_any, closure.var3_cur))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var5_if_any.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box((string)(var5_if_any.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_if_any); var5_if_any = null;
							current = Altova.CoreTypes.DoubleToString(closure.var4_cur);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_if_any); var5_if_any = null;
				}
			}
		}
		class seq15_if_any : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_JobReport;
			private readonly bool var2_any;
			private readonly Altova.Mapforce.IMFNode var3_cur;

			public seq15_if_any(
				System.Collections.IEnumerable var1_JobReport,
				bool var2_any,
				Altova.Mapforce.IMFNode var3_cur
			)
			{
				this.var1_JobReport = var1_JobReport;
				this.var2_any = var2_any;
				this.var3_cur = var3_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq15_if_any closure;
				private IEnumerator var4_JobReport;
				private System.Collections.IEnumerable var6_Design;
				private IEnumerator var5_PlugInterval;
				private IEnumerator var7_Design;
				private IEnumerator var8_PlugInterval;
				public Enumerator(seq15_if_any closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(closure.var2_any)) { state = 2; goto case 2;  }
							var4_JobReport = (closure.var1_JobReport).GetEnumerator();
							goto case 3;
						case 2:
							state = 10;
							var6_Design = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Design", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var3_cur));
							if (!((bool)Altova.Functions.Core.First((new seq3_CoreAny((new seq16_map(var6_Design))))))) { state = 0; return false; }
							var7_Design = (var6_Design).GetEnumerator();
							goto case 10;
						case 3:
							state = 5;
							if (!var4_JobReport.MoveNext()) { state = 4; goto case 4; }
							var5_PlugInterval = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PlugInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_JobReport.Current))).GetEnumerator();
							goto case 5;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_JobReport); var4_JobReport = null;
							return false;
						case 5:
							state = 5;
							if (!var5_PlugInterval.MoveNext()) { state = 6; goto case 6; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdTop", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var5_PlugInterval.Current))))));
							pos++;
							return true;
						case 6:
							state = 3;
							Altova.Mapforce.MFEnumerator.Dispose(var5_PlugInterval); var5_PlugInterval = null;
							goto case 3;
						case 10:
							state = 12;
							if (!var7_Design.MoveNext()) { state = 11; goto case 11; }
							var8_PlugInterval = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PlugInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var7_Design.Current))).GetEnumerator();
							goto case 12;
						case 11:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var7_Design); var7_Design = null;
							return false;
						case 12:
							state = 12;
							if (!var8_PlugInterval.MoveNext()) { state = 13; goto case 13; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdTop", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var8_PlugInterval.Current))))));
							pos++;
							return true;
						case 13:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var8_PlugInterval); var8_PlugInterval = null;
							goto case 10;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_PlugInterval); var5_PlugInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_JobReport); var4_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_PlugInterval); var8_PlugInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_Design); var7_Design = null;
				}
			}
		}
		class seq16_map : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_Design;

			public seq16_map(
				System.Collections.IEnumerable var1_Design
			)
			{
				this.var1_Design = var1_Design;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq16_map closure;
				private IEnumerator var2_Design;
				public Enumerator(seq16_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Design = (closure.var1_Design).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_Design.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PlugInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_Design.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Design); var2_Design = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Design); var2_Design = null;
				}
			}
		}
		class seq17_if_any : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_JobReport;
			private readonly bool var2_any;
			private readonly Altova.Mapforce.IMFNode var3_cur;

			public seq17_if_any(
				System.Collections.IEnumerable var1_JobReport,
				bool var2_any,
				Altova.Mapforce.IMFNode var3_cur
			)
			{
				this.var1_JobReport = var1_JobReport;
				this.var2_any = var2_any;
				this.var3_cur = var3_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq17_if_any closure;
				private IEnumerator var4_JobReport;
				private System.Collections.IEnumerable var6_Design;
				private IEnumerator var5_PlugInterval;
				private IEnumerator var7_Design;
				private IEnumerator var8_PlugInterval;
				public Enumerator(seq17_if_any closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(closure.var2_any)) { state = 2; goto case 2;  }
							var4_JobReport = (closure.var1_JobReport).GetEnumerator();
							goto case 3;
						case 2:
							state = 10;
							var6_Design = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Design", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var3_cur));
							if (!((bool)Altova.Functions.Core.First((new seq3_CoreAny((new seq13_map(var6_Design))))))) { state = 0; return false; }
							var7_Design = (var6_Design).GetEnumerator();
							goto case 10;
						case 3:
							state = 5;
							if (!var4_JobReport.MoveNext()) { state = 4; goto case 4; }
							var5_PlugInterval = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PlugInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_JobReport.Current))).GetEnumerator();
							goto case 5;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_JobReport); var4_JobReport = null;
							return false;
						case 5:
							state = 5;
							if (!var5_PlugInterval.MoveNext()) { state = 6; goto case 6; }
							current = Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdBase", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var5_PlugInterval.Current)))));
							pos++;
							return true;
						case 6:
							state = 3;
							Altova.Mapforce.MFEnumerator.Dispose(var5_PlugInterval); var5_PlugInterval = null;
							goto case 3;
						case 10:
							state = 12;
							if (!var7_Design.MoveNext()) { state = 11; goto case 11; }
							var8_PlugInterval = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PlugInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var7_Design.Current))).GetEnumerator();
							goto case 12;
						case 11:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var7_Design); var7_Design = null;
							return false;
						case 12:
							state = 12;
							if (!var8_PlugInterval.MoveNext()) { state = 13; goto case 13; }
							current = Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdBase", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var8_PlugInterval.Current)))));
							pos++;
							return true;
						case 13:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var8_PlugInterval); var8_PlugInterval = null;
							goto case 10;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_PlugInterval); var5_PlugInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_JobReport); var4_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_PlugInterval); var8_PlugInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_Design); var7_Design = null;
				}
			}
		}
		class seq18_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_JobReport;
			private readonly bool var2_any;
			private readonly Altova.Mapforce.IMFNode var3_cur;
			private readonly double var4_cur;

			public seq18_join(
				System.Collections.IEnumerable var1_JobReport,
				bool var2_any,
				Altova.Mapforce.IMFNode var3_cur,
				double var4_cur
			)
			{
				this.var1_JobReport = var1_JobReport;
				this.var2_any = var2_any;
				this.var3_cur = var3_cur;
				this.var4_cur = var4_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq18_join closure;
				private IEnumerator var5_if_any;
				public Enumerator(seq18_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var5_if_any = ((new seq19_if_any(closure.var1_JobReport, closure.var2_any, closure.var3_cur))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var5_if_any.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box((string)(var5_if_any.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_if_any); var5_if_any = null;
							current = Altova.CoreTypes.DoubleToString(closure.var4_cur);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_if_any); var5_if_any = null;
				}
			}
		}
		class seq19_if_any : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_JobReport;
			private readonly bool var2_any;
			private readonly Altova.Mapforce.IMFNode var3_cur;

			public seq19_if_any(
				System.Collections.IEnumerable var1_JobReport,
				bool var2_any,
				Altova.Mapforce.IMFNode var3_cur
			)
			{
				this.var1_JobReport = var1_JobReport;
				this.var2_any = var2_any;
				this.var3_cur = var3_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq19_if_any closure;
				private IEnumerator var4_JobReport;
				private System.Collections.IEnumerable var6_Design;
				private IEnumerator var5_PlugInterval;
				private IEnumerator var7_Design;
				private IEnumerator var8_PlugInterval;
				public Enumerator(seq19_if_any closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(closure.var2_any)) { state = 2; goto case 2;  }
							var4_JobReport = (closure.var1_JobReport).GetEnumerator();
							goto case 3;
						case 2:
							state = 10;
							var6_Design = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Design", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var3_cur));
							if (!((bool)Altova.Functions.Core.First((new seq3_CoreAny((new seq16_map(var6_Design))))))) { state = 0; return false; }
							var7_Design = (var6_Design).GetEnumerator();
							goto case 10;
						case 3:
							state = 5;
							if (!var4_JobReport.MoveNext()) { state = 4; goto case 4; }
							var5_PlugInterval = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PlugInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_JobReport.Current))).GetEnumerator();
							goto case 5;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_JobReport); var4_JobReport = null;
							return false;
						case 5:
							state = 5;
							if (!var5_PlugInterval.MoveNext()) { state = 6; goto case 6; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdBase", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var5_PlugInterval.Current))))));
							pos++;
							return true;
						case 6:
							state = 3;
							Altova.Mapforce.MFEnumerator.Dispose(var5_PlugInterval); var5_PlugInterval = null;
							goto case 3;
						case 10:
							state = 12;
							if (!var7_Design.MoveNext()) { state = 11; goto case 11; }
							var8_PlugInterval = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PlugInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var7_Design.Current))).GetEnumerator();
							goto case 12;
						case 11:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var7_Design); var7_Design = null;
							return false;
						case 12:
							state = 12;
							if (!var8_PlugInterval.MoveNext()) { state = 13; goto case 13; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdBase", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var8_PlugInterval.Current))))));
							pos++;
							return true;
						case 13:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var8_PlugInterval); var8_PlugInterval = null;
							goto case 10;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_PlugInterval); var5_PlugInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_JobReport); var4_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_PlugInterval); var8_PlugInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_Design); var7_Design = null;
				}
			}
		}
		class seq20_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_JobReport;
			private readonly System.Collections.IEnumerable var2_MdHole;
			private readonly Altova.Mapforce.IMFNode var3_cur;

			public seq20_if_exists(
				System.Collections.IEnumerable var1_JobReport,
				System.Collections.IEnumerable var2_MdHole,
				Altova.Mapforce.IMFNode var3_cur
			)
			{
				this.var1_JobReport = var1_JobReport;
				this.var2_MdHole = var2_MdHole;
				this.var3_cur = var3_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq20_if_exists closure;
				private IEnumerator var4_MdHole;
				private IEnumerator var5_JobReport;
				private System.Collections.IEnumerable var7_Design;
				private IEnumerator var6_MdHole;
				private IEnumerator var8_Design;
				private IEnumerator var9_MdHole;
				public Enumerator(seq20_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var2_MdHole))) { state = 2; goto case 2;  }
							var4_MdHole = (closure.var2_MdHole).GetEnumerator();
							goto case 3;
						case 2:
							state = 8;
							if (!((bool)Altova.Functions.Core.First((new seq3_CoreAny((new seq21_map(closure.var1_JobReport))))))) { state = 7; goto case 7;  }
							var5_JobReport = (closure.var1_JobReport).GetEnumerator();
							goto case 8;
						case 3:
							state = 3;
							if (!var4_MdHole.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_MdHole.Current)));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_MdHole); var4_MdHole = null;
							return false;
						case 7:
							state = 15;
							var7_Design = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Design", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var3_cur));
							if (!((bool)Altova.Functions.Core.First((new seq3_CoreAny((new seq22_map(var7_Design))))))) { state = 0; return false; }
							var8_Design = (var7_Design).GetEnumerator();
							goto case 15;
						case 8:
							state = 10;
							if (!var5_JobReport.MoveNext()) { state = 9; goto case 9; }
							var6_MdHole = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdHole", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var5_JobReport.Current))).GetEnumerator();
							goto case 10;
						case 9:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_JobReport); var5_JobReport = null;
							return false;
						case 10:
							state = 10;
							if (!var6_MdHole.MoveNext()) { state = 11; goto case 11; }
							current = Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_MdHole.Current)));
							pos++;
							return true;
						case 11:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var6_MdHole); var6_MdHole = null;
							goto case 8;
						case 15:
							state = 17;
							if (!var8_Design.MoveNext()) { state = 16; goto case 16; }
							var9_MdHole = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdHole", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var8_Design.Current))).GetEnumerator();
							goto case 17;
						case 16:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var8_Design); var8_Design = null;
							return false;
						case 17:
							state = 17;
							if (!var9_MdHole.MoveNext()) { state = 18; goto case 18; }
							current = Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var9_MdHole.Current)));
							pos++;
							return true;
						case 18:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var9_MdHole); var9_MdHole = null;
							goto case 15;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_MdHole); var4_MdHole = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_MdHole); var6_MdHole = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_JobReport); var5_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_MdHole); var9_MdHole = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_Design); var8_Design = null;
				}
			}
		}
		class seq21_map : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_JobReport;

			public seq21_map(
				System.Collections.IEnumerable var1_JobReport
			)
			{
				this.var1_JobReport = var1_JobReport;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq21_map closure;
				private IEnumerator var2_JobReport;
				public Enumerator(seq21_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_JobReport = (closure.var1_JobReport).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_JobReport.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdHole", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_JobReport.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_JobReport); var2_JobReport = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_JobReport); var2_JobReport = null;
				}
			}
		}
		class seq22_map : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_Design;

			public seq22_map(
				System.Collections.IEnumerable var1_Design
			)
			{
				this.var1_Design = var1_Design;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq22_map closure;
				private IEnumerator var2_Design;
				public Enumerator(seq22_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Design = (closure.var1_Design).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_Design.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdHole", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_Design.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Design); var2_Design = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Design); var2_Design = null;
				}
			}
		}
		class seq23_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_JobReport;
			private readonly System.Collections.IEnumerable var2_MdHole;
			private readonly Altova.Mapforce.IMFNode var3_cur;
			private readonly double var4_cur;

			public seq23_join(
				System.Collections.IEnumerable var1_JobReport,
				System.Collections.IEnumerable var2_MdHole,
				Altova.Mapforce.IMFNode var3_cur,
				double var4_cur
			)
			{
				this.var1_JobReport = var1_JobReport;
				this.var2_MdHole = var2_MdHole;
				this.var3_cur = var3_cur;
				this.var4_cur = var4_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq23_join closure;
				private IEnumerator var5_if_exists;
				public Enumerator(seq23_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var5_if_exists = ((new seq24_if_exists(closure.var1_JobReport, closure.var2_MdHole, closure.var3_cur))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var5_if_exists.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box((string)(var5_if_exists.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_if_exists); var5_if_exists = null;
							current = Altova.CoreTypes.DoubleToString(closure.var4_cur);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_if_exists); var5_if_exists = null;
				}
			}
		}
		class seq24_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_JobReport;
			private readonly System.Collections.IEnumerable var2_MdHole;
			private readonly Altova.Mapforce.IMFNode var3_cur;

			public seq24_if_exists(
				System.Collections.IEnumerable var1_JobReport,
				System.Collections.IEnumerable var2_MdHole,
				Altova.Mapforce.IMFNode var3_cur
			)
			{
				this.var1_JobReport = var1_JobReport;
				this.var2_MdHole = var2_MdHole;
				this.var3_cur = var3_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq24_if_exists closure;
				private IEnumerator var4_MdHole;
				private IEnumerator var5_JobReport;
				private System.Collections.IEnumerable var7_Design;
				private IEnumerator var6_MdHole;
				private IEnumerator var8_Design;
				private IEnumerator var9_MdHole;
				public Enumerator(seq24_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var2_MdHole))) { state = 2; goto case 2;  }
							var4_MdHole = (closure.var2_MdHole).GetEnumerator();
							goto case 3;
						case 2:
							state = 8;
							if (!((bool)Altova.Functions.Core.First((new seq3_CoreAny((new seq21_map(closure.var1_JobReport))))))) { state = 7; goto case 7;  }
							var5_JobReport = (closure.var1_JobReport).GetEnumerator();
							goto case 8;
						case 3:
							state = 3;
							if (!var4_MdHole.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)(var4_MdHole.Current))));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_MdHole); var4_MdHole = null;
							return false;
						case 7:
							state = 15;
							var7_Design = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Design", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var3_cur));
							if (!((bool)Altova.Functions.Core.First((new seq3_CoreAny((new seq25_map(var7_Design))))))) { state = 0; return false; }
							var8_Design = (var7_Design).GetEnumerator();
							goto case 15;
						case 8:
							state = 10;
							if (!var5_JobReport.MoveNext()) { state = 9; goto case 9; }
							var6_MdHole = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdHole", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var5_JobReport.Current))).GetEnumerator();
							goto case 10;
						case 9:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_JobReport); var5_JobReport = null;
							return false;
						case 10:
							state = 10;
							if (!var6_MdHole.MoveNext()) { state = 11; goto case 11; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)(var6_MdHole.Current))));
							pos++;
							return true;
						case 11:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var6_MdHole); var6_MdHole = null;
							goto case 8;
						case 15:
							state = 17;
							if (!var8_Design.MoveNext()) { state = 16; goto case 16; }
							var9_MdHole = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdHole", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var8_Design.Current))).GetEnumerator();
							goto case 17;
						case 16:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var8_Design); var8_Design = null;
							return false;
						case 17:
							state = 17;
							if (!var9_MdHole.MoveNext()) { state = 18; goto case 18; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)(var9_MdHole.Current))));
							pos++;
							return true;
						case 18:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var9_MdHole); var9_MdHole = null;
							goto case 15;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_MdHole); var4_MdHole = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_MdHole); var6_MdHole = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_JobReport); var5_JobReport = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_MdHole); var9_MdHole = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_Design); var8_Design = null;
				}
			}
		}
		class seq25_map : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_Design;

			public seq25_map(
				System.Collections.IEnumerable var1_Design
			)
			{
				this.var1_Design = var1_Design;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq25_map closure;
				private IEnumerator var2_Design;
				public Enumerator(seq25_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Design = (closure.var1_Design).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_Design.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdHole", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_Design.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Design); var2_Design = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Design); var2_Design = null;
				}
			}
		}
		class seq26_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq26_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq26_join closure;
				private Altova.Mapforce.IMFNode var2_datum;
				private string var3_cast;
				public Enumerator(seq26_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 4;
							var2_datum = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("datum", ""), closure.var1_cur)));
							var3_cast = (Altova.CoreTypes.NodeToString(var2_datum));
							if (!(("unknown") == (var3_cast))) { state = 3; goto case 3;  }
							goto case 4;
						case 3:
							state = 4;
							if (!(Altova.CoreTypes.ParseBoolean(var3_cast))) { state = 4; goto case 4;  }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("datum", ""), Altova.Functions.Core.Box(var3_cast));
							pos++;
							return true;
						case 4:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq27_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq27_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq27_join closure;
				private Altova.Mapforce.IMFNode var2_datum;
				private string var3_cast;
				public Enumerator(seq27_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 4;
							var2_datum = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("datum", ""), closure.var1_cur)));
							var3_cast = (Altova.CoreTypes.NodeToString(var2_datum));
							if (!(("unknown") == (var3_cast))) { state = 3; goto case 3;  }
							goto case 4;
						case 3:
							state = 4;
							if (!(Altova.CoreTypes.ParseBoolean(var3_cast))) { state = 5; goto case 5;  }
							goto case 4;
						case 4:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						case 5:
							state = 4;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("datum", ""), Altova.Functions.Core.Box(var3_cast));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq28_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_StageMdInterval;
			private readonly Altova.Mapforce.IMFNode var2_cur;
			private readonly Altova.Mapforce.IMFNode var3_cur;

			public seq28_join(
				System.Collections.IEnumerable var1_StageMdInterval,
				Altova.Mapforce.IMFNode var2_cur,
				Altova.Mapforce.IMFNode var3_cur
			)
			{
				this.var1_StageMdInterval = var1_StageMdInterval;
				this.var2_cur = var2_cur;
				this.var3_cur = var3_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq28_join closure;
				private IEnumerator var4_DTimMixStart;
				private IEnumerator var5_DTimPumpStart;
				private IEnumerator var6_DTimPumpEnd;
				private IEnumerator var7_DTimDisplaceStart;
				private IEnumerator var8_StageMdInterval;
				private IEnumerator var9_StageMdInterval;
				private IEnumerator var10_VolExcess;
				private IEnumerator var11_FlowrateDisplaceAv;
				private IEnumerator var12_FlowrateDisplaceMx;
				private IEnumerator var13_PresDisplace;
				private IEnumerator var14_VolReturns;
				private IEnumerator var15_ETimMudCirculation;
				private IEnumerator var16_FlowrateMudCirc;
				private IEnumerator var17_PresMudCirc;
				private IEnumerator var18_FlowrateEnd;
				private IEnumerator var19_CementingFluid;
				private IEnumerator var20_SqueezeObtained;
				private IEnumerator var21_MdString;
				private IEnumerator var22_MdTool;
				private IEnumerator var23_MdCoilTbg;
				private IEnumerator var24_VolCsgIn;
				private IEnumerator var25_VolCsgOut;
				private IEnumerator var26_TailPipeUsed;
				private IEnumerator var27_DiaTailPipe;
				private IEnumerator var28_TailPipePerf;
				private IEnumerator var29_PresTbgStart;
				private IEnumerator var30_PresTbgEnd;
				private IEnumerator var31_PresCsgStart;
				private IEnumerator var32_PresCsgEnd;
				private IEnumerator var33_PresBackPressure;
				private IEnumerator var34_PresCoilTbgStart;
				private IEnumerator var35_PresCoilTbgEnd;
				private IEnumerator var36_PresBreakDown;
				private IEnumerator var37_FlowrateBreakDown;
				private IEnumerator var38_PresSqueezeAv;
				private IEnumerator var39_PresSqueezeEnd;
				private IEnumerator var40_PresSqueezeHeld;
				private IEnumerator var41_PresSqueeze;
				private IEnumerator var42_ETimPresHeld;
				private IEnumerator var43_FlowrateSqueezeAv;
				private IEnumerator var44_FlowrateSqueezeMx;
				private IEnumerator var45_FlowratePumpStart;
				private IEnumerator var46_FlowratePumpEnd;
				private IEnumerator var47_PillBelowPlug;
				private IEnumerator var48_Design;
				private IEnumerator var49_CementDesignStage;
				private IEnumerator var51_MdCircOut;
				private IEnumerator var50_PlugCatcher;
				private IEnumerator var52_VolCircPrior;
				private IEnumerator var53_TypeOriginalMud;
				private IEnumerator var54_WtMud;
				private IEnumerator var55_VisFunnelMud;
				private IEnumerator var56_PvMud;
				private IEnumerator var57_YpMud;
				private IEnumerator var58_Gel10Sec;
				private IEnumerator var59_Gel10Min;
				private IEnumerator var60_TempBHCT;
				private IEnumerator var61_TempBHST;
				private IEnumerator var62_VolExcessMethod;
				private IEnumerator var63_MixMethod;
				private IEnumerator var64_TopPlug;
				private IEnumerator var65_BotPlug;
				private IEnumerator var66_BotPlugNumber;
				private IEnumerator var67_PlugBumped;
				private IEnumerator var68_PresPriorBump;
				private IEnumerator var69_PresBump;
				private IEnumerator var70_PresHeld;
				private IEnumerator var71_FloatHeld;
				private IEnumerator var72_VolMudLost;
				private IEnumerator var73_VolDisplaceFluid;
				private IEnumerator var74_ExtensionNameValue;
				public Enumerator(seq28_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("numStage", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NumStage", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)))))))))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("typeStage", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TypeStage", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var4_DTimMixStart = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTimMixStart", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var4_DTimMixStart.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimMixStart", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_DTimMixStart.Current))))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var4_DTimMixStart); var4_DTimMixStart = null;
							var5_DTimPumpStart = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTimPumpStart", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var5_DTimPumpStart.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimPumpStart", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_DTimPumpStart.Current))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var5_DTimPumpStart); var5_DTimPumpStart = null;
							var6_DTimPumpEnd = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTimPumpEnd", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var6_DTimPumpEnd.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimPumpEnd", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_DTimPumpEnd.Current))))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var6_DTimPumpEnd); var6_DTimPumpEnd = null;
							var7_DTimDisplaceStart = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTimDisplaceStart", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var7_DTimDisplaceStart.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimDisplaceStart", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_DTimDisplaceStart.Current))))));
							pos++;
							return true;
						case 14:
							state = 16;
							Altova.Mapforce.MFEnumerator.Dispose(var7_DTimDisplaceStart); var7_DTimDisplaceStart = null;
							var8_StageMdInterval = (closure.var1_StageMdInterval).GetEnumerator();
							goto case 16;
						case 16:
							state = 16;
							if (!var8_StageMdInterval.MoveNext()) { state = 17; goto case 17; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdTop", "http://www.witsml.org/schemas/1series"), (new seq29_join((Altova.Mapforce.IMFNode)(var8_StageMdInterval.Current))));
							pos++;
							return true;
						case 17:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var8_StageMdInterval); var8_StageMdInterval = null;
							var9_StageMdInterval = (closure.var1_StageMdInterval).GetEnumerator();
							goto case 19;
						case 19:
							state = 19;
							if (!var9_StageMdInterval.MoveNext()) { state = 20; goto case 20; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdBottom", "http://www.witsml.org/schemas/1series"), (new seq30_join((Altova.Mapforce.IMFNode)(var9_StageMdInterval.Current))));
							pos++;
							return true;
						case 20:
							state = 22;
							Altova.Mapforce.MFEnumerator.Dispose(var9_StageMdInterval); var9_StageMdInterval = null;
							var10_VolExcess = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VolExcess", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 22;
						case 22:
							state = 22;
							if (!var10_VolExcess.MoveNext()) { state = 23; goto case 23; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("volExcess", "http://www.witsml.org/schemas/1series"), tbf.tbf2_volumeMeasure.Eval((Altova.Mapforce.IMFNode)(var10_VolExcess.Current)));
							pos++;
							return true;
						case 23:
							state = 25;
							Altova.Mapforce.MFEnumerator.Dispose(var10_VolExcess); var10_VolExcess = null;
							var11_FlowrateDisplaceAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("FlowrateDisplaceAv", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 25;
						case 25:
							state = 25;
							if (!var11_FlowrateDisplaceAv.MoveNext()) { state = 26; goto case 26; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("flowrateDisplaceAv", "http://www.witsml.org/schemas/1series"), tbf.tbf3_volumeFlowRateMeasure.Eval((Altova.Mapforce.IMFNode)(var11_FlowrateDisplaceAv.Current)));
							pos++;
							return true;
						case 26:
							state = 28;
							Altova.Mapforce.MFEnumerator.Dispose(var11_FlowrateDisplaceAv); var11_FlowrateDisplaceAv = null;
							var12_FlowrateDisplaceMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("FlowrateDisplaceMx", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 28;
						case 28:
							state = 28;
							if (!var12_FlowrateDisplaceMx.MoveNext()) { state = 29; goto case 29; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("flowrateDisplaceMx", "http://www.witsml.org/schemas/1series"), tbf.tbf3_volumeFlowRateMeasure.Eval((Altova.Mapforce.IMFNode)(var12_FlowrateDisplaceMx.Current)));
							pos++;
							return true;
						case 29:
							state = 31;
							Altova.Mapforce.MFEnumerator.Dispose(var12_FlowrateDisplaceMx); var12_FlowrateDisplaceMx = null;
							var13_PresDisplace = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PresDisplace", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 31;
						case 31:
							state = 31;
							if (!var13_PresDisplace.MoveNext()) { state = 32; goto case 32; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("presDisplace", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var13_PresDisplace.Current)));
							pos++;
							return true;
						case 32:
							state = 34;
							Altova.Mapforce.MFEnumerator.Dispose(var13_PresDisplace); var13_PresDisplace = null;
							var14_VolReturns = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VolReturns", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 34;
						case 34:
							state = 34;
							if (!var14_VolReturns.MoveNext()) { state = 35; goto case 35; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("volReturns", "http://www.witsml.org/schemas/1series"), tbf.tbf2_volumeMeasure.Eval((Altova.Mapforce.IMFNode)(var14_VolReturns.Current)));
							pos++;
							return true;
						case 35:
							state = 37;
							Altova.Mapforce.MFEnumerator.Dispose(var14_VolReturns); var14_VolReturns = null;
							var15_ETimMudCirculation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ETimMudCirculation", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 37;
						case 37:
							state = 37;
							if (!var15_ETimMudCirculation.MoveNext()) { state = 38; goto case 38; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eTimMudCirculation", "http://www.witsml.org/schemas/1series"), tbf.tbf5_timeMeasure.Eval((Altova.Mapforce.IMFNode)(var15_ETimMudCirculation.Current)));
							pos++;
							return true;
						case 38:
							state = 40;
							Altova.Mapforce.MFEnumerator.Dispose(var15_ETimMudCirculation); var15_ETimMudCirculation = null;
							var16_FlowrateMudCirc = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("FlowrateMudCirc", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 40;
						case 40:
							state = 40;
							if (!var16_FlowrateMudCirc.MoveNext()) { state = 41; goto case 41; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("flowrateMudCirc", "http://www.witsml.org/schemas/1series"), tbf.tbf3_volumeFlowRateMeasure.Eval((Altova.Mapforce.IMFNode)(var16_FlowrateMudCirc.Current)));
							pos++;
							return true;
						case 41:
							state = 43;
							Altova.Mapforce.MFEnumerator.Dispose(var16_FlowrateMudCirc); var16_FlowrateMudCirc = null;
							var17_PresMudCirc = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PresMudCirc", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 43;
						case 43:
							state = 43;
							if (!var17_PresMudCirc.MoveNext()) { state = 44; goto case 44; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("presMudCirc", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var17_PresMudCirc.Current)));
							pos++;
							return true;
						case 44:
							state = 46;
							Altova.Mapforce.MFEnumerator.Dispose(var17_PresMudCirc); var17_PresMudCirc = null;
							var18_FlowrateEnd = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("FlowrateEnd", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 46;
						case 46:
							state = 46;
							if (!var18_FlowrateEnd.MoveNext()) { state = 47; goto case 47; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("flowrateEnd", "http://www.witsml.org/schemas/1series"), tbf.tbf3_volumeFlowRateMeasure.Eval((Altova.Mapforce.IMFNode)(var18_FlowrateEnd.Current)));
							pos++;
							return true;
						case 47:
							state = 49;
							Altova.Mapforce.MFEnumerator.Dispose(var18_FlowrateEnd); var18_FlowrateEnd = null;
							var19_CementingFluid = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CementingFluid", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var3_cur)).GetEnumerator();
							goto case 49;
						case 49:
							state = 49;
							if (!var19_CementingFluid.MoveNext()) { state = 50; goto case 50; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("cementingFluid", "http://www.witsml.org/schemas/1series"), (new seq31_join((Altova.Mapforce.IMFNode)(var19_CementingFluid.Current))));
							pos++;
							return true;
						case 50:
							state = 52;
							Altova.Mapforce.MFEnumerator.Dispose(var19_CementingFluid); var19_CementingFluid = null;
							var20_SqueezeObtained = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SqueezeObtained", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 52;
						case 52:
							state = 52;
							if (!var20_SqueezeObtained.MoveNext()) { state = 53; goto case 53; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("squeezeObtained", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var20_SqueezeObtained.Current))))));
							pos++;
							return true;
						case 53:
							state = 55;
							Altova.Mapforce.MFEnumerator.Dispose(var20_SqueezeObtained); var20_SqueezeObtained = null;
							var21_MdString = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdString", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 55;
						case 55:
							state = 55;
							if (!var21_MdString.MoveNext()) { state = 56; goto case 56; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdString", "http://www.witsml.org/schemas/1series"), (new seq34_seq_((Altova.Mapforce.IMFNode)(var21_MdString.Current))));
							pos++;
							return true;
						case 56:
							state = 58;
							Altova.Mapforce.MFEnumerator.Dispose(var21_MdString); var21_MdString = null;
							var22_MdTool = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdTool", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 58;
						case 58:
							state = 58;
							if (!var22_MdTool.MoveNext()) { state = 59; goto case 59; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdTool", "http://www.witsml.org/schemas/1series"), (new seq34_seq_((Altova.Mapforce.IMFNode)(var22_MdTool.Current))));
							pos++;
							return true;
						case 59:
							state = 61;
							Altova.Mapforce.MFEnumerator.Dispose(var22_MdTool); var22_MdTool = null;
							var23_MdCoilTbg = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdCoilTbg", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 61;
						case 61:
							state = 61;
							if (!var23_MdCoilTbg.MoveNext()) { state = 62; goto case 62; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdCoilTbg", "http://www.witsml.org/schemas/1series"), (new seq34_seq_((Altova.Mapforce.IMFNode)(var23_MdCoilTbg.Current))));
							pos++;
							return true;
						case 62:
							state = 64;
							Altova.Mapforce.MFEnumerator.Dispose(var23_MdCoilTbg); var23_MdCoilTbg = null;
							var24_VolCsgIn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VolCsgIn", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 64;
						case 64:
							state = 64;
							if (!var24_VolCsgIn.MoveNext()) { state = 65; goto case 65; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("volCsgIn", "http://www.witsml.org/schemas/1series"), tbf.tbf2_volumeMeasure.Eval((Altova.Mapforce.IMFNode)(var24_VolCsgIn.Current)));
							pos++;
							return true;
						case 65:
							state = 67;
							Altova.Mapforce.MFEnumerator.Dispose(var24_VolCsgIn); var24_VolCsgIn = null;
							var25_VolCsgOut = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VolCsgOut", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 67;
						case 67:
							state = 67;
							if (!var25_VolCsgOut.MoveNext()) { state = 68; goto case 68; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("volCsgOut", "http://www.witsml.org/schemas/1series"), tbf.tbf2_volumeMeasure.Eval((Altova.Mapforce.IMFNode)(var25_VolCsgOut.Current)));
							pos++;
							return true;
						case 68:
							state = 70;
							Altova.Mapforce.MFEnumerator.Dispose(var25_VolCsgOut); var25_VolCsgOut = null;
							var26_TailPipeUsed = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TailPipeUsed", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 70;
						case 70:
							state = 70;
							if (!var26_TailPipeUsed.MoveNext()) { state = 71; goto case 71; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("tailPipeUsed", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var26_TailPipeUsed.Current))))));
							pos++;
							return true;
						case 71:
							state = 73;
							Altova.Mapforce.MFEnumerator.Dispose(var26_TailPipeUsed); var26_TailPipeUsed = null;
							var27_DiaTailPipe = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DiaTailPipe", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 73;
						case 73:
							state = 73;
							if (!var27_DiaTailPipe.MoveNext()) { state = 74; goto case 74; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("diaTailPipe", "http://www.witsml.org/schemas/1series"), tbf.tbf1_lengthMeasure.Eval((Altova.Mapforce.IMFNode)(var27_DiaTailPipe.Current)));
							pos++;
							return true;
						case 74:
							state = 76;
							Altova.Mapforce.MFEnumerator.Dispose(var27_DiaTailPipe); var27_DiaTailPipe = null;
							var28_TailPipePerf = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TailPipePerf", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 76;
						case 76:
							state = 76;
							if (!var28_TailPipePerf.MoveNext()) { state = 77; goto case 77; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("tailPipePerf", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var28_TailPipePerf.Current))))));
							pos++;
							return true;
						case 77:
							state = 79;
							Altova.Mapforce.MFEnumerator.Dispose(var28_TailPipePerf); var28_TailPipePerf = null;
							var29_PresTbgStart = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PresTbgStart", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 79;
						case 79:
							state = 79;
							if (!var29_PresTbgStart.MoveNext()) { state = 80; goto case 80; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("presTbgStart", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var29_PresTbgStart.Current)));
							pos++;
							return true;
						case 80:
							state = 82;
							Altova.Mapforce.MFEnumerator.Dispose(var29_PresTbgStart); var29_PresTbgStart = null;
							var30_PresTbgEnd = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PresTbgEnd", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 82;
						case 82:
							state = 82;
							if (!var30_PresTbgEnd.MoveNext()) { state = 83; goto case 83; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("presTbgEnd", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var30_PresTbgEnd.Current)));
							pos++;
							return true;
						case 83:
							state = 85;
							Altova.Mapforce.MFEnumerator.Dispose(var30_PresTbgEnd); var30_PresTbgEnd = null;
							var31_PresCsgStart = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PresCsgStart", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 85;
						case 85:
							state = 85;
							if (!var31_PresCsgStart.MoveNext()) { state = 86; goto case 86; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("presCsgStart", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var31_PresCsgStart.Current)));
							pos++;
							return true;
						case 86:
							state = 88;
							Altova.Mapforce.MFEnumerator.Dispose(var31_PresCsgStart); var31_PresCsgStart = null;
							var32_PresCsgEnd = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PresCsgEnd", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 88;
						case 88:
							state = 88;
							if (!var32_PresCsgEnd.MoveNext()) { state = 89; goto case 89; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("presCsgEnd", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var32_PresCsgEnd.Current)));
							pos++;
							return true;
						case 89:
							state = 91;
							Altova.Mapforce.MFEnumerator.Dispose(var32_PresCsgEnd); var32_PresCsgEnd = null;
							var33_PresBackPressure = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PresBackPressure", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 91;
						case 91:
							state = 91;
							if (!var33_PresBackPressure.MoveNext()) { state = 92; goto case 92; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("presBackPressure", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var33_PresBackPressure.Current)));
							pos++;
							return true;
						case 92:
							state = 94;
							Altova.Mapforce.MFEnumerator.Dispose(var33_PresBackPressure); var33_PresBackPressure = null;
							var34_PresCoilTbgStart = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PresCoilTbgStart", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 94;
						case 94:
							state = 94;
							if (!var34_PresCoilTbgStart.MoveNext()) { state = 95; goto case 95; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("presCoilTbgStart", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var34_PresCoilTbgStart.Current)));
							pos++;
							return true;
						case 95:
							state = 97;
							Altova.Mapforce.MFEnumerator.Dispose(var34_PresCoilTbgStart); var34_PresCoilTbgStart = null;
							var35_PresCoilTbgEnd = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PresCoilTbgEnd", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 97;
						case 97:
							state = 97;
							if (!var35_PresCoilTbgEnd.MoveNext()) { state = 98; goto case 98; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("presCoilTbgEnd", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var35_PresCoilTbgEnd.Current)));
							pos++;
							return true;
						case 98:
							state = 100;
							Altova.Mapforce.MFEnumerator.Dispose(var35_PresCoilTbgEnd); var35_PresCoilTbgEnd = null;
							var36_PresBreakDown = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PresBreakDown", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 100;
						case 100:
							state = 100;
							if (!var36_PresBreakDown.MoveNext()) { state = 101; goto case 101; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("presBreakDown", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var36_PresBreakDown.Current)));
							pos++;
							return true;
						case 101:
							state = 103;
							Altova.Mapforce.MFEnumerator.Dispose(var36_PresBreakDown); var36_PresBreakDown = null;
							var37_FlowrateBreakDown = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("FlowrateBreakDown", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 103;
						case 103:
							state = 103;
							if (!var37_FlowrateBreakDown.MoveNext()) { state = 104; goto case 104; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("flowrateBreakDown", "http://www.witsml.org/schemas/1series"), tbf.tbf3_volumeFlowRateMeasure.Eval((Altova.Mapforce.IMFNode)(var37_FlowrateBreakDown.Current)));
							pos++;
							return true;
						case 104:
							state = 106;
							Altova.Mapforce.MFEnumerator.Dispose(var37_FlowrateBreakDown); var37_FlowrateBreakDown = null;
							var38_PresSqueezeAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PresSqueezeAv", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 106;
						case 106:
							state = 106;
							if (!var38_PresSqueezeAv.MoveNext()) { state = 107; goto case 107; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("presSqueezeAv", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var38_PresSqueezeAv.Current)));
							pos++;
							return true;
						case 107:
							state = 109;
							Altova.Mapforce.MFEnumerator.Dispose(var38_PresSqueezeAv); var38_PresSqueezeAv = null;
							var39_PresSqueezeEnd = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PresSqueezeEnd", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 109;
						case 109:
							state = 109;
							if (!var39_PresSqueezeEnd.MoveNext()) { state = 110; goto case 110; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("presSqueezeEnd", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var39_PresSqueezeEnd.Current)));
							pos++;
							return true;
						case 110:
							state = 112;
							Altova.Mapforce.MFEnumerator.Dispose(var39_PresSqueezeEnd); var39_PresSqueezeEnd = null;
							var40_PresSqueezeHeld = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PresSqueezeHeld", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 112;
						case 112:
							state = 112;
							if (!var40_PresSqueezeHeld.MoveNext()) { state = 113; goto case 113; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("presSqueezeHeld", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var40_PresSqueezeHeld.Current))))));
							pos++;
							return true;
						case 113:
							state = 115;
							Altova.Mapforce.MFEnumerator.Dispose(var40_PresSqueezeHeld); var40_PresSqueezeHeld = null;
							var41_PresSqueeze = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PresSqueeze", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 115;
						case 115:
							state = 115;
							if (!var41_PresSqueeze.MoveNext()) { state = 116; goto case 116; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("presSqueeze", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var41_PresSqueeze.Current)));
							pos++;
							return true;
						case 116:
							state = 118;
							Altova.Mapforce.MFEnumerator.Dispose(var41_PresSqueeze); var41_PresSqueeze = null;
							var42_ETimPresHeld = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ETimPresHeld", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 118;
						case 118:
							state = 118;
							if (!var42_ETimPresHeld.MoveNext()) { state = 119; goto case 119; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eTimPresHeld", "http://www.witsml.org/schemas/1series"), tbf.tbf5_timeMeasure.Eval((Altova.Mapforce.IMFNode)(var42_ETimPresHeld.Current)));
							pos++;
							return true;
						case 119:
							state = 121;
							Altova.Mapforce.MFEnumerator.Dispose(var42_ETimPresHeld); var42_ETimPresHeld = null;
							var43_FlowrateSqueezeAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("FlowrateSqueezeAv", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 121;
						case 121:
							state = 121;
							if (!var43_FlowrateSqueezeAv.MoveNext()) { state = 122; goto case 122; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("flowrateSqueezeAv", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var43_FlowrateSqueezeAv.Current))))));
							pos++;
							return true;
						case 122:
							state = 124;
							Altova.Mapforce.MFEnumerator.Dispose(var43_FlowrateSqueezeAv); var43_FlowrateSqueezeAv = null;
							var44_FlowrateSqueezeMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("FlowrateSqueezeMx", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 124;
						case 124:
							state = 124;
							if (!var44_FlowrateSqueezeMx.MoveNext()) { state = 125; goto case 125; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("flowrateSqueezeMx", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var44_FlowrateSqueezeMx.Current))))));
							pos++;
							return true;
						case 125:
							state = 127;
							Altova.Mapforce.MFEnumerator.Dispose(var44_FlowrateSqueezeMx); var44_FlowrateSqueezeMx = null;
							var45_FlowratePumpStart = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("FlowratePumpStart", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 127;
						case 127:
							state = 127;
							if (!var45_FlowratePumpStart.MoveNext()) { state = 128; goto case 128; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("flowratePumpStart", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var45_FlowratePumpStart.Current))))));
							pos++;
							return true;
						case 128:
							state = 130;
							Altova.Mapforce.MFEnumerator.Dispose(var45_FlowratePumpStart); var45_FlowratePumpStart = null;
							var46_FlowratePumpEnd = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("FlowratePumpEnd", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 130;
						case 130:
							state = 130;
							if (!var46_FlowratePumpEnd.MoveNext()) { state = 131; goto case 131; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("flowratePumpEnd", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var46_FlowratePumpEnd.Current))))));
							pos++;
							return true;
						case 131:
							state = 133;
							Altova.Mapforce.MFEnumerator.Dispose(var46_FlowratePumpEnd); var46_FlowratePumpEnd = null;
							var47_PillBelowPlug = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PillBelowPlug", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 133;
						case 133:
							state = 133;
							if (!var47_PillBelowPlug.MoveNext()) { state = 134; goto case 134; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("pillBelowPlug", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var47_PillBelowPlug.Current))))));
							pos++;
							return true;
						case 134:
							state = 136;
							Altova.Mapforce.MFEnumerator.Dispose(var47_PillBelowPlug); var47_PillBelowPlug = null;
							var48_Design = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Design", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var3_cur)).GetEnumerator();
							goto case 136;
						case 136:
							state = 138;
							if (!var48_Design.MoveNext()) { state = 137; goto case 137; }
							var49_CementDesignStage = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CementDesignStage", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var48_Design.Current))).GetEnumerator();
							goto case 138;
						case 137:
							state = 143;
							Altova.Mapforce.MFEnumerator.Dispose(var48_Design); var48_Design = null;
							var51_MdCircOut = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdCircOut", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 143;
						case 138:
							state = 140;
							if (!var49_CementDesignStage.MoveNext()) { state = 139; goto case 139; }
							var50_PlugCatcher = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PlugCatcher", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var49_CementDesignStage.Current))).GetEnumerator();
							goto case 140;
						case 139:
							state = 136;
							Altova.Mapforce.MFEnumerator.Dispose(var49_CementDesignStage); var49_CementDesignStage = null;
							goto case 136;
						case 140:
							state = 140;
							if (!var50_PlugCatcher.MoveNext()) { state = 141; goto case 141; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("plugCatcher", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var50_PlugCatcher.Current))))));
							pos++;
							return true;
						case 141:
							state = 138;
							Altova.Mapforce.MFEnumerator.Dispose(var50_PlugCatcher); var50_PlugCatcher = null;
							goto case 138;
						case 143:
							state = 143;
							if (!var51_MdCircOut.MoveNext()) { state = 144; goto case 144; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdCircOut", "http://www.witsml.org/schemas/1series"), (new seq34_seq_((Altova.Mapforce.IMFNode)(var51_MdCircOut.Current))));
							pos++;
							return true;
						case 144:
							state = 146;
							Altova.Mapforce.MFEnumerator.Dispose(var51_MdCircOut); var51_MdCircOut = null;
							var52_VolCircPrior = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VolCircPrior", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 146;
						case 146:
							state = 146;
							if (!var52_VolCircPrior.MoveNext()) { state = 147; goto case 147; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("volCircPrior", "http://www.witsml.org/schemas/1series"), tbf.tbf2_volumeMeasure.Eval((Altova.Mapforce.IMFNode)(var52_VolCircPrior.Current)));
							pos++;
							return true;
						case 147:
							state = 149;
							Altova.Mapforce.MFEnumerator.Dispose(var52_VolCircPrior); var52_VolCircPrior = null;
							var53_TypeOriginalMud = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TypeOriginalMud", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 149;
						case 149:
							state = 149;
							if (!var53_TypeOriginalMud.MoveNext()) { state = 150; goto case 150; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("typeOriginalMud", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var53_TypeOriginalMud.Current))));
							pos++;
							return true;
						case 150:
							state = 152;
							Altova.Mapforce.MFEnumerator.Dispose(var53_TypeOriginalMud); var53_TypeOriginalMud = null;
							var54_WtMud = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("WtMud", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 152;
						case 152:
							state = 152;
							if (!var54_WtMud.MoveNext()) { state = 153; goto case 153; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wtMud", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var54_WtMud.Current))))));
							pos++;
							return true;
						case 153:
							state = 155;
							Altova.Mapforce.MFEnumerator.Dispose(var54_WtMud); var54_WtMud = null;
							var55_VisFunnelMud = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VisFunnelMud", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 155;
						case 155:
							state = 155;
							if (!var55_VisFunnelMud.MoveNext()) { state = 156; goto case 156; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("visFunnelMud", "http://www.witsml.org/schemas/1series"), tbf.tbf5_timeMeasure.Eval((Altova.Mapforce.IMFNode)(var55_VisFunnelMud.Current)));
							pos++;
							return true;
						case 156:
							state = 158;
							Altova.Mapforce.MFEnumerator.Dispose(var55_VisFunnelMud); var55_VisFunnelMud = null;
							var56_PvMud = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PvMud", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 158;
						case 158:
							state = 158;
							if (!var56_PvMud.MoveNext()) { state = 159; goto case 159; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("pvMud", "http://www.witsml.org/schemas/1series"), tbf.tbf13_dynamicViscosityMeasure.Eval((Altova.Mapforce.IMFNode)(var56_PvMud.Current)));
							pos++;
							return true;
						case 159:
							state = 161;
							Altova.Mapforce.MFEnumerator.Dispose(var56_PvMud); var56_PvMud = null;
							var57_YpMud = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("YpMud", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 161;
						case 161:
							state = 161;
							if (!var57_YpMud.MoveNext()) { state = 162; goto case 162; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ypMud", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var57_YpMud.Current))))));
							pos++;
							return true;
						case 162:
							state = 164;
							Altova.Mapforce.MFEnumerator.Dispose(var57_YpMud); var57_YpMud = null;
							var58_Gel10Sec = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Gel10Sec", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 164;
						case 164:
							state = 164;
							if (!var58_Gel10Sec.MoveNext()) { state = 165; goto case 165; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("gel10Sec", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var58_Gel10Sec.Current))))));
							pos++;
							return true;
						case 165:
							state = 167;
							Altova.Mapforce.MFEnumerator.Dispose(var58_Gel10Sec); var58_Gel10Sec = null;
							var59_Gel10Min = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Gel10Min", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 167;
						case 167:
							state = 167;
							if (!var59_Gel10Min.MoveNext()) { state = 168; goto case 168; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("gel10Min", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var59_Gel10Min.Current))))));
							pos++;
							return true;
						case 168:
							state = 170;
							Altova.Mapforce.MFEnumerator.Dispose(var59_Gel10Min); var59_Gel10Min = null;
							var60_TempBHCT = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TempBHCT", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 170;
						case 170:
							state = 170;
							if (!var60_TempBHCT.MoveNext()) { state = 171; goto case 171; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("tempBHCT", "http://www.witsml.org/schemas/1series"), tbf.tbf12_thermodynamicTemperatureMeasure.Eval((Altova.Mapforce.IMFNode)(var60_TempBHCT.Current)));
							pos++;
							return true;
						case 171:
							state = 173;
							Altova.Mapforce.MFEnumerator.Dispose(var60_TempBHCT); var60_TempBHCT = null;
							var61_TempBHST = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TempBHST", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 173;
						case 173:
							state = 173;
							if (!var61_TempBHST.MoveNext()) { state = 174; goto case 174; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("tempBHST", "http://www.witsml.org/schemas/1series"), tbf.tbf12_thermodynamicTemperatureMeasure.Eval((Altova.Mapforce.IMFNode)(var61_TempBHST.Current)));
							pos++;
							return true;
						case 174:
							state = 176;
							Altova.Mapforce.MFEnumerator.Dispose(var61_TempBHST); var61_TempBHST = null;
							var62_VolExcessMethod = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VolExcessMethod", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 176;
						case 176:
							state = 176;
							if (!var62_VolExcessMethod.MoveNext()) { state = 177; goto case 177; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("volExcessMethod", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var62_VolExcessMethod.Current))));
							pos++;
							return true;
						case 177:
							state = 179;
							Altova.Mapforce.MFEnumerator.Dispose(var62_VolExcessMethod); var62_VolExcessMethod = null;
							var63_MixMethod = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MixMethod", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 179;
						case 179:
							state = 179;
							if (!var63_MixMethod.MoveNext()) { state = 180; goto case 180; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mixMethod", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var63_MixMethod.Current))));
							pos++;
							return true;
						case 180:
							state = 182;
							Altova.Mapforce.MFEnumerator.Dispose(var63_MixMethod); var63_MixMethod = null;
							var64_TopPlug = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TopPlug", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 182;
						case 182:
							state = 182;
							if (!var64_TopPlug.MoveNext()) { state = 183; goto case 183; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("topPlug", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var64_TopPlug.Current))))));
							pos++;
							return true;
						case 183:
							state = 185;
							Altova.Mapforce.MFEnumerator.Dispose(var64_TopPlug); var64_TopPlug = null;
							var65_BotPlug = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("BotPlug", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 185;
						case 185:
							state = 185;
							if (!var65_BotPlug.MoveNext()) { state = 186; goto case 186; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("botPlug", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var65_BotPlug.Current))))));
							pos++;
							return true;
						case 186:
							state = 188;
							Altova.Mapforce.MFEnumerator.Dispose(var65_BotPlug); var65_BotPlug = null;
							var66_BotPlugNumber = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("BotPlugNumber", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 188;
						case 188:
							state = 188;
							if (!var66_BotPlugNumber.MoveNext()) { state = 189; goto case 189; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("botPlugNumber", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var66_BotPlugNumber.Current))))))))));
							pos++;
							return true;
						case 189:
							state = 191;
							Altova.Mapforce.MFEnumerator.Dispose(var66_BotPlugNumber); var66_BotPlugNumber = null;
							var67_PlugBumped = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PlugBumped", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 191;
						case 191:
							state = 191;
							if (!var67_PlugBumped.MoveNext()) { state = 192; goto case 192; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("plugBumped", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var67_PlugBumped.Current))))));
							pos++;
							return true;
						case 192:
							state = 194;
							Altova.Mapforce.MFEnumerator.Dispose(var67_PlugBumped); var67_PlugBumped = null;
							var68_PresPriorBump = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PresPriorBump", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 194;
						case 194:
							state = 194;
							if (!var68_PresPriorBump.MoveNext()) { state = 195; goto case 195; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("presPriorBump", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var68_PresPriorBump.Current)));
							pos++;
							return true;
						case 195:
							state = 197;
							Altova.Mapforce.MFEnumerator.Dispose(var68_PresPriorBump); var68_PresPriorBump = null;
							var69_PresBump = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PresBump", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 197;
						case 197:
							state = 197;
							if (!var69_PresBump.MoveNext()) { state = 198; goto case 198; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("presBump", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var69_PresBump.Current)));
							pos++;
							return true;
						case 198:
							state = 200;
							Altova.Mapforce.MFEnumerator.Dispose(var69_PresBump); var69_PresBump = null;
							var70_PresHeld = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PresHeld", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 200;
						case 200:
							state = 200;
							if (!var70_PresHeld.MoveNext()) { state = 201; goto case 201; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("presHeld", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var70_PresHeld.Current)));
							pos++;
							return true;
						case 201:
							state = 203;
							Altova.Mapforce.MFEnumerator.Dispose(var70_PresHeld); var70_PresHeld = null;
							var71_FloatHeld = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("FloatHeld", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 203;
						case 203:
							state = 203;
							if (!var71_FloatHeld.MoveNext()) { state = 204; goto case 204; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("floatHeld", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var71_FloatHeld.Current))))));
							pos++;
							return true;
						case 204:
							state = 206;
							Altova.Mapforce.MFEnumerator.Dispose(var71_FloatHeld); var71_FloatHeld = null;
							var72_VolMudLost = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VolMudLost", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 206;
						case 206:
							state = 206;
							if (!var72_VolMudLost.MoveNext()) { state = 207; goto case 207; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("volMudLost", "http://www.witsml.org/schemas/1series"), tbf.tbf2_volumeMeasure.Eval((Altova.Mapforce.IMFNode)(var72_VolMudLost.Current)));
							pos++;
							return true;
						case 207:
							state = 209;
							Altova.Mapforce.MFEnumerator.Dispose(var72_VolMudLost); var72_VolMudLost = null;
							var73_VolDisplaceFluid = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VolDisplaceFluid", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 209;
						case 209:
							state = 209;
							if (!var73_VolDisplaceFluid.MoveNext()) { state = 210; goto case 210; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("volDisplaceFluid", "http://www.witsml.org/schemas/1series"), tbf.tbf2_volumeMeasure.Eval((Altova.Mapforce.IMFNode)(var73_VolDisplaceFluid.Current)));
							pos++;
							return true;
						case 210:
							state = 212;
							Altova.Mapforce.MFEnumerator.Dispose(var73_VolDisplaceFluid); var73_VolDisplaceFluid = null;
							var74_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 212;
						case 212:
							state = 212;
							if (!var74_ExtensionNameValue.MoveNext()) { state = 213; goto case 213; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (new seq33_join((Altova.Mapforce.IMFNode)(var74_ExtensionNameValue.Current))));
							pos++;
							return true;
						case 213:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var74_ExtensionNameValue); var74_ExtensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_DTimMixStart); var4_DTimMixStart = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_DTimPumpStart); var5_DTimPumpStart = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_DTimPumpEnd); var6_DTimPumpEnd = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_DTimDisplaceStart); var7_DTimDisplaceStart = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_StageMdInterval); var8_StageMdInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_StageMdInterval); var9_StageMdInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_VolExcess); var10_VolExcess = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_FlowrateDisplaceAv); var11_FlowrateDisplaceAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_FlowrateDisplaceMx); var12_FlowrateDisplaceMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_PresDisplace); var13_PresDisplace = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_VolReturns); var14_VolReturns = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_ETimMudCirculation); var15_ETimMudCirculation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_FlowrateMudCirc); var16_FlowrateMudCirc = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_PresMudCirc); var17_PresMudCirc = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_FlowrateEnd); var18_FlowrateEnd = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_CementingFluid); var19_CementingFluid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_SqueezeObtained); var20_SqueezeObtained = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_MdString); var21_MdString = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_MdTool); var22_MdTool = null;
					Altova.Mapforce.MFEnumerator.Dispose(var23_MdCoilTbg); var23_MdCoilTbg = null;
					Altova.Mapforce.MFEnumerator.Dispose(var24_VolCsgIn); var24_VolCsgIn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var25_VolCsgOut); var25_VolCsgOut = null;
					Altova.Mapforce.MFEnumerator.Dispose(var26_TailPipeUsed); var26_TailPipeUsed = null;
					Altova.Mapforce.MFEnumerator.Dispose(var27_DiaTailPipe); var27_DiaTailPipe = null;
					Altova.Mapforce.MFEnumerator.Dispose(var28_TailPipePerf); var28_TailPipePerf = null;
					Altova.Mapforce.MFEnumerator.Dispose(var29_PresTbgStart); var29_PresTbgStart = null;
					Altova.Mapforce.MFEnumerator.Dispose(var30_PresTbgEnd); var30_PresTbgEnd = null;
					Altova.Mapforce.MFEnumerator.Dispose(var31_PresCsgStart); var31_PresCsgStart = null;
					Altova.Mapforce.MFEnumerator.Dispose(var32_PresCsgEnd); var32_PresCsgEnd = null;
					Altova.Mapforce.MFEnumerator.Dispose(var33_PresBackPressure); var33_PresBackPressure = null;
					Altova.Mapforce.MFEnumerator.Dispose(var34_PresCoilTbgStart); var34_PresCoilTbgStart = null;
					Altova.Mapforce.MFEnumerator.Dispose(var35_PresCoilTbgEnd); var35_PresCoilTbgEnd = null;
					Altova.Mapforce.MFEnumerator.Dispose(var36_PresBreakDown); var36_PresBreakDown = null;
					Altova.Mapforce.MFEnumerator.Dispose(var37_FlowrateBreakDown); var37_FlowrateBreakDown = null;
					Altova.Mapforce.MFEnumerator.Dispose(var38_PresSqueezeAv); var38_PresSqueezeAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var39_PresSqueezeEnd); var39_PresSqueezeEnd = null;
					Altova.Mapforce.MFEnumerator.Dispose(var40_PresSqueezeHeld); var40_PresSqueezeHeld = null;
					Altova.Mapforce.MFEnumerator.Dispose(var41_PresSqueeze); var41_PresSqueeze = null;
					Altova.Mapforce.MFEnumerator.Dispose(var42_ETimPresHeld); var42_ETimPresHeld = null;
					Altova.Mapforce.MFEnumerator.Dispose(var43_FlowrateSqueezeAv); var43_FlowrateSqueezeAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var44_FlowrateSqueezeMx); var44_FlowrateSqueezeMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var45_FlowratePumpStart); var45_FlowratePumpStart = null;
					Altova.Mapforce.MFEnumerator.Dispose(var46_FlowratePumpEnd); var46_FlowratePumpEnd = null;
					Altova.Mapforce.MFEnumerator.Dispose(var47_PillBelowPlug); var47_PillBelowPlug = null;
					Altova.Mapforce.MFEnumerator.Dispose(var50_PlugCatcher); var50_PlugCatcher = null;
					Altova.Mapforce.MFEnumerator.Dispose(var49_CementDesignStage); var49_CementDesignStage = null;
					Altova.Mapforce.MFEnumerator.Dispose(var48_Design); var48_Design = null;
					Altova.Mapforce.MFEnumerator.Dispose(var51_MdCircOut); var51_MdCircOut = null;
					Altova.Mapforce.MFEnumerator.Dispose(var52_VolCircPrior); var52_VolCircPrior = null;
					Altova.Mapforce.MFEnumerator.Dispose(var53_TypeOriginalMud); var53_TypeOriginalMud = null;
					Altova.Mapforce.MFEnumerator.Dispose(var54_WtMud); var54_WtMud = null;
					Altova.Mapforce.MFEnumerator.Dispose(var55_VisFunnelMud); var55_VisFunnelMud = null;
					Altova.Mapforce.MFEnumerator.Dispose(var56_PvMud); var56_PvMud = null;
					Altova.Mapforce.MFEnumerator.Dispose(var57_YpMud); var57_YpMud = null;
					Altova.Mapforce.MFEnumerator.Dispose(var58_Gel10Sec); var58_Gel10Sec = null;
					Altova.Mapforce.MFEnumerator.Dispose(var59_Gel10Min); var59_Gel10Min = null;
					Altova.Mapforce.MFEnumerator.Dispose(var60_TempBHCT); var60_TempBHCT = null;
					Altova.Mapforce.MFEnumerator.Dispose(var61_TempBHST); var61_TempBHST = null;
					Altova.Mapforce.MFEnumerator.Dispose(var62_VolExcessMethod); var62_VolExcessMethod = null;
					Altova.Mapforce.MFEnumerator.Dispose(var63_MixMethod); var63_MixMethod = null;
					Altova.Mapforce.MFEnumerator.Dispose(var64_TopPlug); var64_TopPlug = null;
					Altova.Mapforce.MFEnumerator.Dispose(var65_BotPlug); var65_BotPlug = null;
					Altova.Mapforce.MFEnumerator.Dispose(var66_BotPlugNumber); var66_BotPlugNumber = null;
					Altova.Mapforce.MFEnumerator.Dispose(var67_PlugBumped); var67_PlugBumped = null;
					Altova.Mapforce.MFEnumerator.Dispose(var68_PresPriorBump); var68_PresPriorBump = null;
					Altova.Mapforce.MFEnumerator.Dispose(var69_PresBump); var69_PresBump = null;
					Altova.Mapforce.MFEnumerator.Dispose(var70_PresHeld); var70_PresHeld = null;
					Altova.Mapforce.MFEnumerator.Dispose(var71_FloatHeld); var71_FloatHeld = null;
					Altova.Mapforce.MFEnumerator.Dispose(var72_VolMudLost); var72_VolMudLost = null;
					Altova.Mapforce.MFEnumerator.Dispose(var73_VolDisplaceFluid); var73_VolDisplaceFluid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var74_ExtensionNameValue); var74_ExtensionNameValue = null;
				}
			}
		}
		class seq29_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq29_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq29_join closure;
				private Altova.Mapforce.IMFNode var2_MdTop;
				public Enumerator(seq29_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_MdTop = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdTop", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_MdTop)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_MdTop)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq30_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq30_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq30_join closure;
				private Altova.Mapforce.IMFNode var2_MdBase;
				public Enumerator(seq30_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_MdBase = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdBase", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_MdBase)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_MdBase)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq31_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq31_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq31_join closure;
				private IEnumerator var2_TypeFluid;
				private IEnumerator var3_FluidIndex;
				private IEnumerator var4_DescFluid;
				private IEnumerator var5_Purpose;
				private IEnumerator var6_ClassSlurryDryBlend;
				private IEnumerator var7_SourceWater;
				private IEnumerator var8_VolWater;
				private IEnumerator var9_VolCement;
				private IEnumerator var10_RatioMixWater;
				private IEnumerator var11_VolFluid;
				private IEnumerator var12_ExcessPc;
				private IEnumerator var13_VolYield;
				private IEnumerator var14_Density;
				private IEnumerator var15_SolidVolumeFraction;
				private IEnumerator var16_VolPumped;
				private IEnumerator var17_VolOther;
				private IEnumerator var18_FluidRheologicalMode;
				private IEnumerator var19_Yp;
				private IEnumerator var20_N;
				private IEnumerator var21_K;
				private IEnumerator var22_Gel10SecReading;
				private IEnumerator var23_Gel10SecStrength;
				private IEnumerator var24_Gel1MinReading;
				private IEnumerator var25_Gel1MinStrength;
				private IEnumerator var26_Gel10MinReading;
				private IEnumerator var27_Gel10MinStrength;
				private IEnumerator var28_TypeBaseFluid;
				private IEnumerator var29_DensBaseFluid;
				private IEnumerator var30_DryBlendName;
				private IEnumerator var31_DryBlendDescription;
				private IEnumerator var32_MassDryBlend;
				private IEnumerator var33_DensDryBlend;
				private IEnumerator var34_MassSackDryBlend;
				private IEnumerator var35_CementAdditive;
				private IEnumerator var36_FoamUsed;
				private IEnumerator var37_TypeGasFoam;
				private IEnumerator var38_VolGasFoam;
				private IEnumerator var39_RatioConstGasMethodA;
				private IEnumerator var40_DensConstGasMethod;
				private IEnumerator var41_RatioConstGasMethodS;
				private IEnumerator var42_RatioConstGasMethodE;
				private IEnumerator var43_DensConstGasFoam;
				private IEnumerator var44_ETimThickening;
				private IEnumerator var45_TempThickening;
				private IEnumerator var46_PresTestThickening;
				private IEnumerator var47_ConsTestThickening;
				private IEnumerator var48_PcFreeWater;
				private IEnumerator var49_TempFreeWater;
				private IEnumerator var50_VolTestFluidLoss;
				private IEnumerator var51_TempFluidLoss;
				private IEnumerator var52_PresTestFluidLoss;
				private IEnumerator var53_TimeFluidLoss;
				private IEnumerator var54_VolAPIFluidLoss;
				private IEnumerator var55_ETimComprStren1;
				private IEnumerator var56_ETimComprStren2;
				private IEnumerator var57_PresComprStren1;
				private IEnumerator var58_PresComprStren2;
				private IEnumerator var59_TempComprStren1;
				private IEnumerator var60_TempComprStren2;
				private IEnumerator var61_DensAtPres;
				private IEnumerator var62_VolReserved;
				private IEnumerator var63_VolTotSlurry;
				public Enumerator(seq31_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_TypeFluid = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TypeFluid", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_TypeFluid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("typeFluid", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_TypeFluid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_TypeFluid); var2_TypeFluid = null;
							var3_FluidIndex = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("FluidIndex", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_FluidIndex.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("fluidIndex", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_FluidIndex.Current))))))))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var3_FluidIndex); var3_FluidIndex = null;
							var4_DescFluid = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DescFluid", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var4_DescFluid.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("descFluid", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_DescFluid.Current))));
							pos++;
							return true;
						case 9:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var4_DescFluid); var4_DescFluid = null;
							var5_Purpose = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Purpose", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var5_Purpose.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("purpose", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_Purpose.Current))));
							pos++;
							return true;
						case 12:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Purpose); var5_Purpose = null;
							var6_ClassSlurryDryBlend = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ClassSlurryDryBlend", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 14;
						case 14:
							state = 14;
							if (!var6_ClassSlurryDryBlend.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("classSlurryDryBlend", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_ClassSlurryDryBlend.Current))));
							pos++;
							return true;
						case 15:
							state = 17;
							Altova.Mapforce.MFEnumerator.Dispose(var6_ClassSlurryDryBlend); var6_ClassSlurryDryBlend = null;
							var7_SourceWater = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SourceWater", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 17;
						case 17:
							state = 17;
							if (!var7_SourceWater.MoveNext()) { state = 18; goto case 18; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("sourceWater", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_SourceWater.Current))));
							pos++;
							return true;
						case 18:
							state = 20;
							Altova.Mapforce.MFEnumerator.Dispose(var7_SourceWater); var7_SourceWater = null;
							var8_VolWater = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VolWater", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 20;
						case 20:
							state = 20;
							if (!var8_VolWater.MoveNext()) { state = 21; goto case 21; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("volWater", "http://www.witsml.org/schemas/1series"), tbf.tbf2_volumeMeasure.Eval((Altova.Mapforce.IMFNode)(var8_VolWater.Current)));
							pos++;
							return true;
						case 21:
							state = 23;
							Altova.Mapforce.MFEnumerator.Dispose(var8_VolWater); var8_VolWater = null;
							var9_VolCement = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VolCement", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 23;
						case 23:
							state = 23;
							if (!var9_VolCement.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("volCement", "http://www.witsml.org/schemas/1series"), tbf.tbf2_volumeMeasure.Eval((Altova.Mapforce.IMFNode)(var9_VolCement.Current)));
							pos++;
							return true;
						case 24:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var9_VolCement); var9_VolCement = null;
							var10_RatioMixWater = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("RatioMixWater", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 26;
						case 26:
							state = 26;
							if (!var10_RatioMixWater.MoveNext()) { state = 27; goto case 27; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ratioMixWater", "http://www.witsml.org/schemas/1series"), tbf.tbf6_specificVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var10_RatioMixWater.Current)));
							pos++;
							return true;
						case 27:
							state = 29;
							Altova.Mapforce.MFEnumerator.Dispose(var10_RatioMixWater); var10_RatioMixWater = null;
							var11_VolFluid = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VolFluid", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 29;
						case 29:
							state = 29;
							if (!var11_VolFluid.MoveNext()) { state = 30; goto case 30; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("volFluid", "http://www.witsml.org/schemas/1series"), tbf.tbf2_volumeMeasure.Eval((Altova.Mapforce.IMFNode)(var11_VolFluid.Current)));
							pos++;
							return true;
						case 30:
							state = 32;
							Altova.Mapforce.MFEnumerator.Dispose(var11_VolFluid); var11_VolFluid = null;
							var12_ExcessPc = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExcessPc", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 32;
						case 32:
							state = 32;
							if (!var12_ExcessPc.MoveNext()) { state = 33; goto case 33; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("excessPc", "http://www.witsml.org/schemas/1series"), tbf.tbf7_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var12_ExcessPc.Current)));
							pos++;
							return true;
						case 33:
							state = 35;
							Altova.Mapforce.MFEnumerator.Dispose(var12_ExcessPc); var12_ExcessPc = null;
							var13_VolYield = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VolYield", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 35;
						case 35:
							state = 35;
							if (!var13_VolYield.MoveNext()) { state = 36; goto case 36; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("volYield", "http://www.witsml.org/schemas/1series"), tbf.tbf6_specificVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var13_VolYield.Current)));
							pos++;
							return true;
						case 36:
							state = 38;
							Altova.Mapforce.MFEnumerator.Dispose(var13_VolYield); var13_VolYield = null;
							var14_Density = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Density", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 38;
						case 38:
							state = 38;
							if (!var14_Density.MoveNext()) { state = 39; goto case 39; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("density", "http://www.witsml.org/schemas/1series"), tbf.tbf8_densityMeasure.Eval((Altova.Mapforce.IMFNode)(var14_Density.Current)));
							pos++;
							return true;
						case 39:
							state = 41;
							Altova.Mapforce.MFEnumerator.Dispose(var14_Density); var14_Density = null;
							var15_SolidVolumeFraction = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SolidVolumeFraction", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 41;
						case 41:
							state = 41;
							if (!var15_SolidVolumeFraction.MoveNext()) { state = 42; goto case 42; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("solidVolumeFraction", "http://www.witsml.org/schemas/1series"), tbf.tbf7_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var15_SolidVolumeFraction.Current)));
							pos++;
							return true;
						case 42:
							state = 44;
							Altova.Mapforce.MFEnumerator.Dispose(var15_SolidVolumeFraction); var15_SolidVolumeFraction = null;
							var16_VolPumped = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VolPumped", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 44;
						case 44:
							state = 44;
							if (!var16_VolPumped.MoveNext()) { state = 45; goto case 45; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("volPumped", "http://www.witsml.org/schemas/1series"), tbf.tbf2_volumeMeasure.Eval((Altova.Mapforce.IMFNode)(var16_VolPumped.Current)));
							pos++;
							return true;
						case 45:
							state = 47;
							Altova.Mapforce.MFEnumerator.Dispose(var16_VolPumped); var16_VolPumped = null;
							var17_VolOther = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VolOther", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 47;
						case 47:
							state = 47;
							if (!var17_VolOther.MoveNext()) { state = 48; goto case 48; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("volOther", "http://www.witsml.org/schemas/1series"), tbf.tbf2_volumeMeasure.Eval((Altova.Mapforce.IMFNode)(var17_VolOther.Current)));
							pos++;
							return true;
						case 48:
							state = 50;
							Altova.Mapforce.MFEnumerator.Dispose(var17_VolOther); var17_VolOther = null;
							var18_FluidRheologicalMode = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("FluidRheologicalModel", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 50;
						case 50:
							state = 50;
							if (!var18_FluidRheologicalMode.MoveNext()) { state = 51; goto case 51; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("fluidRheologicalModel", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var18_FluidRheologicalMode.Current))));
							pos++;
							return true;
						case 51:
							state = 53;
							Altova.Mapforce.MFEnumerator.Dispose(var18_FluidRheologicalMode); var18_FluidRheologicalMode = null;
							var19_Yp = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Yp", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 53;
						case 53:
							state = 53;
							if (!var19_Yp.MoveNext()) { state = 54; goto case 54; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("yp", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var19_Yp.Current)));
							pos++;
							return true;
						case 54:
							state = 56;
							Altova.Mapforce.MFEnumerator.Dispose(var19_Yp); var19_Yp = null;
							var20_N = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("N", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 56;
						case 56:
							state = 56;
							if (!var20_N.MoveNext()) { state = 57; goto case 57; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("n", "http://www.witsml.org/schemas/1series"), tbf.tbf9_dimensionlessMeasure.Eval((Altova.Mapforce.IMFNode)(var20_N.Current)));
							pos++;
							return true;
						case 57:
							state = 59;
							Altova.Mapforce.MFEnumerator.Dispose(var20_N); var20_N = null;
							var21_K = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("K", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 59;
						case 59:
							state = 59;
							if (!var21_K.MoveNext()) { state = 60; goto case 60; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("k", "http://www.witsml.org/schemas/1series"), tbf.tbf9_dimensionlessMeasure.Eval((Altova.Mapforce.IMFNode)(var21_K.Current)));
							pos++;
							return true;
						case 60:
							state = 62;
							Altova.Mapforce.MFEnumerator.Dispose(var21_K); var21_K = null;
							var22_Gel10SecReading = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Gel10SecReading", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 62;
						case 62:
							state = 62;
							if (!var22_Gel10SecReading.MoveNext()) { state = 63; goto case 63; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("gel10SecReading", "http://www.witsml.org/schemas/1series"), tbf.tbf10_planeAngleMeasure.Eval((Altova.Mapforce.IMFNode)(var22_Gel10SecReading.Current)));
							pos++;
							return true;
						case 63:
							state = 65;
							Altova.Mapforce.MFEnumerator.Dispose(var22_Gel10SecReading); var22_Gel10SecReading = null;
							var23_Gel10SecStrength = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Gel10SecStrength", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 65;
						case 65:
							state = 65;
							if (!var23_Gel10SecStrength.MoveNext()) { state = 66; goto case 66; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("gel10SecStrength", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var23_Gel10SecStrength.Current)));
							pos++;
							return true;
						case 66:
							state = 68;
							Altova.Mapforce.MFEnumerator.Dispose(var23_Gel10SecStrength); var23_Gel10SecStrength = null;
							var24_Gel1MinReading = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Gel1MinReading", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 68;
						case 68:
							state = 68;
							if (!var24_Gel1MinReading.MoveNext()) { state = 69; goto case 69; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("gel1MinReading", "http://www.witsml.org/schemas/1series"), tbf.tbf10_planeAngleMeasure.Eval((Altova.Mapforce.IMFNode)(var24_Gel1MinReading.Current)));
							pos++;
							return true;
						case 69:
							state = 71;
							Altova.Mapforce.MFEnumerator.Dispose(var24_Gel1MinReading); var24_Gel1MinReading = null;
							var25_Gel1MinStrength = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Gel1MinStrength", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 71;
						case 71:
							state = 71;
							if (!var25_Gel1MinStrength.MoveNext()) { state = 72; goto case 72; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("gel1MinStrength", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var25_Gel1MinStrength.Current)));
							pos++;
							return true;
						case 72:
							state = 74;
							Altova.Mapforce.MFEnumerator.Dispose(var25_Gel1MinStrength); var25_Gel1MinStrength = null;
							var26_Gel10MinReading = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Gel10MinReading", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 74;
						case 74:
							state = 74;
							if (!var26_Gel10MinReading.MoveNext()) { state = 75; goto case 75; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("gel10MinReading", "http://www.witsml.org/schemas/1series"), tbf.tbf10_planeAngleMeasure.Eval((Altova.Mapforce.IMFNode)(var26_Gel10MinReading.Current)));
							pos++;
							return true;
						case 75:
							state = 77;
							Altova.Mapforce.MFEnumerator.Dispose(var26_Gel10MinReading); var26_Gel10MinReading = null;
							var27_Gel10MinStrength = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Gel10MinStrength", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 77;
						case 77:
							state = 77;
							if (!var27_Gel10MinStrength.MoveNext()) { state = 78; goto case 78; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("gel10MinStrength", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var27_Gel10MinStrength.Current)));
							pos++;
							return true;
						case 78:
							state = 80;
							Altova.Mapforce.MFEnumerator.Dispose(var27_Gel10MinStrength); var27_Gel10MinStrength = null;
							var28_TypeBaseFluid = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TypeBaseFluid", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 80;
						case 80:
							state = 80;
							if (!var28_TypeBaseFluid.MoveNext()) { state = 81; goto case 81; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("typeBaseFluid", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var28_TypeBaseFluid.Current))));
							pos++;
							return true;
						case 81:
							state = 83;
							Altova.Mapforce.MFEnumerator.Dispose(var28_TypeBaseFluid); var28_TypeBaseFluid = null;
							var29_DensBaseFluid = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DensBaseFluid", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 83;
						case 83:
							state = 83;
							if (!var29_DensBaseFluid.MoveNext()) { state = 84; goto case 84; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("densBaseFluid", "http://www.witsml.org/schemas/1series"), tbf.tbf8_densityMeasure.Eval((Altova.Mapforce.IMFNode)(var29_DensBaseFluid.Current)));
							pos++;
							return true;
						case 84:
							state = 86;
							Altova.Mapforce.MFEnumerator.Dispose(var29_DensBaseFluid); var29_DensBaseFluid = null;
							var30_DryBlendName = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DryBlendName", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 86;
						case 86:
							state = 86;
							if (!var30_DryBlendName.MoveNext()) { state = 87; goto case 87; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dryBlendName", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var30_DryBlendName.Current))));
							pos++;
							return true;
						case 87:
							state = 89;
							Altova.Mapforce.MFEnumerator.Dispose(var30_DryBlendName); var30_DryBlendName = null;
							var31_DryBlendDescription = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DryBlendDescription", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 89;
						case 89:
							state = 89;
							if (!var31_DryBlendDescription.MoveNext()) { state = 90; goto case 90; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dryBlendDescription", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var31_DryBlendDescription.Current))));
							pos++;
							return true;
						case 90:
							state = 92;
							Altova.Mapforce.MFEnumerator.Dispose(var31_DryBlendDescription); var31_DryBlendDescription = null;
							var32_MassDryBlend = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MassDryBlend", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 92;
						case 92:
							state = 92;
							if (!var32_MassDryBlend.MoveNext()) { state = 93; goto case 93; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("massDryBlend", "http://www.witsml.org/schemas/1series"), tbf.tbf11_massMeasure.Eval((Altova.Mapforce.IMFNode)(var32_MassDryBlend.Current)));
							pos++;
							return true;
						case 93:
							state = 95;
							Altova.Mapforce.MFEnumerator.Dispose(var32_MassDryBlend); var32_MassDryBlend = null;
							var33_DensDryBlend = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DensDryBlend", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 95;
						case 95:
							state = 95;
							if (!var33_DensDryBlend.MoveNext()) { state = 96; goto case 96; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("densDryBlend", "http://www.witsml.org/schemas/1series"), tbf.tbf8_densityMeasure.Eval((Altova.Mapforce.IMFNode)(var33_DensDryBlend.Current)));
							pos++;
							return true;
						case 96:
							state = 98;
							Altova.Mapforce.MFEnumerator.Dispose(var33_DensDryBlend); var33_DensDryBlend = null;
							var34_MassSackDryBlend = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MassSackDryBlend", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 98;
						case 98:
							state = 98;
							if (!var34_MassSackDryBlend.MoveNext()) { state = 99; goto case 99; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("massSackDryBlend", "http://www.witsml.org/schemas/1series"), tbf.tbf11_massMeasure.Eval((Altova.Mapforce.IMFNode)(var34_MassSackDryBlend.Current)));
							pos++;
							return true;
						case 99:
							state = 101;
							Altova.Mapforce.MFEnumerator.Dispose(var34_MassSackDryBlend); var34_MassSackDryBlend = null;
							var35_CementAdditive = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CementAdditive", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 101;
						case 101:
							state = 101;
							if (!var35_CementAdditive.MoveNext()) { state = 102; goto case 102; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("cementAdditive", "http://www.witsml.org/schemas/1series"), (new seq32_join((Altova.Mapforce.IMFNode)(var35_CementAdditive.Current))));
							pos++;
							return true;
						case 102:
							state = 104;
							Altova.Mapforce.MFEnumerator.Dispose(var35_CementAdditive); var35_CementAdditive = null;
							var36_FoamUsed = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("FoamUsed", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 104;
						case 104:
							state = 104;
							if (!var36_FoamUsed.MoveNext()) { state = 105; goto case 105; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("foamUsed", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var36_FoamUsed.Current))))));
							pos++;
							return true;
						case 105:
							state = 107;
							Altova.Mapforce.MFEnumerator.Dispose(var36_FoamUsed); var36_FoamUsed = null;
							var37_TypeGasFoam = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TypeGasFoam", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 107;
						case 107:
							state = 107;
							if (!var37_TypeGasFoam.MoveNext()) { state = 108; goto case 108; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("typeGasFoam", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var37_TypeGasFoam.Current))));
							pos++;
							return true;
						case 108:
							state = 110;
							Altova.Mapforce.MFEnumerator.Dispose(var37_TypeGasFoam); var37_TypeGasFoam = null;
							var38_VolGasFoam = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VolGasFoam", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 110;
						case 110:
							state = 110;
							if (!var38_VolGasFoam.MoveNext()) { state = 111; goto case 111; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("volGasFoam", "http://www.witsml.org/schemas/1series"), tbf.tbf2_volumeMeasure.Eval((Altova.Mapforce.IMFNode)(var38_VolGasFoam.Current)));
							pos++;
							return true;
						case 111:
							state = 113;
							Altova.Mapforce.MFEnumerator.Dispose(var38_VolGasFoam); var38_VolGasFoam = null;
							var39_RatioConstGasMethodA = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("RatioConstGasMethodAv", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 113;
						case 113:
							state = 113;
							if (!var39_RatioConstGasMethodA.MoveNext()) { state = 114; goto case 114; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ratioConstGasMethodAv", "http://www.witsml.org/schemas/1series"), tbf.tbf7_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var39_RatioConstGasMethodA.Current)));
							pos++;
							return true;
						case 114:
							state = 116;
							Altova.Mapforce.MFEnumerator.Dispose(var39_RatioConstGasMethodA); var39_RatioConstGasMethodA = null;
							var40_DensConstGasMethod = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DensConstGasMethod", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 116;
						case 116:
							state = 116;
							if (!var40_DensConstGasMethod.MoveNext()) { state = 117; goto case 117; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("densConstGasMethod", "http://www.witsml.org/schemas/1series"), tbf.tbf8_densityMeasure.Eval((Altova.Mapforce.IMFNode)(var40_DensConstGasMethod.Current)));
							pos++;
							return true;
						case 117:
							state = 119;
							Altova.Mapforce.MFEnumerator.Dispose(var40_DensConstGasMethod); var40_DensConstGasMethod = null;
							var41_RatioConstGasMethodS = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("RatioConstGasMethodStart", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 119;
						case 119:
							state = 119;
							if (!var41_RatioConstGasMethodS.MoveNext()) { state = 120; goto case 120; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ratioConstGasMethodStart", "http://www.witsml.org/schemas/1series"), tbf.tbf7_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var41_RatioConstGasMethodS.Current)));
							pos++;
							return true;
						case 120:
							state = 122;
							Altova.Mapforce.MFEnumerator.Dispose(var41_RatioConstGasMethodS); var41_RatioConstGasMethodS = null;
							var42_RatioConstGasMethodE = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("RatioConstGasMethodEnd", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 122;
						case 122:
							state = 122;
							if (!var42_RatioConstGasMethodE.MoveNext()) { state = 123; goto case 123; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ratioConstGasMethodEnd", "http://www.witsml.org/schemas/1series"), tbf.tbf7_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var42_RatioConstGasMethodE.Current)));
							pos++;
							return true;
						case 123:
							state = 125;
							Altova.Mapforce.MFEnumerator.Dispose(var42_RatioConstGasMethodE); var42_RatioConstGasMethodE = null;
							var43_DensConstGasFoam = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DensConstGasFoam", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 125;
						case 125:
							state = 125;
							if (!var43_DensConstGasFoam.MoveNext()) { state = 126; goto case 126; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("densConstGasFoam", "http://www.witsml.org/schemas/1series"), tbf.tbf8_densityMeasure.Eval((Altova.Mapforce.IMFNode)(var43_DensConstGasFoam.Current)));
							pos++;
							return true;
						case 126:
							state = 128;
							Altova.Mapforce.MFEnumerator.Dispose(var43_DensConstGasFoam); var43_DensConstGasFoam = null;
							var44_ETimThickening = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ETimThickening", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 128;
						case 128:
							state = 128;
							if (!var44_ETimThickening.MoveNext()) { state = 129; goto case 129; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eTimThickening", "http://www.witsml.org/schemas/1series"), tbf.tbf5_timeMeasure.Eval((Altova.Mapforce.IMFNode)(var44_ETimThickening.Current)));
							pos++;
							return true;
						case 129:
							state = 131;
							Altova.Mapforce.MFEnumerator.Dispose(var44_ETimThickening); var44_ETimThickening = null;
							var45_TempThickening = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TempThickening", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 131;
						case 131:
							state = 131;
							if (!var45_TempThickening.MoveNext()) { state = 132; goto case 132; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("tempThickening", "http://www.witsml.org/schemas/1series"), tbf.tbf12_thermodynamicTemperatureMeasure.Eval((Altova.Mapforce.IMFNode)(var45_TempThickening.Current)));
							pos++;
							return true;
						case 132:
							state = 134;
							Altova.Mapforce.MFEnumerator.Dispose(var45_TempThickening); var45_TempThickening = null;
							var46_PresTestThickening = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PresTestThickening", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 134;
						case 134:
							state = 134;
							if (!var46_PresTestThickening.MoveNext()) { state = 135; goto case 135; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("presTestThickening", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var46_PresTestThickening.Current)));
							pos++;
							return true;
						case 135:
							state = 137;
							Altova.Mapforce.MFEnumerator.Dispose(var46_PresTestThickening); var46_PresTestThickening = null;
							var47_ConsTestThickening = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConsTestThickening", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 137;
						case 137:
							state = 137;
							if (!var47_ConsTestThickening.MoveNext()) { state = 138; goto case 138; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("consTestThickening", "http://www.witsml.org/schemas/1series"), tbf.tbf9_dimensionlessMeasure.Eval((Altova.Mapforce.IMFNode)(var47_ConsTestThickening.Current)));
							pos++;
							return true;
						case 138:
							state = 140;
							Altova.Mapforce.MFEnumerator.Dispose(var47_ConsTestThickening); var47_ConsTestThickening = null;
							var48_PcFreeWater = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PcFreeWater", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 140;
						case 140:
							state = 140;
							if (!var48_PcFreeWater.MoveNext()) { state = 141; goto case 141; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("pcFreeWater", "http://www.witsml.org/schemas/1series"), tbf.tbf7_volumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var48_PcFreeWater.Current)));
							pos++;
							return true;
						case 141:
							state = 143;
							Altova.Mapforce.MFEnumerator.Dispose(var48_PcFreeWater); var48_PcFreeWater = null;
							var49_TempFreeWater = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TempFreeWater", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 143;
						case 143:
							state = 143;
							if (!var49_TempFreeWater.MoveNext()) { state = 144; goto case 144; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("tempFreeWater", "http://www.witsml.org/schemas/1series"), tbf.tbf12_thermodynamicTemperatureMeasure.Eval((Altova.Mapforce.IMFNode)(var49_TempFreeWater.Current)));
							pos++;
							return true;
						case 144:
							state = 146;
							Altova.Mapforce.MFEnumerator.Dispose(var49_TempFreeWater); var49_TempFreeWater = null;
							var50_VolTestFluidLoss = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VolTestFluidLoss", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 146;
						case 146:
							state = 146;
							if (!var50_VolTestFluidLoss.MoveNext()) { state = 147; goto case 147; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("volTestFluidLoss", "http://www.witsml.org/schemas/1series"), tbf.tbf2_volumeMeasure.Eval((Altova.Mapforce.IMFNode)(var50_VolTestFluidLoss.Current)));
							pos++;
							return true;
						case 147:
							state = 149;
							Altova.Mapforce.MFEnumerator.Dispose(var50_VolTestFluidLoss); var50_VolTestFluidLoss = null;
							var51_TempFluidLoss = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TempFluidLoss", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 149;
						case 149:
							state = 149;
							if (!var51_TempFluidLoss.MoveNext()) { state = 150; goto case 150; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("tempFluidLoss", "http://www.witsml.org/schemas/1series"), tbf.tbf12_thermodynamicTemperatureMeasure.Eval((Altova.Mapforce.IMFNode)(var51_TempFluidLoss.Current)));
							pos++;
							return true;
						case 150:
							state = 152;
							Altova.Mapforce.MFEnumerator.Dispose(var51_TempFluidLoss); var51_TempFluidLoss = null;
							var52_PresTestFluidLoss = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PresTestFluidLoss", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 152;
						case 152:
							state = 152;
							if (!var52_PresTestFluidLoss.MoveNext()) { state = 153; goto case 153; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("presTestFluidLoss", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var52_PresTestFluidLoss.Current)));
							pos++;
							return true;
						case 153:
							state = 155;
							Altova.Mapforce.MFEnumerator.Dispose(var52_PresTestFluidLoss); var52_PresTestFluidLoss = null;
							var53_TimeFluidLoss = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TimeFluidLoss", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 155;
						case 155:
							state = 155;
							if (!var53_TimeFluidLoss.MoveNext()) { state = 156; goto case 156; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("timeFluidLoss", "http://www.witsml.org/schemas/1series"), tbf.tbf5_timeMeasure.Eval((Altova.Mapforce.IMFNode)(var53_TimeFluidLoss.Current)));
							pos++;
							return true;
						case 156:
							state = 158;
							Altova.Mapforce.MFEnumerator.Dispose(var53_TimeFluidLoss); var53_TimeFluidLoss = null;
							var54_VolAPIFluidLoss = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VolAPIFluidLoss", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 158;
						case 158:
							state = 158;
							if (!var54_VolAPIFluidLoss.MoveNext()) { state = 159; goto case 159; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("volAPIFluidLoss", "http://www.witsml.org/schemas/1series"), tbf.tbf2_volumeMeasure.Eval((Altova.Mapforce.IMFNode)(var54_VolAPIFluidLoss.Current)));
							pos++;
							return true;
						case 159:
							state = 161;
							Altova.Mapforce.MFEnumerator.Dispose(var54_VolAPIFluidLoss); var54_VolAPIFluidLoss = null;
							var55_ETimComprStren1 = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ETimComprStren1", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 161;
						case 161:
							state = 161;
							if (!var55_ETimComprStren1.MoveNext()) { state = 162; goto case 162; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eTimComprStren1", "http://www.witsml.org/schemas/1series"), tbf.tbf5_timeMeasure.Eval((Altova.Mapforce.IMFNode)(var55_ETimComprStren1.Current)));
							pos++;
							return true;
						case 162:
							state = 164;
							Altova.Mapforce.MFEnumerator.Dispose(var55_ETimComprStren1); var55_ETimComprStren1 = null;
							var56_ETimComprStren2 = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ETimComprStren2", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 164;
						case 164:
							state = 164;
							if (!var56_ETimComprStren2.MoveNext()) { state = 165; goto case 165; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eTimComprStren2", "http://www.witsml.org/schemas/1series"), tbf.tbf5_timeMeasure.Eval((Altova.Mapforce.IMFNode)(var56_ETimComprStren2.Current)));
							pos++;
							return true;
						case 165:
							state = 167;
							Altova.Mapforce.MFEnumerator.Dispose(var56_ETimComprStren2); var56_ETimComprStren2 = null;
							var57_PresComprStren1 = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PresComprStren1", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 167;
						case 167:
							state = 167;
							if (!var57_PresComprStren1.MoveNext()) { state = 168; goto case 168; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("presComprStren1", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var57_PresComprStren1.Current)));
							pos++;
							return true;
						case 168:
							state = 170;
							Altova.Mapforce.MFEnumerator.Dispose(var57_PresComprStren1); var57_PresComprStren1 = null;
							var58_PresComprStren2 = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PresComprStren2", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 170;
						case 170:
							state = 170;
							if (!var58_PresComprStren2.MoveNext()) { state = 171; goto case 171; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("presComprStren2", "http://www.witsml.org/schemas/1series"), tbf.tbf4_pressureMeasure.Eval((Altova.Mapforce.IMFNode)(var58_PresComprStren2.Current)));
							pos++;
							return true;
						case 171:
							state = 173;
							Altova.Mapforce.MFEnumerator.Dispose(var58_PresComprStren2); var58_PresComprStren2 = null;
							var59_TempComprStren1 = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TempComprStren1", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 173;
						case 173:
							state = 173;
							if (!var59_TempComprStren1.MoveNext()) { state = 174; goto case 174; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("tempComprStren1", "http://www.witsml.org/schemas/1series"), tbf.tbf12_thermodynamicTemperatureMeasure.Eval((Altova.Mapforce.IMFNode)(var59_TempComprStren1.Current)));
							pos++;
							return true;
						case 174:
							state = 176;
							Altova.Mapforce.MFEnumerator.Dispose(var59_TempComprStren1); var59_TempComprStren1 = null;
							var60_TempComprStren2 = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TempComprStren2", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 176;
						case 176:
							state = 176;
							if (!var60_TempComprStren2.MoveNext()) { state = 177; goto case 177; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("tempComprStren2", "http://www.witsml.org/schemas/1series"), tbf.tbf12_thermodynamicTemperatureMeasure.Eval((Altova.Mapforce.IMFNode)(var60_TempComprStren2.Current)));
							pos++;
							return true;
						case 177:
							state = 179;
							Altova.Mapforce.MFEnumerator.Dispose(var60_TempComprStren2); var60_TempComprStren2 = null;
							var61_DensAtPres = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DensAtPres", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 179;
						case 179:
							state = 179;
							if (!var61_DensAtPres.MoveNext()) { state = 180; goto case 180; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("densAtPres", "http://www.witsml.org/schemas/1series"), tbf.tbf8_densityMeasure.Eval((Altova.Mapforce.IMFNode)(var61_DensAtPres.Current)));
							pos++;
							return true;
						case 180:
							state = 182;
							Altova.Mapforce.MFEnumerator.Dispose(var61_DensAtPres); var61_DensAtPres = null;
							var62_VolReserved = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VolReserved", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 182;
						case 182:
							state = 182;
							if (!var62_VolReserved.MoveNext()) { state = 183; goto case 183; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("volReserved", "http://www.witsml.org/schemas/1series"), tbf.tbf2_volumeMeasure.Eval((Altova.Mapforce.IMFNode)(var62_VolReserved.Current)));
							pos++;
							return true;
						case 183:
							state = 185;
							Altova.Mapforce.MFEnumerator.Dispose(var62_VolReserved); var62_VolReserved = null;
							var63_VolTotSlurry = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VolTotSlurry", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 185;
						case 185:
							state = 185;
							if (!var63_VolTotSlurry.MoveNext()) { state = 186; goto case 186; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("volTotSlurry", "http://www.witsml.org/schemas/1series"), tbf.tbf2_volumeMeasure.Eval((Altova.Mapforce.IMFNode)(var63_VolTotSlurry.Current)));
							pos++;
							return true;
						case 186:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var63_VolTotSlurry); var63_VolTotSlurry = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_TypeFluid); var2_TypeFluid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_FluidIndex); var3_FluidIndex = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_DescFluid); var4_DescFluid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Purpose); var5_Purpose = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_ClassSlurryDryBlend); var6_ClassSlurryDryBlend = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_SourceWater); var7_SourceWater = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_VolWater); var8_VolWater = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_VolCement); var9_VolCement = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_RatioMixWater); var10_RatioMixWater = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_VolFluid); var11_VolFluid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_ExcessPc); var12_ExcessPc = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_VolYield); var13_VolYield = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_Density); var14_Density = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_SolidVolumeFraction); var15_SolidVolumeFraction = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_VolPumped); var16_VolPumped = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_VolOther); var17_VolOther = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_FluidRheologicalMode); var18_FluidRheologicalMode = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_Yp); var19_Yp = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_N); var20_N = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_K); var21_K = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_Gel10SecReading); var22_Gel10SecReading = null;
					Altova.Mapforce.MFEnumerator.Dispose(var23_Gel10SecStrength); var23_Gel10SecStrength = null;
					Altova.Mapforce.MFEnumerator.Dispose(var24_Gel1MinReading); var24_Gel1MinReading = null;
					Altova.Mapforce.MFEnumerator.Dispose(var25_Gel1MinStrength); var25_Gel1MinStrength = null;
					Altova.Mapforce.MFEnumerator.Dispose(var26_Gel10MinReading); var26_Gel10MinReading = null;
					Altova.Mapforce.MFEnumerator.Dispose(var27_Gel10MinStrength); var27_Gel10MinStrength = null;
					Altova.Mapforce.MFEnumerator.Dispose(var28_TypeBaseFluid); var28_TypeBaseFluid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var29_DensBaseFluid); var29_DensBaseFluid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var30_DryBlendName); var30_DryBlendName = null;
					Altova.Mapforce.MFEnumerator.Dispose(var31_DryBlendDescription); var31_DryBlendDescription = null;
					Altova.Mapforce.MFEnumerator.Dispose(var32_MassDryBlend); var32_MassDryBlend = null;
					Altova.Mapforce.MFEnumerator.Dispose(var33_DensDryBlend); var33_DensDryBlend = null;
					Altova.Mapforce.MFEnumerator.Dispose(var34_MassSackDryBlend); var34_MassSackDryBlend = null;
					Altova.Mapforce.MFEnumerator.Dispose(var35_CementAdditive); var35_CementAdditive = null;
					Altova.Mapforce.MFEnumerator.Dispose(var36_FoamUsed); var36_FoamUsed = null;
					Altova.Mapforce.MFEnumerator.Dispose(var37_TypeGasFoam); var37_TypeGasFoam = null;
					Altova.Mapforce.MFEnumerator.Dispose(var38_VolGasFoam); var38_VolGasFoam = null;
					Altova.Mapforce.MFEnumerator.Dispose(var39_RatioConstGasMethodA); var39_RatioConstGasMethodA = null;
					Altova.Mapforce.MFEnumerator.Dispose(var40_DensConstGasMethod); var40_DensConstGasMethod = null;
					Altova.Mapforce.MFEnumerator.Dispose(var41_RatioConstGasMethodS); var41_RatioConstGasMethodS = null;
					Altova.Mapforce.MFEnumerator.Dispose(var42_RatioConstGasMethodE); var42_RatioConstGasMethodE = null;
					Altova.Mapforce.MFEnumerator.Dispose(var43_DensConstGasFoam); var43_DensConstGasFoam = null;
					Altova.Mapforce.MFEnumerator.Dispose(var44_ETimThickening); var44_ETimThickening = null;
					Altova.Mapforce.MFEnumerator.Dispose(var45_TempThickening); var45_TempThickening = null;
					Altova.Mapforce.MFEnumerator.Dispose(var46_PresTestThickening); var46_PresTestThickening = null;
					Altova.Mapforce.MFEnumerator.Dispose(var47_ConsTestThickening); var47_ConsTestThickening = null;
					Altova.Mapforce.MFEnumerator.Dispose(var48_PcFreeWater); var48_PcFreeWater = null;
					Altova.Mapforce.MFEnumerator.Dispose(var49_TempFreeWater); var49_TempFreeWater = null;
					Altova.Mapforce.MFEnumerator.Dispose(var50_VolTestFluidLoss); var50_VolTestFluidLoss = null;
					Altova.Mapforce.MFEnumerator.Dispose(var51_TempFluidLoss); var51_TempFluidLoss = null;
					Altova.Mapforce.MFEnumerator.Dispose(var52_PresTestFluidLoss); var52_PresTestFluidLoss = null;
					Altova.Mapforce.MFEnumerator.Dispose(var53_TimeFluidLoss); var53_TimeFluidLoss = null;
					Altova.Mapforce.MFEnumerator.Dispose(var54_VolAPIFluidLoss); var54_VolAPIFluidLoss = null;
					Altova.Mapforce.MFEnumerator.Dispose(var55_ETimComprStren1); var55_ETimComprStren1 = null;
					Altova.Mapforce.MFEnumerator.Dispose(var56_ETimComprStren2); var56_ETimComprStren2 = null;
					Altova.Mapforce.MFEnumerator.Dispose(var57_PresComprStren1); var57_PresComprStren1 = null;
					Altova.Mapforce.MFEnumerator.Dispose(var58_PresComprStren2); var58_PresComprStren2 = null;
					Altova.Mapforce.MFEnumerator.Dispose(var59_TempComprStren1); var59_TempComprStren1 = null;
					Altova.Mapforce.MFEnumerator.Dispose(var60_TempComprStren2); var60_TempComprStren2 = null;
					Altova.Mapforce.MFEnumerator.Dispose(var61_DensAtPres); var61_DensAtPres = null;
					Altova.Mapforce.MFEnumerator.Dispose(var62_VolReserved); var62_VolReserved = null;
					Altova.Mapforce.MFEnumerator.Dispose(var63_VolTotSlurry); var63_VolTotSlurry = null;
				}
			}
		}
		class seq32_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq32_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq32_join closure;
				private IEnumerator var2_TypeAdd;
				private IEnumerator var3_FormAdd;
				private IEnumerator var4_DensAdd;
				private IEnumerator var5_ExtensionNameValue;
				public Enumerator(seq32_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("nameAdd", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NameAdd", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_TypeAdd = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TypeAdd", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var2_TypeAdd.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("typeAdd", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_TypeAdd.Current))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_TypeAdd); var2_TypeAdd = null;
							var3_FormAdd = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("FormAdd", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var3_FormAdd.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("formAdd", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_FormAdd.Current))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var3_FormAdd); var3_FormAdd = null;
							var4_DensAdd = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DensAdd", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_DensAdd.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("densAdd", "http://www.witsml.org/schemas/1series"), tbf.tbf8_densityMeasure.Eval((Altova.Mapforce.IMFNode)(var4_DensAdd.Current)));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_DensAdd); var4_DensAdd = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("additive", "http://www.witsml.org/schemas/1series"), tbf.tbf11_massMeasure.Eval((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Additive", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur))));
							pos++;
							return true;
						case 13:
							state = 14;
							var5_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 14;
						case 14:
							state = 14;
							if (!var5_ExtensionNameValue.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (new seq33_join((Altova.Mapforce.IMFNode)(var5_ExtensionNameValue.Current))));
							pos++;
							return true;
						case 15:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_ExtensionNameValue); var5_ExtensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_TypeAdd); var2_TypeAdd = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_FormAdd); var3_FormAdd = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_DensAdd); var4_DensAdd = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_ExtensionNameValue); var5_ExtensionNameValue = null;
				}
			}
		}
		class seq33_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq33_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq33_join closure;
				private IEnumerator var2_DTim;
				private IEnumerator var3_Index;
				private IEnumerator var4_MeasureClass;
				private IEnumerator var5_Description;
				public Enumerator(seq33_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Value", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_DTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTim", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var2_DTim.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_DTim.Current))))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_DTim); var2_DTim = null;
							var3_Index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Index", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var3_Index.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_Index.Current))))))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
							var4_MeasureClass = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_MeasureClass.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_MeasureClass.Current))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_MeasureClass); var4_MeasureClass = null;
							var5_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_Description.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_Description.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_DTim); var2_DTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_MeasureClass); var4_MeasureClass = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
				}
			}
		}
		class seq34_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq34_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq34_seq_ closure;
				public Enumerator(seq34_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq35_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_Citation;

			public seq35_map(
				Altova.Mapforce.IMFNode var1_Citation
			)
			{
				this.var1_Citation = var1_Citation;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq35_map closure;
				private IEnumerator var2_LastUpdate;
				public Enumerator(seq35_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_LastUpdate = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_Citation)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_LastUpdate.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimLastChange", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_LastUpdate.Current))))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_LastUpdate); var2_LastUpdate = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_LastUpdate); var2_LastUpdate = null;
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_CementJob_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_CementJob_Instance
			)
			{
				this.var1_CementJob_Instance = var1_CementJob_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_CementJob;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_CementJob = ((new main(closure.var1_CementJob_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_CementJob.MoveNext()) { state = 3; goto case 3; }
							current = var2_CementJob.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_CementJob); var2_CementJob = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_CementJob); var2_CementJob = null;
				}
			}
		}

	}
}
