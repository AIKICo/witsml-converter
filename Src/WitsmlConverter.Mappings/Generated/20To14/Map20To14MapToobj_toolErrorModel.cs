////////////////////////////////////////////////////////////////////////
//
// Map20To14MapToobj_toolErrorModel.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map20To14
{

	public class Map20To14MapToobj_toolErrorModel : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_ToolErrorModel2Instance;
		// members
		#endregion //Members


		public void Run(String ToolErrorModel2SourceFilename, string obj_toolErrorModel2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input ToolErrorModel2Source = new Altova.IO.FileInput(ToolErrorModel2SourceFilename))
			// open target stream
			using (Altova.IO.Output obj_toolErrorModel2Target = new Altova.IO.FileOutput(obj_toolErrorModel2TargetFilename))
			{
				// run
				Run(ToolErrorModel2Source, obj_toolErrorModel2Target);
			}
		}

		public void Run(Altova.IO.Input ToolErrorModel2Source, Altova.IO.Output obj_toolErrorModel2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + ToolErrorModel2Source.Filename + "...\n");
			XmlDocument ToolErrorModel2DocSourceObject = XmlTreeOperations.LoadDocument(ToolErrorModel2Source);


			m_ToolErrorModel2Instance = ToolErrorModel2DocSourceObject;
			if (runDoesCloseAll)
				ToolErrorModel2Source.Close();
				// Create the target
				XmlDocument obj_toolErrorModel2Doc = (obj_toolErrorModel2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? obj_toolErrorModel2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_ToolErrorModel2Instance, ToolErrorModel2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, obj_toolErrorModel2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				obj_toolErrorModel2Doc,
				obj_toolErrorModel2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					ToolErrorModel2Source.Close();
					obj_toolErrorModel2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_ToolErrorModel_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_ToolErrorModel_Instance
			)
			{
				this.var1_ToolErrorModel_Instance = var1_ToolErrorModel_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_ToolErrorModel;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_ToolErrorModel = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ToolErrorModel", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_ToolErrorModel_Instance));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("toolErrorModels", "http://www.witsml.org/schemas/1series"), (new seq1_join(var2_ToolErrorModel)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_ToolErrorModel;

			public seq1_join(
				System.Collections.IEnumerable var1_ToolErrorModel
			)
			{
				this.var1_ToolErrorModel = var1_ToolErrorModel;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_ToolErrorModel;
				private IEnumerator var3_Aliases;
				private IEnumerator var4_ToolErrorModel;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("abs", "http://www.energistics.org/schemas/abstract");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.witsml.org/schemas/1series http://w3.energistics.org/schema/WITSML_v1.4.1.1_Data_Schema/witsml_v1.4.1.1_data/xsd_schemas/obj_toolErrorModel.xsd"));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_ToolErrorModel = (closure.var1_ToolErrorModel).GetEnumerator();
							goto case 4;
						case 4:
							state = 6;
							if (!var2_ToolErrorModel.MoveNext()) { state = 5; goto case 5; }
							var3_Aliases = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var2_ToolErrorModel.Current))).GetEnumerator();
							goto case 6;
						case 5:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var2_ToolErrorModel); var2_ToolErrorModel = null;
							var4_ToolErrorModel = (closure.var1_ToolErrorModel).GetEnumerator();
							goto case 9;
						case 6:
							state = 6;
							if (!var3_Aliases.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("version", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("authority", ""), (Altova.Mapforce.IMFNode)(var3_Aliases.Current))))));
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Aliases); var3_Aliases = null;
							goto case 4;
						case 9:
							state = 9;
							if (!var4_ToolErrorModel.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("toolErrorModel", "http://www.witsml.org/schemas/1series"), (new seq2_join((Altova.Mapforce.IMFNode)(var4_ToolErrorModel.Current))));
							pos++;
							return true;
						case 10:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_ToolErrorModel); var4_ToolErrorModel = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Aliases); var3_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_ToolErrorModel); var2_ToolErrorModel = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_ToolErrorModel); var4_ToolErrorModel = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq2_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var2_Aliases;
				private IEnumerator var3_Authorization;
				private IEnumerator var4_TypeSurveyTool;
				private IEnumerator var5_OperatingCondition;
				private IEnumerator var6_OperatingInterval;
				private IEnumerator var7_ModelParameters;
				private IEnumerator var8_UseErrorTermSet;
				private IEnumerator var9_ErrorTermValue;
				private IEnumerator var10_CustomData;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Aliases = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_Aliases.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Identifier", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var2_Aliases.Current))))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Aliases); var2_Aliases = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))))));
							pos++;
							return true;
						case 5:
							state = 6;
							var3_Authorization = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Authorization", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var3_Authorization.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("authorization", "http://www.witsml.org/schemas/1series"), (new seq3_join((Altova.Mapforce.IMFNode)(var3_Authorization.Current))));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Authorization); var3_Authorization = null;
							var4_TypeSurveyTool = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TypeSurveyTool", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var4_TypeSurveyTool.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("typeSurveyTool", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_TypeSurveyTool.Current))));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var4_TypeSurveyTool); var4_TypeSurveyTool = null;
							var5_OperatingCondition = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("OperatingCondition", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var5_OperatingCondition.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("operatingCondition", "http://www.witsml.org/schemas/1series"), (new seq4_join((Altova.Mapforce.IMFNode)(var5_OperatingCondition.Current))));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var5_OperatingCondition); var5_OperatingCondition = null;
							var6_OperatingInterval = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("OperatingInterval", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 15;
						case 15:
							state = 15;
							if (!var6_OperatingInterval.MoveNext()) { state = 16; goto case 16; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("operatingInterval", "http://www.witsml.org/schemas/1series"), (new seq7_join((Altova.Mapforce.IMFNode)(var6_OperatingInterval.Current))));
							pos++;
							return true;
						case 16:
							state = 18;
							Altova.Mapforce.MFEnumerator.Dispose(var6_OperatingInterval); var6_OperatingInterval = null;
							var7_ModelParameters = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ModelParameters", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var7_ModelParameters.MoveNext()) { state = 19; goto case 19; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("modelParameters", "http://www.witsml.org/schemas/1series"), (new seq8_join((Altova.Mapforce.IMFNode)(var7_ModelParameters.Current))));
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var7_ModelParameters); var7_ModelParameters = null;
							var8_UseErrorTermSet = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("UseErrorTermSet", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 21;
						case 21:
							state = 21;
							if (!var8_UseErrorTermSet.MoveNext()) { state = 22; goto case 22; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("useErrorTermSet", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_UseErrorTermSet.Current))));
							pos++;
							return true;
						case 22:
							state = 24;
							Altova.Mapforce.MFEnumerator.Dispose(var8_UseErrorTermSet); var8_UseErrorTermSet = null;
							var9_ErrorTermValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ErrorTermValue", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 24;
						case 24:
							state = 24;
							if (!var9_ErrorTermValue.MoveNext()) { state = 25; goto case 25; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("errorTermValue", "http://www.witsml.org/schemas/1series"), (new seq9_join((Altova.Mapforce.IMFNode)(var9_ErrorTermValue.Current))));
							pos++;
							return true;
						case 25:
							state = 27;
							Altova.Mapforce.MFEnumerator.Dispose(var9_ErrorTermValue); var9_ErrorTermValue = null;
							var10_CustomData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CustomData", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 27;
						case 27:
							state = 27;
							if (!var10_CustomData.MoveNext()) { state = 28; goto case 28; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), tbf.tbf6_cs_customData.Eval((Altova.Mapforce.IMFNode)(var10_CustomData.Current)));
							pos++;
							return true;
						case 28:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var10_CustomData); var10_CustomData = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Aliases); var2_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_Authorization); var3_Authorization = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_TypeSurveyTool); var4_TypeSurveyTool = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_OperatingCondition); var5_OperatingCondition = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_OperatingInterval); var6_OperatingInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_ModelParameters); var7_ModelParameters = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_UseErrorTermSet); var8_UseErrorTermSet = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_ErrorTermValue); var9_ErrorTermValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_CustomData); var10_CustomData = null;
				}
			}
		}
		class seq3_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq3_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_join closure;
				private IEnumerator var2_Author;
				private IEnumerator var3_Source;
				private IEnumerator var4_Version;
				private IEnumerator var5_Comment;
				public Enumerator(seq3_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Author = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Author", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_Author.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("author", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_Author.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Author); var2_Author = null;
							var3_Source = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Source", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_Source.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("source", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_Source.Current))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Source); var3_Source = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("authority", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Authority", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 8:
							state = 9;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("status", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Status", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 9:
							state = 10;
							var4_Version = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Version", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_Version.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("version", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_Version.Current))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_Version); var4_Version = null;
							var5_Comment = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Comment", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_Comment.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("comment", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_Comment.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Comment); var5_Comment = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Author); var2_Author = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_Source); var3_Source = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_Version); var4_Version = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Comment); var5_Comment = null;
				}
			}
		}
		class seq4_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq4_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_join closure;
				private IEnumerator var2_Parameter;
				private IEnumerator var3_Min;
				private IEnumerator var4_Max;
				private IEnumerator var5_Value;
				private IEnumerator var6_ExtensionNameValue;
				public Enumerator(seq4_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							var2_Parameter = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Parameter", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var2_Parameter.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("parameter", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_Parameter.Current))));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Parameter); var2_Parameter = null;
							var3_Min = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Min", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var3_Min.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("min", "http://www.witsml.org/schemas/1series"), tbf.tbf1_genericMeasure.Eval((Altova.Mapforce.IMFNode)(var3_Min.Current)));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Min); var3_Min = null;
							var4_Max = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Max", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var4_Max.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("max", "http://www.witsml.org/schemas/1series"), tbf.tbf1_genericMeasure.Eval((Altova.Mapforce.IMFNode)(var4_Max.Current)));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var4_Max); var4_Max = null;
							var5_Value = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Value", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var5_Value.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_Value.Current))));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Value); var5_Value = null;
							var6_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 15;
						case 15:
							state = 15;
							if (!var6_ExtensionNameValue.MoveNext()) { state = 16; goto case 16; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (new seq5_join((Altova.Mapforce.IMFNode)(var6_ExtensionNameValue.Current))));
							pos++;
							return true;
						case 16:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var6_ExtensionNameValue); var6_ExtensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Parameter); var2_Parameter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_Min); var3_Min = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_Max); var4_Max = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Value); var5_Value = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_ExtensionNameValue); var6_ExtensionNameValue = null;
				}
			}
		}
		class seq5_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq5_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_join closure;
				private IEnumerator var2_DTim;
				private IEnumerator var3_Index;
				private IEnumerator var4_MeasureClass;
				private IEnumerator var5_Description;
				public Enumerator(seq5_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), (new seq6_join(closure.var1_cur)));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_DTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTim", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var2_DTim.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_DTim.Current))))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_DTim); var2_DTim = null;
							var3_Index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Index", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var3_Index.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_Index.Current))))))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
							var4_MeasureClass = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_MeasureClass.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_MeasureClass.Current))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_MeasureClass); var4_MeasureClass = null;
							var5_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_Description.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_Description.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_DTim); var2_DTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_MeasureClass); var4_MeasureClass = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
				}
			}
		}
		class seq6_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq6_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_join closure;
				private Altova.Mapforce.IMFNode var2_Value;
				private IEnumerator var3_uom;
				public Enumerator(seq6_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Value = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Value", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)));
							var3_uom = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_Value)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_uom.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_uom.Current))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_uom); var3_uom = null;
							current = Altova.CoreTypes.NodeToString(var2_Value);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_uom); var3_uom = null;
				}
			}
		}
		class seq7_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq7_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_join closure;
				private IEnumerator var2_Speed;
				private IEnumerator var3_SampleRate;
				private IEnumerator var4_ExtensionNameValue;
				public Enumerator(seq7_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mode", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Mode", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("start", "http://www.witsml.org/schemas/1series"), tbf.tbf2_planeAngleMeasure.Eval((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Start", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur))));
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("end", "http://www.witsml.org/schemas/1series"), tbf.tbf2_planeAngleMeasure.Eval((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("End", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur))));
							pos++;
							return true;
						case 5:
							state = 6;
							var2_Speed = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Speed", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var2_Speed.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("speed", "http://www.witsml.org/schemas/1series"), tbf.tbf3_velocityMeasure.Eval((Altova.Mapforce.IMFNode)(var2_Speed.Current)));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Speed); var2_Speed = null;
							var3_SampleRate = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SampleRate", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var3_SampleRate.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("sampleRate", "http://www.witsml.org/schemas/1series"), tbf.tbf4_timeMeasure.Eval((Altova.Mapforce.IMFNode)(var3_SampleRate.Current)));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var3_SampleRate); var3_SampleRate = null;
							var4_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var4_ExtensionNameValue.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (new seq5_join((Altova.Mapforce.IMFNode)(var4_ExtensionNameValue.Current))));
							pos++;
							return true;
						case 13:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_ExtensionNameValue); var4_ExtensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Speed); var2_Speed = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_SampleRate); var3_SampleRate = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_ExtensionNameValue); var4_ExtensionNameValue = null;
				}
			}
		}
		class seq8_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq8_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq8_join closure;
				private IEnumerator var2_GyroInitialization;
				private IEnumerator var3_GyroReinitialization;
				private IEnumerator var4_Switching;
				private IEnumerator var5_NoiseReductionFactor;
				private IEnumerator var6_GyroRunningSpeed;
				public Enumerator(seq8_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("misalignmentMode", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MisalignmentMode", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							var2_GyroInitialization = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("GyroInitialization", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var2_GyroInitialization.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("gyroInitialization", "http://www.witsml.org/schemas/1series"), tbf.tbf2_planeAngleMeasure.Eval((Altova.Mapforce.IMFNode)(var2_GyroInitialization.Current)));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var2_GyroInitialization); var2_GyroInitialization = null;
							var3_GyroReinitialization = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("GyroReinitializationDistance", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var3_GyroReinitialization.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("gyroReinitializationDistance", "http://www.witsml.org/schemas/1series"), tbf.tbf5_lengthMeasure.Eval((Altova.Mapforce.IMFNode)(var3_GyroReinitialization.Current)));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var3_GyroReinitialization); var3_GyroReinitialization = null;
							var4_Switching = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Switching", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var4_Switching.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("switching", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_Switching.Current))))));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var4_Switching); var4_Switching = null;
							var5_NoiseReductionFactor = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NoiseReductionFactor", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var5_NoiseReductionFactor.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("noiseReductionFactor", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_NoiseReductionFactor.Current))))));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var5_NoiseReductionFactor); var5_NoiseReductionFactor = null;
							var6_GyroRunningSpeed = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("GyroRunningSpeed", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 15;
						case 15:
							state = 15;
							if (!var6_GyroRunningSpeed.MoveNext()) { state = 16; goto case 16; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("gyroRunningSpeed", "http://www.witsml.org/schemas/1series"), tbf.tbf3_velocityMeasure.Eval((Altova.Mapforce.IMFNode)(var6_GyroRunningSpeed.Current)));
							pos++;
							return true;
						case 16:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var6_GyroRunningSpeed); var6_GyroRunningSpeed = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_GyroInitialization); var2_GyroInitialization = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_GyroReinitialization); var3_GyroReinitialization = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_Switching); var4_Switching = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_NoiseReductionFactor); var5_NoiseReductionFactor = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_GyroRunningSpeed); var6_GyroRunningSpeed = null;
				}
			}
		}
		class seq9_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq9_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq9_join closure;
				private IEnumerator var2_Bias;
				private IEnumerator var3_Comment;
				private IEnumerator var4_ExtensionNameValue;
				public Enumerator(seq9_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("term", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Term", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("prop", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Prop", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 4:
							state = 5;
							var2_Bias = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Bias", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var2_Bias.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("bias", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_Bias.Current))))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Bias); var2_Bias = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), (new seq10_join(closure.var1_cur)));
							pos++;
							return true;
						case 8:
							state = 9;
							var3_Comment = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Comment", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var3_Comment.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("comment", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_Comment.Current))));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Comment); var3_Comment = null;
							var4_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var4_ExtensionNameValue.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (new seq5_join((Altova.Mapforce.IMFNode)(var4_ExtensionNameValue.Current))));
							pos++;
							return true;
						case 13:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_ExtensionNameValue); var4_ExtensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Bias); var2_Bias = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_Comment); var3_Comment = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_ExtensionNameValue); var4_ExtensionNameValue = null;
				}
			}
		}
		class seq10_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq10_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq10_join closure;
				private Altova.Mapforce.IMFNode var2_Value;
				private Altova.Mapforce.IMFNode var3_uom;
				private IEnumerator var4_uom;
				public Enumerator(seq10_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Value = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Value", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)));
							var3_uom = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_Value)));
							var4_uom = ((new seq11_cast(var3_uom))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var4_uom.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box((string)(var4_uom.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_uom); var4_uom = null;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_Value)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_uom); var4_uom = null;
				}
			}
		}
		class seq11_cast : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq11_cast(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq11_cast closure;
				private string var2_cast;
				public Enumerator(seq11_cast closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							var2_cast = (Altova.CoreTypes.NodeToString(closure.var1_cur));
							if (!((var2_cast) == ("UnitofMeasureExt"))) { state = 2; goto case 2;  }
							return false;
						case 2:
							state = 0;
							current = var2_cast;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_ToolErrorModel_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_ToolErrorModel_Instance
			)
			{
				this.var1_ToolErrorModel_Instance = var1_ToolErrorModel_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_ToolErrorModel;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_ToolErrorModel = ((new main(closure.var1_ToolErrorModel_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_ToolErrorModel.MoveNext()) { state = 3; goto case 3; }
							current = var2_ToolErrorModel.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_ToolErrorModel); var2_ToolErrorModel = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_ToolErrorModel); var2_ToolErrorModel = null;
				}
			}
		}

	}
}
