////////////////////////////////////////////////////////////////////////
//
// Map20To14MapToobj_risk.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map20To14
{

	public class Map20To14MapToobj_risk : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_Risk2Instance;
		// members
		#endregion //Members


		public void Run(String Risk2SourceFilename, string obj_risk2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input Risk2Source = new Altova.IO.FileInput(Risk2SourceFilename))
			// open target stream
			using (Altova.IO.Output obj_risk2Target = new Altova.IO.FileOutput(obj_risk2TargetFilename))
			{
				// run
				Run(Risk2Source, obj_risk2Target);
			}
		}

		public void Run(Altova.IO.Input Risk2Source, Altova.IO.Output obj_risk2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + Risk2Source.Filename + "...\n");
			XmlDocument Risk2DocSourceObject = XmlTreeOperations.LoadDocument(Risk2Source);


			m_Risk2Instance = Risk2DocSourceObject;
			if (runDoesCloseAll)
				Risk2Source.Close();
				// Create the target
				XmlDocument obj_risk2Doc = (obj_risk2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? obj_risk2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_Risk2Instance, Risk2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, obj_risk2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				obj_risk2Doc,
				obj_risk2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					Risk2Source.Close();
					obj_risk2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_Risk_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_Risk_Instance
			)
			{
				this.var1_Risk_Instance = var1_Risk_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private Altova.Functions.RuntimeContext var2_RuntimeContext;
				private System.Collections.IEnumerable var3_Risk;
				private System.Collections.IEnumerable var4_value;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_RuntimeContext = (Altova.Functions.RuntimeContext.Construct());
							var3_Risk = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Risk", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_Risk_Instance));
							var4_value = new Altova.Functions.Core.SequenceCache((new seq1_join(var3_Risk, var2_RuntimeContext)));
							Altova.Functions.Core.Exists(var4_value);
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("risks", "http://www.witsml.org/schemas/1series"), var4_value);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Functions.RuntimeContext.Dispose(var2_RuntimeContext);
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_Risk;
			private readonly Altova.Functions.RuntimeContext var2_state;

			public seq1_join(
				System.Collections.IEnumerable var1_Risk,
				Altova.Functions.RuntimeContext var2_state
			)
			{
				this.var1_Risk = var1_Risk;
				this.var2_state = var2_state;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var3_Risk;
				private IEnumerator var4_Aliases;
				private IEnumerator var5_Risk;
				private System.Collections.IEnumerable var6_Aliases;
				private Altova.Mapforce.IMFNode var7_Citation;
				private Altova.Mapforce.IMFNode var8_Wellbore;
				private System.Collections.IEnumerable var9_UuidAuthority;
				private System.Collections.IEnumerable var10_value;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("abs", "http://www.energistics.org/schemas/abstract");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.witsml.org/schemas/1series http://w3.energistics.org/schema/WITSML_v1.4.1.1_Data_Schema/witsml_v1.4.1.1_data/xsd_schemas/obj_risk.xsd"));
							pos++;
							return true;
						case 3:
							state = 4;
							var3_Risk = (closure.var1_Risk).GetEnumerator();
							goto case 4;
						case 4:
							state = 6;
							if (!var3_Risk.MoveNext()) { state = 5; goto case 5; }
							var4_Aliases = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var3_Risk.Current))).GetEnumerator();
							goto case 6;
						case 5:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Risk); var3_Risk = null;
							var5_Risk = (closure.var1_Risk).GetEnumerator();
							goto case 9;
						case 6:
							state = 6;
							if (!var4_Aliases.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("version", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("authority", ""), (Altova.Mapforce.IMFNode)(var4_Aliases.Current))))));
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var4_Aliases); var4_Aliases = null;
							goto case 4;
						case 9:
							state = 9;
							if (!var5_Risk.MoveNext()) { state = 10; goto case 10; }
							var6_Aliases = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var5_Risk.Current)));
							var7_Citation = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var5_Risk.Current))));
							var8_Wellbore = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var5_Risk.Current))));
							var9_UuidAuthority = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("UuidAuthority", "http://www.energistics.org/energyml/data/commonv2"), var8_Wellbore));
							var10_value = new Altova.Functions.Core.SequenceCache((new seq2_join(var9_UuidAuthority, var8_Wellbore, var6_Aliases, var7_Citation, closure.var2_state, (Altova.Mapforce.IMFNode)(var5_Risk.Current))));
							Altova.Functions.Core.Exists(var10_value);
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("risk", "http://www.witsml.org/schemas/1series"), var10_value);
							pos++;
							return true;
						case 10:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Risk); var5_Risk = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_Aliases); var4_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_Risk); var3_Risk = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Risk); var5_Risk = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_UuidAuthority;
			private readonly Altova.Mapforce.IMFNode var2_Wellbore;
			private readonly System.Collections.IEnumerable var3_Aliases;
			private readonly Altova.Mapforce.IMFNode var4_Citation;
			private readonly Altova.Functions.RuntimeContext var5_state;
			private readonly Altova.Mapforce.IMFNode var6_cur;

			public seq2_join(
				System.Collections.IEnumerable var1_UuidAuthority,
				Altova.Mapforce.IMFNode var2_Wellbore,
				System.Collections.IEnumerable var3_Aliases,
				Altova.Mapforce.IMFNode var4_Citation,
				Altova.Functions.RuntimeContext var5_state,
				Altova.Mapforce.IMFNode var6_cur
			)
			{
				this.var1_UuidAuthority = var1_UuidAuthority;
				this.var2_Wellbore = var2_Wellbore;
				this.var3_Aliases = var3_Aliases;
				this.var4_Citation = var4_Citation;
				this.var5_state = var5_state;
				this.var6_cur = var6_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var7_Aliases;
				private IEnumerator var8_UuidAuthority;
				private IEnumerator var9_UuidAuthority;
				private IEnumerator var10_Aliases;
				private IEnumerator var11_UuidAuthority;
				private IEnumerator var12_ObjectReference;
				private System.Collections.IEnumerable var13_value;
				private IEnumerator var14_SubCategory;
				private IEnumerator var15_ExtendCategory;
				private IEnumerator var16_AffectedPersonnel;
				private IEnumerator var17_DTimStart;
				private IEnumerator var18_DTimEnd;
				private IEnumerator var19_MdHoleStart;
				private IEnumerator var20_MdHoleEnd;
				private IEnumerator var21_TvdHoleStart;
				private IEnumerator var22_TvdHoleEnd;
				private IEnumerator var23_MdBitStart;
				private IEnumerator var24_MdBitEnd;
				private IEnumerator var25_DiaHole;
				private IEnumerator var26_SeverityLevel;
				private IEnumerator var27_ProbabilityLevel;
				private IEnumerator var28_Summary;
				private IEnumerator var29_Details;
				private IEnumerator var30_Identification;
				private IEnumerator var31_Contingency;
				private IEnumerator var32_Mitigation;
				private IEnumerator var33_LastUpdate;
				private IEnumerator var34_CustomData;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var7_Aliases = (closure.var3_Aliases).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var7_Aliases.MoveNext()) { state = 3; goto case 3; }
							var8_UuidAuthority = (closure.var1_UuidAuthority).GetEnumerator();
							goto case 4;
						case 3:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var7_Aliases); var7_Aliases = null;
							var9_UuidAuthority = (closure.var1_UuidAuthority).GetEnumerator();
							goto case 7;
						case 4:
							state = 4;
							if (!var8_UuidAuthority.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uidWell", ""), Altova.Functions.Core.Box(Altova.Functions.Core.SubstringBefore(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Identifier", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var7_Aliases.Current)))), Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_UuidAuthority.Current)))));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var8_UuidAuthority); var8_UuidAuthority = null;
							goto case 2;
						case 7:
							state = 7;
							if (!var9_UuidAuthority.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uidWellbore", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var9_UuidAuthority.Current))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var9_UuidAuthority); var9_UuidAuthority = null;
							var10_Aliases = (closure.var3_Aliases).GetEnumerator();
							goto case 10;
						case 10:
							state = 12;
							if (!var10_Aliases.MoveNext()) { state = 11; goto case 11; }
							var11_UuidAuthority = (closure.var1_UuidAuthority).GetEnumerator();
							goto case 12;
						case 11:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var10_Aliases); var10_Aliases = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("nameWellbore", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), closure.var2_Wellbore)))));
							pos++;
							return true;
						case 12:
							state = 12;
							if (!var11_UuidAuthority.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.Functions.Core.SubstringAfter(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Identifier", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var10_Aliases.Current)))), Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var11_UuidAuthority.Current)))));
							pos++;
							return true;
						case 13:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var11_UuidAuthority); var11_UuidAuthority = null;
							goto case 10;
						case 15:
							state = 16;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), closure.var4_Citation)))));
							pos++;
							return true;
						case 16:
							state = 17;
							var12_ObjectReference = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ObjectReference", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 17;
						case 17:
							state = 17;
							if (!var12_ObjectReference.MoveNext()) { state = 18; goto case 18; }
							var13_value = new Altova.Functions.Core.SequenceCache((new seq3_join(closure.var5_state, (Altova.Mapforce.IMFNode)(var12_ObjectReference.Current))));
							Altova.Functions.Core.Exists(var13_value);
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("objectReference", "http://www.witsml.org/schemas/1series"), var13_value);
							pos++;
							return true;
						case 18:
							state = 20;
							Altova.Mapforce.MFEnumerator.Dispose(var12_ObjectReference); var12_ObjectReference = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("type", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Type", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)))));
							pos++;
							return true;
						case 20:
							state = 21;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("category", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Category", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)))));
							pos++;
							return true;
						case 21:
							state = 22;
							var14_SubCategory = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SubCategory", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 22;
						case 22:
							state = 22;
							if (!var14_SubCategory.MoveNext()) { state = 23; goto case 23; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("subCategory", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var14_SubCategory.Current))));
							pos++;
							return true;
						case 23:
							state = 25;
							Altova.Mapforce.MFEnumerator.Dispose(var14_SubCategory); var14_SubCategory = null;
							var15_ExtendCategory = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtendCategory", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 25;
						case 25:
							state = 25;
							if (!var15_ExtendCategory.MoveNext()) { state = 26; goto case 26; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("extendCategory", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var15_ExtendCategory.Current))));
							pos++;
							return true;
						case 26:
							state = 28;
							Altova.Mapforce.MFEnumerator.Dispose(var15_ExtendCategory); var15_ExtendCategory = null;
							var16_AffectedPersonnel = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("AffectedPersonnel", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 28;
						case 28:
							state = 28;
							if (!var16_AffectedPersonnel.MoveNext()) { state = 29; goto case 29; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("affectedPersonnel", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var16_AffectedPersonnel.Current))));
							pos++;
							return true;
						case 29:
							state = 31;
							Altova.Mapforce.MFEnumerator.Dispose(var16_AffectedPersonnel); var16_AffectedPersonnel = null;
							var17_DTimStart = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTimStart", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 31;
						case 31:
							state = 31;
							if (!var17_DTimStart.MoveNext()) { state = 32; goto case 32; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimStart", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var17_DTimStart.Current))))));
							pos++;
							return true;
						case 32:
							state = 34;
							Altova.Mapforce.MFEnumerator.Dispose(var17_DTimStart); var17_DTimStart = null;
							var18_DTimEnd = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTimEnd", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 34;
						case 34:
							state = 34;
							if (!var18_DTimEnd.MoveNext()) { state = 35; goto case 35; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimEnd", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var18_DTimEnd.Current))))));
							pos++;
							return true;
						case 35:
							state = 37;
							Altova.Mapforce.MFEnumerator.Dispose(var18_DTimEnd); var18_DTimEnd = null;
							var19_MdHoleStart = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdHoleStart", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 37;
						case 37:
							state = 37;
							if (!var19_MdHoleStart.MoveNext()) { state = 38; goto case 38; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdHoleStart", "http://www.witsml.org/schemas/1series"), (new seq6_seq_((Altova.Mapforce.IMFNode)(var19_MdHoleStart.Current))));
							pos++;
							return true;
						case 38:
							state = 40;
							Altova.Mapforce.MFEnumerator.Dispose(var19_MdHoleStart); var19_MdHoleStart = null;
							var20_MdHoleEnd = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdHoleEnd", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 40;
						case 40:
							state = 40;
							if (!var20_MdHoleEnd.MoveNext()) { state = 41; goto case 41; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdHoleEnd", "http://www.witsml.org/schemas/1series"), (new seq6_seq_((Altova.Mapforce.IMFNode)(var20_MdHoleEnd.Current))));
							pos++;
							return true;
						case 41:
							state = 43;
							Altova.Mapforce.MFEnumerator.Dispose(var20_MdHoleEnd); var20_MdHoleEnd = null;
							var21_TvdHoleStart = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TvdHoleStart", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 43;
						case 43:
							state = 43;
							if (!var21_TvdHoleStart.MoveNext()) { state = 44; goto case 44; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("tvdHoleStart", "http://www.witsml.org/schemas/1series"), (new seq6_seq_((Altova.Mapforce.IMFNode)(var21_TvdHoleStart.Current))));
							pos++;
							return true;
						case 44:
							state = 46;
							Altova.Mapforce.MFEnumerator.Dispose(var21_TvdHoleStart); var21_TvdHoleStart = null;
							var22_TvdHoleEnd = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TvdHoleEnd", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 46;
						case 46:
							state = 46;
							if (!var22_TvdHoleEnd.MoveNext()) { state = 47; goto case 47; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("tvdHoleEnd", "http://www.witsml.org/schemas/1series"), (new seq6_seq_((Altova.Mapforce.IMFNode)(var22_TvdHoleEnd.Current))));
							pos++;
							return true;
						case 47:
							state = 49;
							Altova.Mapforce.MFEnumerator.Dispose(var22_TvdHoleEnd); var22_TvdHoleEnd = null;
							var23_MdBitStart = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdBitStart", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 49;
						case 49:
							state = 49;
							if (!var23_MdBitStart.MoveNext()) { state = 50; goto case 50; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdBitStart", "http://www.witsml.org/schemas/1series"), (new seq7_seq_((Altova.Mapforce.IMFNode)(var23_MdBitStart.Current))));
							pos++;
							return true;
						case 50:
							state = 52;
							Altova.Mapforce.MFEnumerator.Dispose(var23_MdBitStart); var23_MdBitStart = null;
							var24_MdBitEnd = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdBitEnd", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 52;
						case 52:
							state = 52;
							if (!var24_MdBitEnd.MoveNext()) { state = 53; goto case 53; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdBitEnd", "http://www.witsml.org/schemas/1series"), (new seq7_seq_((Altova.Mapforce.IMFNode)(var24_MdBitEnd.Current))));
							pos++;
							return true;
						case 53:
							state = 55;
							Altova.Mapforce.MFEnumerator.Dispose(var24_MdBitEnd); var24_MdBitEnd = null;
							var25_DiaHole = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DiaHole", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 55;
						case 55:
							state = 55;
							if (!var25_DiaHole.MoveNext()) { state = 56; goto case 56; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("diaHole", "http://www.witsml.org/schemas/1series"), tbf.tbf1_lengthMeasure.Eval((Altova.Mapforce.IMFNode)(var25_DiaHole.Current)));
							pos++;
							return true;
						case 56:
							state = 58;
							Altova.Mapforce.MFEnumerator.Dispose(var25_DiaHole); var25_DiaHole = null;
							var26_SeverityLevel = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SeverityLevel", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 58;
						case 58:
							state = 58;
							if (!var26_SeverityLevel.MoveNext()) { state = 59; goto case 59; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("severityLevel", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var26_SeverityLevel.Current))))))))));
							pos++;
							return true;
						case 59:
							state = 61;
							Altova.Mapforce.MFEnumerator.Dispose(var26_SeverityLevel); var26_SeverityLevel = null;
							var27_ProbabilityLevel = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ProbabilityLevel", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 61;
						case 61:
							state = 61;
							if (!var27_ProbabilityLevel.MoveNext()) { state = 62; goto case 62; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("probabilityLevel", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var27_ProbabilityLevel.Current))))))))));
							pos++;
							return true;
						case 62:
							state = 64;
							Altova.Mapforce.MFEnumerator.Dispose(var27_ProbabilityLevel); var27_ProbabilityLevel = null;
							var28_Summary = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Summary", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 64;
						case 64:
							state = 64;
							if (!var28_Summary.MoveNext()) { state = 65; goto case 65; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("summary", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var28_Summary.Current))));
							pos++;
							return true;
						case 65:
							state = 67;
							Altova.Mapforce.MFEnumerator.Dispose(var28_Summary); var28_Summary = null;
							var29_Details = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Details", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 67;
						case 67:
							state = 67;
							if (!var29_Details.MoveNext()) { state = 68; goto case 68; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("details", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var29_Details.Current))));
							pos++;
							return true;
						case 68:
							state = 70;
							Altova.Mapforce.MFEnumerator.Dispose(var29_Details); var29_Details = null;
							var30_Identification = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Identification", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 70;
						case 70:
							state = 70;
							if (!var30_Identification.MoveNext()) { state = 71; goto case 71; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("identification", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var30_Identification.Current))));
							pos++;
							return true;
						case 71:
							state = 73;
							Altova.Mapforce.MFEnumerator.Dispose(var30_Identification); var30_Identification = null;
							var31_Contingency = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Contingency", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 73;
						case 73:
							state = 73;
							if (!var31_Contingency.MoveNext()) { state = 74; goto case 74; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("contingency", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var31_Contingency.Current))));
							pos++;
							return true;
						case 74:
							state = 76;
							Altova.Mapforce.MFEnumerator.Dispose(var31_Contingency); var31_Contingency = null;
							var32_Mitigation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Mitigation", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var6_cur)).GetEnumerator();
							goto case 76;
						case 76:
							state = 76;
							if (!var32_Mitigation.MoveNext()) { state = 77; goto case 77; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mitigation", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var32_Mitigation.Current))));
							pos++;
							return true;
						case 77:
							state = 79;
							Altova.Mapforce.MFEnumerator.Dispose(var32_Mitigation); var32_Mitigation = null;
							var33_LastUpdate = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), closure.var4_Citation)).GetEnumerator();
							goto case 79;
						case 79:
							state = 79;
							if (!var33_LastUpdate.MoveNext()) { state = 80; goto case 80; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("commonData", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimLastChange", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var33_LastUpdate.Current))))))));
							pos++;
							return true;
						case 80:
							state = 82;
							Altova.Mapforce.MFEnumerator.Dispose(var33_LastUpdate); var33_LastUpdate = null;
							var34_CustomData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CustomData", "http://www.energistics.org/energyml/data/commonv2"), closure.var6_cur)).GetEnumerator();
							goto case 82;
						case 82:
							state = 82;
							if (!var34_CustomData.MoveNext()) { state = 83; goto case 83; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), tbf.tbf2_cs_customData.Eval((Altova.Mapforce.IMFNode)(var34_CustomData.Current)));
							pos++;
							return true;
						case 83:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var34_CustomData); var34_CustomData = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var8_UuidAuthority); var8_UuidAuthority = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_Aliases); var7_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_UuidAuthority); var9_UuidAuthority = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_UuidAuthority); var11_UuidAuthority = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_Aliases); var10_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_ObjectReference); var12_ObjectReference = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_SubCategory); var14_SubCategory = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_ExtendCategory); var15_ExtendCategory = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_AffectedPersonnel); var16_AffectedPersonnel = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_DTimStart); var17_DTimStart = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_DTimEnd); var18_DTimEnd = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_MdHoleStart); var19_MdHoleStart = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_MdHoleEnd); var20_MdHoleEnd = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_TvdHoleStart); var21_TvdHoleStart = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_TvdHoleEnd); var22_TvdHoleEnd = null;
					Altova.Mapforce.MFEnumerator.Dispose(var23_MdBitStart); var23_MdBitStart = null;
					Altova.Mapforce.MFEnumerator.Dispose(var24_MdBitEnd); var24_MdBitEnd = null;
					Altova.Mapforce.MFEnumerator.Dispose(var25_DiaHole); var25_DiaHole = null;
					Altova.Mapforce.MFEnumerator.Dispose(var26_SeverityLevel); var26_SeverityLevel = null;
					Altova.Mapforce.MFEnumerator.Dispose(var27_ProbabilityLevel); var27_ProbabilityLevel = null;
					Altova.Mapforce.MFEnumerator.Dispose(var28_Summary); var28_Summary = null;
					Altova.Mapforce.MFEnumerator.Dispose(var29_Details); var29_Details = null;
					Altova.Mapforce.MFEnumerator.Dispose(var30_Identification); var30_Identification = null;
					Altova.Mapforce.MFEnumerator.Dispose(var31_Contingency); var31_Contingency = null;
					Altova.Mapforce.MFEnumerator.Dispose(var32_Mitigation); var32_Mitigation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var33_LastUpdate); var33_LastUpdate = null;
					Altova.Mapforce.MFEnumerator.Dispose(var34_CustomData); var34_CustomData = null;
				}
			}
		}
		class seq3_join : IEnumerable
		{
			private readonly Altova.Functions.RuntimeContext var1_state;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq3_join(
				Altova.Functions.RuntimeContext var1_state,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_state = var1_state;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_join closure;
				private Altova.Mapforce.IMFNode var3_ContentType;
				private System.Collections.IEnumerable var4_value;
				private System.Collections.IEnumerable var5_select_exists;
				private IEnumerator var6_result;
				private IEnumerator var7_UuidAuthority;
				public Enumerator(seq3_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_ContentType = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ContentType", "http://www.energistics.org/energyml/data/commonv2"), closure.var2_cur)));
							var4_value = new Altova.Functions.Core.SequenceCache((new seq4_Title(closure.var1_state, closure.var2_cur)));
							Altova.Functions.Core.Exists(var4_value);
							var5_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var1_state, Altova.CoreTypes.NodeToString(var3_ContentType), var4_value));
							var6_result = (var5_select_exists).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var6_result.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("object", ""), Altova.Functions.Core.Box((string)(var6_result.Current)));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var6_result); var6_result = null;
							var7_UuidAuthority = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("UuidAuthority", "http://www.energistics.org/energyml/data/commonv2"), closure.var2_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var7_UuidAuthority.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uidRef", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_UuidAuthority.Current))));
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var7_UuidAuthority); var7_UuidAuthority = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var6_result); var6_result = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_UuidAuthority); var7_UuidAuthority = null;
				}
			}
		}
		class seq4_Title : IEnumerable
		{
			private readonly Altova.Functions.RuntimeContext var1_state;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq4_Title(
				Altova.Functions.RuntimeContext var1_state,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_state = var1_state;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_Title closure;
				private Altova.Mapforce.IMFNode var3_Title;
				private System.Collections.IEnumerable var4_select_exists;
				private IEnumerator var5_result;
				public Enumerator(seq4_Title closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_Title = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), closure.var2_cur)));
							var4_select_exists = new Altova.Functions.Core.SequenceCache(user.select_exists.Eval(closure.var1_state, Altova.CoreTypes.NodeToString(var3_Title), (new seq5_seq_())));
							var5_result = (var4_select_exists).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var5_result.MoveNext()) { state = 3; goto case 3; }
							current = var5_result.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_result); var5_result = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_result); var5_result = null;
				}
			}
		}
		class seq5_seq_ : IEnumerable
		{

			public seq5_seq_(
			)
			{
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_seq_ closure;
				public Enumerator(seq5_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq6_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq6_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_seq_ closure;
				public Enumerator(seq6_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("datum", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("datum", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq7_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq7_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_seq_ closure;
				public Enumerator(seq7_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_Risk_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_Risk_Instance
			)
			{
				this.var1_Risk_Instance = var1_Risk_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_Risk;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Risk = ((new main(closure.var1_Risk_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_Risk.MoveNext()) { state = 3; goto case 3; }
							current = var2_Risk.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Risk); var2_Risk = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Risk); var2_Risk = null;
				}
			}
		}

	}
}
