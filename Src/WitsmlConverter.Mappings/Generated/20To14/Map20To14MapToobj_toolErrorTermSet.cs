////////////////////////////////////////////////////////////////////////
//
// Map20To14MapToobj_toolErrorTermSet.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map20To14
{

	public class Map20To14MapToobj_toolErrorTermSet : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_ToolErrorTermSet2Instance;
		// members
		#endregion //Members


		public void Run(String ToolErrorTermSet2SourceFilename, string obj_toolErrorTermSet2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input ToolErrorTermSet2Source = new Altova.IO.FileInput(ToolErrorTermSet2SourceFilename))
			// open target stream
			using (Altova.IO.Output obj_toolErrorTermSet2Target = new Altova.IO.FileOutput(obj_toolErrorTermSet2TargetFilename))
			{
				// run
				Run(ToolErrorTermSet2Source, obj_toolErrorTermSet2Target);
			}
		}

		public void Run(Altova.IO.Input ToolErrorTermSet2Source, Altova.IO.Output obj_toolErrorTermSet2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + ToolErrorTermSet2Source.Filename + "...\n");
			XmlDocument ToolErrorTermSet2DocSourceObject = XmlTreeOperations.LoadDocument(ToolErrorTermSet2Source);


			m_ToolErrorTermSet2Instance = ToolErrorTermSet2DocSourceObject;
			if (runDoesCloseAll)
				ToolErrorTermSet2Source.Close();
				// Create the target
				XmlDocument obj_toolErrorTermSet2Doc = (obj_toolErrorTermSet2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? obj_toolErrorTermSet2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_ToolErrorTermSet2Instance, ToolErrorTermSet2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, obj_toolErrorTermSet2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				obj_toolErrorTermSet2Doc,
				obj_toolErrorTermSet2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					ToolErrorTermSet2Source.Close();
					obj_toolErrorTermSet2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_ToolErrorTermSet_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_ToolErrorTermSet_Instance
			)
			{
				this.var1_ToolErrorTermSet_Instance = var1_ToolErrorTermSet_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_ToolErrorTermSet;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_ToolErrorTermSet = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ToolErrorTermSet", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_ToolErrorTermSet_Instance));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("toolErrorTermSets", "http://www.witsml.org/schemas/1series"), (new seq1_join(var2_ToolErrorTermSet)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_ToolErrorTermSet;

			public seq1_join(
				System.Collections.IEnumerable var1_ToolErrorTermSet
			)
			{
				this.var1_ToolErrorTermSet = var1_ToolErrorTermSet;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_ToolErrorTermSet;
				private IEnumerator var3_Aliases;
				private IEnumerator var4_ToolErrorTermSet;
				private Altova.Mapforce.IMFNode var5_Citation;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("abs", "http://www.energistics.org/schemas/abstract");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.witsml.org/schemas/1series http://w3.energistics.org/schema/WITSML_v1.4.1.1_Data_Schema/witsml_v1.4.1.1_data/xsd_schemas/obj_toolErrorTermSet.xsd"));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_ToolErrorTermSet = (closure.var1_ToolErrorTermSet).GetEnumerator();
							goto case 4;
						case 4:
							state = 6;
							if (!var2_ToolErrorTermSet.MoveNext()) { state = 5; goto case 5; }
							var3_Aliases = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var2_ToolErrorTermSet.Current))).GetEnumerator();
							goto case 6;
						case 5:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var2_ToolErrorTermSet); var2_ToolErrorTermSet = null;
							var4_ToolErrorTermSet = (closure.var1_ToolErrorTermSet).GetEnumerator();
							goto case 9;
						case 6:
							state = 6;
							if (!var3_Aliases.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("version", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("authority", ""), (Altova.Mapforce.IMFNode)(var3_Aliases.Current))))));
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Aliases); var3_Aliases = null;
							goto case 4;
						case 9:
							state = 9;
							if (!var4_ToolErrorTermSet.MoveNext()) { state = 10; goto case 10; }
							var5_Citation = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var4_ToolErrorTermSet.Current))));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("toolErrorTermSet", "http://www.witsml.org/schemas/1series"), (new seq2_join(var5_Citation, (Altova.Mapforce.IMFNode)(var4_ToolErrorTermSet.Current))));
							pos++;
							return true;
						case 10:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_ToolErrorTermSet); var4_ToolErrorTermSet = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Aliases); var3_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_ToolErrorTermSet); var2_ToolErrorTermSet = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_ToolErrorTermSet); var4_ToolErrorTermSet = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_Citation;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq2_join(
				Altova.Mapforce.IMFNode var1_Citation,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_Citation = var1_Citation;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var3_Aliases;
				private IEnumerator var4_Authorization;
				private IEnumerator var5_Nomenclature;
				private IEnumerator var6_ErrorTerm;
				private System.Collections.IEnumerable var7_MeasureClass;
				private IEnumerator var8_CustomData;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_Aliases = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), closure.var2_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_Aliases.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Identifier", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var3_Aliases.Current))))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Aliases); var3_Aliases = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_Citation)))));
							pos++;
							return true;
						case 5:
							state = 6;
							var4_Authorization = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Authorization", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var4_Authorization.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("authorization", "http://www.witsml.org/schemas/1series"), (new seq3_join((Altova.Mapforce.IMFNode)(var4_Authorization.Current))));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var4_Authorization); var4_Authorization = null;
							var5_Nomenclature = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Nomenclature", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var5_Nomenclature.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("nomenclature", "http://www.witsml.org/schemas/1series"), (new seq4_join((Altova.Mapforce.IMFNode)(var5_Nomenclature.Current))));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Nomenclature); var5_Nomenclature = null;
							var6_ErrorTerm = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ErrorTerm", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var6_ErrorTerm.MoveNext()) { state = 13; goto case 13; }
							var7_MeasureClass = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MeasureClass", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var6_ErrorTerm.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("errorTerm", "http://www.witsml.org/schemas/1series"), (new seq8_join(var7_MeasureClass, (Altova.Mapforce.IMFNode)(var6_ErrorTerm.Current))));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var6_ErrorTerm); var6_ErrorTerm = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("commonData", "http://www.witsml.org/schemas/1series"), (new seq17_map(closure.var1_Citation)));
							pos++;
							return true;
						case 15:
							state = 16;
							var8_CustomData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CustomData", "http://www.energistics.org/energyml/data/commonv2"), closure.var2_cur)).GetEnumerator();
							goto case 16;
						case 16:
							state = 16;
							if (!var8_CustomData.MoveNext()) { state = 17; goto case 17; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), tbf.tbf1_cs_customData.Eval((Altova.Mapforce.IMFNode)(var8_CustomData.Current)));
							pos++;
							return true;
						case 17:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var8_CustomData); var8_CustomData = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Aliases); var3_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_Authorization); var4_Authorization = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Nomenclature); var5_Nomenclature = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_ErrorTerm); var6_ErrorTerm = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_CustomData); var8_CustomData = null;
				}
			}
		}
		class seq3_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq3_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_join closure;
				private IEnumerator var2_Author;
				private IEnumerator var3_Source;
				private IEnumerator var4_Version;
				private IEnumerator var5_Comment;
				public Enumerator(seq3_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Author = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Author", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_Author.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("author", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_Author.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Author); var2_Author = null;
							var3_Source = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Source", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_Source.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("source", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_Source.Current))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Source); var3_Source = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("authority", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Authority", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 8:
							state = 9;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("status", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Status", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 9:
							state = 10;
							var4_Version = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Version", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_Version.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("version", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_Version.Current))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_Version); var4_Version = null;
							var5_Comment = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Comment", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_Comment.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("comment", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_Comment.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Comment); var5_Comment = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Author); var2_Author = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_Source); var3_Source = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_Version); var4_Version = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Comment); var5_Comment = null;
				}
			}
		}
		class seq4_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq4_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_join closure;
				private IEnumerator var2_Parameter;
				private IEnumerator var3_Function;
				private IEnumerator var4_Constant;
				public Enumerator(seq4_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Parameter = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Parameter", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_Parameter.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("parameter", "http://www.witsml.org/schemas/1series"), (new seq5_join((Altova.Mapforce.IMFNode)(var2_Parameter.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Parameter); var2_Parameter = null;
							var3_Function = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Function", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_Function.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("function", "http://www.witsml.org/schemas/1series"), (new seq5_join((Altova.Mapforce.IMFNode)(var3_Function.Current))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Function); var3_Function = null;
							var4_Constant = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Constant", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var4_Constant.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("constant", "http://www.witsml.org/schemas/1series"), (new seq7_join((Altova.Mapforce.IMFNode)(var4_Constant.Current))));
							pos++;
							return true;
						case 9:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_Constant); var4_Constant = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Parameter); var2_Parameter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_Function); var3_Function = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_Constant); var4_Constant = null;
				}
			}
		}
		class seq5_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq5_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_join closure;
				private IEnumerator var2_ExtensionNameValue;
				public Enumerator(seq5_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 4:
							state = 5;
							var2_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var2_ExtensionNameValue.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (new seq6_join((Altova.Mapforce.IMFNode)(var2_ExtensionNameValue.Current))));
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_ExtensionNameValue); var2_ExtensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_ExtensionNameValue); var2_ExtensionNameValue = null;
				}
			}
		}
		class seq6_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq6_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_join closure;
				private IEnumerator var2_DTim;
				private IEnumerator var3_Index;
				private IEnumerator var4_MeasureClass;
				private IEnumerator var5_Description;
				public Enumerator(seq6_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Value", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_DTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTim", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var2_DTim.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_DTim.Current))))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_DTim); var2_DTim = null;
							var3_Index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Index", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var3_Index.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_Index.Current))))))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
							var4_MeasureClass = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_MeasureClass.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_MeasureClass.Current))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_MeasureClass); var4_MeasureClass = null;
							var5_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_Description.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_Description.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_DTim); var2_DTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_MeasureClass); var4_MeasureClass = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
				}
			}
		}
		class seq7_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq7_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_join closure;
				private IEnumerator var2_ExtensionNameValue;
				public Enumerator(seq7_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Value", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)))))));
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("unit", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Unit", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 6:
							state = 7;
							var2_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var2_ExtensionNameValue.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (new seq6_join((Altova.Mapforce.IMFNode)(var2_ExtensionNameValue.Current))));
							pos++;
							return true;
						case 8:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_ExtensionNameValue); var2_ExtensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_ExtensionNameValue); var2_ExtensionNameValue = null;
				}
			}
		}
		class seq8_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_MeasureClass;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq8_join(
				System.Collections.IEnumerable var1_MeasureClass,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_MeasureClass = var1_MeasureClass;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq8_join closure;
				private IEnumerator var3_Type;
				private IEnumerator var4_filter;
				private IEnumerator var5_Description;
				private IEnumerator var6_ErrorCoefficient;
				private System.Collections.IEnumerable var7_AbstractIscwsaErrorC;
				private IEnumerator var8_OperatingMode;
				private IEnumerator var9_ExtensionNameValue;
				public Enumerator(seq8_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var2_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var3_Type = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Type", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var3_Type.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("type", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_Type.Current))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Type); var3_Type = null;
							var4_filter = (closure.var1_MeasureClass).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var4_filter.MoveNext()) { state = 8; goto case 8; }
							if (!((Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_filter.Current))) == ("linear acceleration"))) { state = 7; goto case 7;  }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box("acceleration linear"));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var4_filter); var4_filter = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("label", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Label", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)))));
							pos++;
							return true;
						case 10:
							state = 11;
							var5_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var5_Description.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_Description.Current))));
							pos++;
							return true;
						case 12:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
							var6_ErrorCoefficient = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ErrorCoefficient", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 14;
						case 14:
							state = 14;
							if (!var6_ErrorCoefficient.MoveNext()) { state = 15; goto case 15; }
							var7_AbstractIscwsaErrorC = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("AbstractIscwsaErrorCoefficient", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var6_ErrorCoefficient.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("errorCoefficient", "http://www.witsml.org/schemas/1series"), (new seq9_join(var7_AbstractIscwsaErrorC, (Altova.Mapforce.IMFNode)(var6_ErrorCoefficient.Current))));
							pos++;
							return true;
						case 15:
							state = 17;
							Altova.Mapforce.MFEnumerator.Dispose(var6_ErrorCoefficient); var6_ErrorCoefficient = null;
							var8_OperatingMode = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("OperatingMode", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 17;
						case 17:
							state = 17;
							if (!var8_OperatingMode.MoveNext()) { state = 18; goto case 18; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("operatingMode", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_OperatingMode.Current))));
							pos++;
							return true;
						case 18:
							state = 20;
							Altova.Mapforce.MFEnumerator.Dispose(var8_OperatingMode); var8_OperatingMode = null;
							var9_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 20;
						case 20:
							state = 20;
							if (!var9_ExtensionNameValue.MoveNext()) { state = 21; goto case 21; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (new seq16_join((Altova.Mapforce.IMFNode)(var9_ExtensionNameValue.Current), closure.var1_MeasureClass)));
							pos++;
							return true;
						case 21:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var9_ExtensionNameValue); var9_ExtensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Type); var3_Type = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_filter); var4_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_ErrorCoefficient); var6_ErrorCoefficient = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_OperatingMode); var8_OperatingMode = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_ExtensionNameValue); var9_ExtensionNameValue = null;
				}
			}
		}
		class seq9_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_AbstractIscwsaErrorC;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq9_join(
				System.Collections.IEnumerable var1_AbstractIscwsaErrorC,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_AbstractIscwsaErrorC = var1_AbstractIscwsaErrorC;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq9_join closure;
				private IEnumerator var3_filter;
				private IEnumerator var4_filter;
				private IEnumerator var5_filter;
				private IEnumerator var6_filter;
				private IEnumerator var7_ExtensionNameValue;
				public Enumerator(seq9_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var2_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							var3_filter = (closure.var1_AbstractIscwsaErrorC).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var3_filter.MoveNext()) { state = 4; goto case 4; }
							if (!((bool)Altova.Functions.Core.First((new seq11_CoreAny((new seq10_map((Altova.Mapforce.IMFNode)(var3_filter.Current)))))))) { state = 3; goto case 3;  }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("azi", "http://www.witsml.org/schemas/1series"), (new seq12_seq_()));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var3_filter); var3_filter = null;
							var4_filter = (closure.var1_AbstractIscwsaErrorC).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var4_filter.MoveNext()) { state = 7; goto case 7; }
							if (!((bool)Altova.Functions.Core.First((new seq11_CoreAny((new seq13_map((Altova.Mapforce.IMFNode)(var4_filter.Current)))))))) { state = 6; goto case 6;  }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("inc", "http://www.witsml.org/schemas/1series"), (new seq12_seq_()));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var4_filter); var4_filter = null;
							var5_filter = (closure.var1_AbstractIscwsaErrorC).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var5_filter.MoveNext()) { state = 10; goto case 10; }
							if (!((bool)Altova.Functions.Core.First((new seq11_CoreAny((new seq14_map((Altova.Mapforce.IMFNode)(var5_filter.Current)))))))) { state = 9; goto case 9;  }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("depth", "http://www.witsml.org/schemas/1series"), (new seq12_seq_()));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var5_filter); var5_filter = null;
							var6_filter = (closure.var1_AbstractIscwsaErrorC).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var6_filter.MoveNext()) { state = 13; goto case 13; }
							if (!((bool)Altova.Functions.Core.First((new seq11_CoreAny((new seq15_map((Altova.Mapforce.IMFNode)(var6_filter.Current)))))))) { state = 12; goto case 12;  }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("tvd", "http://www.witsml.org/schemas/1series"), (new seq12_seq_()));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var6_filter); var6_filter = null;
							var7_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 15;
						case 15:
							state = 15;
							if (!var7_ExtensionNameValue.MoveNext()) { state = 16; goto case 16; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (new seq6_join((Altova.Mapforce.IMFNode)(var7_ExtensionNameValue.Current))));
							pos++;
							return true;
						case 16:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var7_ExtensionNameValue); var7_ExtensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_filter); var3_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_filter); var4_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_filter); var5_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_filter); var6_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_ExtensionNameValue); var7_ExtensionNameValue = null;
				}
			}
		}
		class seq10_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq10_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq10_map closure;
				private IEnumerator var2_type;
				public Enumerator(seq10_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_type = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("type", "http://www.w3.org/2001/XMLSchema-instance"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_type.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Equal(Altova.CoreTypes.NodeToQName((Altova.Mapforce.IMFNode)(var2_type.Current)), Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}Azi"));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
				}
			}
		}
		class seq11_CoreAny : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_sequence;

			public seq11_CoreAny(
				System.Collections.IEnumerable var1_sequence
			)
			{
				this.var1_sequence = var1_sequence;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq11_CoreAny closure;
				private IEnumerator var2_enum;
				public Enumerator(seq11_CoreAny closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_enum = (closure.var1_sequence).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_enum.MoveNext()) { state = 3; goto case 3; }
							if (!((bool)(var2_enum.Current))) { state = 2; goto case 2;  }
							current = Altova.CoreTypes.ParseBoolean("true");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.CoreTypes.ParseBoolean("false");
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_enum); var2_enum = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_enum); var2_enum = null;
				}
			}
		}
		class seq12_seq_ : IEnumerable
		{

			public seq12_seq_(
			)
			{
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq12_seq_ closure;
				public Enumerator(seq12_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq13_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq13_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq13_map closure;
				private IEnumerator var2_type;
				public Enumerator(seq13_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_type = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("type", "http://www.w3.org/2001/XMLSchema-instance"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_type.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Equal(Altova.CoreTypes.NodeToQName((Altova.Mapforce.IMFNode)(var2_type.Current)), Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}Inc"));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
				}
			}
		}
		class seq14_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq14_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq14_map closure;
				private IEnumerator var2_type;
				public Enumerator(seq14_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_type = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("type", "http://www.w3.org/2001/XMLSchema-instance"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_type.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Equal(Altova.CoreTypes.NodeToQName((Altova.Mapforce.IMFNode)(var2_type.Current)), Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}Depth"));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
				}
			}
		}
		class seq15_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq15_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq15_map closure;
				private IEnumerator var2_type;
				public Enumerator(seq15_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_type = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("type", "http://www.w3.org/2001/XMLSchema-instance"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_type.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Equal(Altova.CoreTypes.NodeToQName((Altova.Mapforce.IMFNode)(var2_type.Current)), Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}Tvd"));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
				}
			}
		}
		class seq16_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_MeasureClass;

			public seq16_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_MeasureClass
			)
			{
				this.var1_cur = var1_cur;
				this.var2_MeasureClass = var2_MeasureClass;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq16_join closure;
				private IEnumerator var3_DTim;
				private IEnumerator var4_Index;
				private IEnumerator var5_filter;
				private IEnumerator var6_Description;
				public Enumerator(seq16_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Value", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var3_DTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTim", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var3_DTim.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_DTim.Current))))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var3_DTim); var3_DTim = null;
							var4_Index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Index", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var4_Index.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_Index.Current))))))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var4_Index); var4_Index = null;
							var5_filter = (closure.var2_MeasureClass).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var5_filter.MoveNext()) { state = 11; goto case 11; }
							if (!(Altova.Functions.Core.LogicalNot((Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_filter.Current))) == ("linear acceleration")))) { state = 10; goto case 10;  }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_filter.Current))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var5_filter); var5_filter = null;
							var6_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var6_Description.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_Description.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var6_Description); var6_Description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_DTim); var3_DTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_Index); var4_Index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_filter); var5_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_Description); var6_Description = null;
				}
			}
		}
		class seq17_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_Citation;

			public seq17_map(
				Altova.Mapforce.IMFNode var1_Citation
			)
			{
				this.var1_Citation = var1_Citation;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq17_map closure;
				private IEnumerator var2_LastUpdate;
				public Enumerator(seq17_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_LastUpdate = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_Citation)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_LastUpdate.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimLastChange", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_LastUpdate.Current))))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_LastUpdate); var2_LastUpdate = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_LastUpdate); var2_LastUpdate = null;
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_ToolErrorTermSet_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_ToolErrorTermSet_Instance
			)
			{
				this.var1_ToolErrorTermSet_Instance = var1_ToolErrorTermSet_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_ToolErrorTermSet;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_ToolErrorTermSet = ((new main(closure.var1_ToolErrorTermSet_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_ToolErrorTermSet.MoveNext()) { state = 3; goto case 3; }
							current = var2_ToolErrorTermSet.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_ToolErrorTermSet); var2_ToolErrorTermSet = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_ToolErrorTermSet); var2_ToolErrorTermSet = null;
				}
			}
		}

	}
}
