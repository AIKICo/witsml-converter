////////////////////////////////////////////////////////////////////////
//
// Map20To14MapToobj_log.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map20To14
{

	public class Map20To14MapToobj_log : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_Log2Instance;
		// members
		#endregion //Members


		public void Run(String Log2SourceFilename, string obj_log2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input Log2Source = new Altova.IO.FileInput(Log2SourceFilename))
			// open target stream
			using (Altova.IO.Output obj_log2Target = new Altova.IO.FileOutput(obj_log2TargetFilename))
			{
				// run
				Run(Log2Source, obj_log2Target);
			}
		}

		public void Run(Altova.IO.Input Log2Source, Altova.IO.Output obj_log2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + Log2Source.Filename + "...\n");
			XmlDocument Log2DocSourceObject = XmlTreeOperations.LoadDocument(Log2Source);


			m_Log2Instance = Log2DocSourceObject;
			if (runDoesCloseAll)
				Log2Source.Close();
				// Create the target
				XmlDocument obj_log2Doc = (obj_log2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? obj_log2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_Log2Instance, Log2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, obj_log2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				obj_log2Doc,
				obj_log2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					Log2Source.Close();
					obj_log2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_Log_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_Log_Instance
			)
			{
				this.var1_Log_Instance = var1_Log_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_Log;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_Log = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Log", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_Log_Instance));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("logs", "http://www.witsml.org/schemas/1series"), (new seq1_join(var2_Log)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_Log;

			public seq1_join(
				System.Collections.IEnumerable var1_Log
			)
			{
				this.var1_Log = var1_Log;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_Log;
				private IEnumerator var3_Aliases;
				private IEnumerator var4_Log;
				private System.Collections.IEnumerable var5_TimeDepth;
				private System.Collections.IEnumerable var6_EndIndex;
				private System.Collections.IEnumerable var7_LoggingCompanyName;
				private System.Collections.IEnumerable var8_PassNumber;
				private System.Collections.IEnumerable var9_StartIndex;
				private System.Collections.IEnumerable var10_ChannelSet;
				private Altova.Mapforce.IMFNode var11_Citation;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("abs", "http://www.energistics.org/schemas/abstract");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.witsml.org/schemas/1series http://w3.energistics.org/schema/WITSML_v1.4.1.1_Data_Schema/witsml_v1.4.1.1_data/xsd_schemas/obj_log.xsd"));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_Log = (closure.var1_Log).GetEnumerator();
							goto case 4;
						case 4:
							state = 6;
							if (!var2_Log.MoveNext()) { state = 5; goto case 5; }
							var3_Aliases = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var2_Log.Current))).GetEnumerator();
							goto case 6;
						case 5:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Log); var2_Log = null;
							var4_Log = (closure.var1_Log).GetEnumerator();
							goto case 9;
						case 6:
							state = 6;
							if (!var3_Aliases.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("version", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("authority", ""), (Altova.Mapforce.IMFNode)(var3_Aliases.Current))))));
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Aliases); var3_Aliases = null;
							goto case 4;
						case 9:
							state = 9;
							if (!var4_Log.MoveNext()) { state = 10; goto case 10; }
							var5_TimeDepth = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TimeDepth", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Log.Current)));
							var6_EndIndex = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("EndIndex", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Log.Current)));
							var7_LoggingCompanyName = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LoggingCompanyName", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Log.Current)));
							var8_PassNumber = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PassNumber", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Log.Current)));
							var9_StartIndex = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("StartIndex", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Log.Current)));
							var10_ChannelSet = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ChannelSet", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Log.Current)));
							var11_Citation = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var4_Log.Current))));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("log", "http://www.witsml.org/schemas/1series"), (new seq2_join((Altova.Mapforce.IMFNode)(var4_Log.Current), var9_StartIndex, var8_PassNumber, var11_Citation, var5_TimeDepth, var10_ChannelSet, var6_EndIndex, var7_LoggingCompanyName)));
							pos++;
							return true;
						case 10:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_Log); var4_Log = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Aliases); var3_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_Log); var2_Log = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_Log); var4_Log = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_StartIndex;
			private readonly System.Collections.IEnumerable var3_PassNumber;
			private readonly Altova.Mapforce.IMFNode var4_Citation;
			private readonly System.Collections.IEnumerable var5_TimeDepth;
			private readonly System.Collections.IEnumerable var6_ChannelSet;
			private readonly System.Collections.IEnumerable var7_EndIndex;
			private readonly System.Collections.IEnumerable var8_LoggingCompanyName;

			public seq2_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_StartIndex,
				System.Collections.IEnumerable var3_PassNumber,
				Altova.Mapforce.IMFNode var4_Citation,
				System.Collections.IEnumerable var5_TimeDepth,
				System.Collections.IEnumerable var6_ChannelSet,
				System.Collections.IEnumerable var7_EndIndex,
				System.Collections.IEnumerable var8_LoggingCompanyName
			)
			{
				this.var1_cur = var1_cur;
				this.var2_StartIndex = var2_StartIndex;
				this.var3_PassNumber = var3_PassNumber;
				this.var4_Citation = var4_Citation;
				this.var5_TimeDepth = var5_TimeDepth;
				this.var6_ChannelSet = var6_ChannelSet;
				this.var7_EndIndex = var7_EndIndex;
				this.var8_LoggingCompanyName = var8_LoggingCompanyName;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var9_distinct_values;
				private IEnumerator var10_distinct_values;
				private IEnumerator var11_RunNumber;
				private IEnumerator var12_ChannelSet;
				private IEnumerator var13_Channel;
				private IEnumerator var15_distinct_values;
				private IEnumerator var14_RunNumber;
				private IEnumerator var16_distinct_values;
				private IEnumerator var17_filter;
				private IEnumerator var18_filter;
				private IEnumerator var19_filter;
				private IEnumerator var20_filter;
				private IEnumerator var21_distinct_values;
				private IEnumerator var22_ChannelSet;
				private IEnumerator var23_Channel;
				private System.Collections.IEnumerable var24_StartIndex;
				private IEnumerator var27_CustomData;
				private System.Collections.IEnumerable var25_EndIndex;
				private System.Collections.IEnumerable var26_box;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("nameWellbore", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)))))));
							pos++;
							return true;
						case 2:
							state = 3;
							var9_distinct_values = (Altova.Functions.Core.DistinctValues(Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), closure.var4_Citation)))))).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var9_distinct_values.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box((string)(var9_distinct_values.Current)));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var9_distinct_values); var9_distinct_values = null;
							var10_distinct_values = (Altova.Functions.Core.DistinctValues((new seq3_if_exists(closure.var6_ChannelSet, closure.var8_LoggingCompanyName)))).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var10_distinct_values.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("serviceCompany", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box((string)(var10_distinct_values.Current)));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var10_distinct_values); var10_distinct_values = null;
							var11_RunNumber = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("RunNumber", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var11_RunNumber.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("runNumber", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var11_RunNumber.Current))));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var11_RunNumber); var11_RunNumber = null;
							var12_ChannelSet = (closure.var6_ChannelSet).GetEnumerator();
							goto case 12;
						case 12:
							state = 14;
							if (!var12_ChannelSet.MoveNext()) { state = 13; goto case 13; }
							var13_Channel = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Channel", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var12_ChannelSet.Current))).GetEnumerator();
							goto case 14;
						case 13:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var12_ChannelSet); var12_ChannelSet = null;
							var15_distinct_values = (Altova.Functions.Core.DistinctValues((new seq5_if_exists(closure.var2_StartIndex, closure.var3_PassNumber, closure.var6_ChannelSet)))).GetEnumerator();
							goto case 19;
						case 14:
							state = 16;
							if (!var13_Channel.MoveNext()) { state = 15; goto case 15; }
							var14_RunNumber = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("RunNumber", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var13_Channel.Current))).GetEnumerator();
							goto case 16;
						case 15:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var13_Channel); var13_Channel = null;
							goto case 12;
						case 16:
							state = 16;
							if (!var14_RunNumber.MoveNext()) { state = 17; goto case 17; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("bhaRunNumber", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var14_RunNumber.Current))))))))));
							pos++;
							return true;
						case 17:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var14_RunNumber); var14_RunNumber = null;
							goto case 14;
						case 19:
							state = 19;
							if (!var15_distinct_values.MoveNext()) { state = 20; goto case 20; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("pass", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box((string)(var15_distinct_values.Current)));
							pos++;
							return true;
						case 20:
							state = 22;
							Altova.Mapforce.MFEnumerator.Dispose(var15_distinct_values); var15_distinct_values = null;
							var16_distinct_values = (Altova.Functions.Core.DistinctValues((new seq12_if_exists(closure.var5_TimeDepth, closure.var6_ChannelSet)))).GetEnumerator();
							goto case 22;
						case 22:
							state = 22;
							if (!var16_distinct_values.MoveNext()) { state = 23; goto case 23; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("indexType", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box((string)(var16_distinct_values.Current)));
							pos++;
							return true;
						case 23:
							state = 25;
							Altova.Mapforce.MFEnumerator.Dispose(var16_distinct_values); var16_distinct_values = null;
							var17_filter = (closure.var2_StartIndex).GetEnumerator();
							goto case 25;
						case 25:
							state = 25;
							if (!var17_filter.MoveNext()) { state = 26; goto case 26; }
							if (!((bool)Altova.Functions.Core.First((new seq8_CoreAny((new seq14_map((Altova.Mapforce.IMFNode)(var17_filter.Current)))))))) { state = 25; goto case 25;  }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("startIndex", "http://www.witsml.org/schemas/1series"), (new seq15_join((Altova.Mapforce.IMFNode)(var17_filter.Current), closure.var6_ChannelSet)));
							pos++;
							return true;
						case 26:
							state = 28;
							Altova.Mapforce.MFEnumerator.Dispose(var17_filter); var17_filter = null;
							var18_filter = (closure.var7_EndIndex).GetEnumerator();
							goto case 28;
						case 28:
							state = 28;
							if (!var18_filter.MoveNext()) { state = 29; goto case 29; }
							if (!((bool)Altova.Functions.Core.First((new seq8_CoreAny((new seq14_map((Altova.Mapforce.IMFNode)(var18_filter.Current)))))))) { state = 28; goto case 28;  }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("endIndex", "http://www.witsml.org/schemas/1series"), (new seq15_join((Altova.Mapforce.IMFNode)(var18_filter.Current), closure.var6_ChannelSet)));
							pos++;
							return true;
						case 29:
							state = 31;
							Altova.Mapforce.MFEnumerator.Dispose(var18_filter); var18_filter = null;
							var19_filter = (closure.var2_StartIndex).GetEnumerator();
							goto case 31;
						case 31:
							state = 31;
							if (!var19_filter.MoveNext()) { state = 32; goto case 32; }
							if (!((bool)Altova.Functions.Core.First((new seq8_CoreAny((new seq16_map((Altova.Mapforce.IMFNode)(var19_filter.Current)))))))) { state = 31; goto case 31;  }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("startDateTimeIndex", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Time", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var19_filter.Current))))))));
							pos++;
							return true;
						case 32:
							state = 34;
							Altova.Mapforce.MFEnumerator.Dispose(var19_filter); var19_filter = null;
							var20_filter = (closure.var7_EndIndex).GetEnumerator();
							goto case 34;
						case 34:
							state = 34;
							if (!var20_filter.MoveNext()) { state = 35; goto case 35; }
							if (!((bool)Altova.Functions.Core.First((new seq8_CoreAny((new seq16_map((Altova.Mapforce.IMFNode)(var20_filter.Current)))))))) { state = 34; goto case 34;  }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("endDateTimeIndex", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Time", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var20_filter.Current))))))));
							pos++;
							return true;
						case 35:
							state = 37;
							Altova.Mapforce.MFEnumerator.Dispose(var20_filter); var20_filter = null;
							var21_distinct_values = (Altova.Functions.Core.DistinctValues(Altova.Functions.Core.Box((string)Altova.Functions.Core.Last((new seq17_join(closure.var6_ChannelSet)))))).GetEnumerator();
							goto case 37;
						case 37:
							state = 37;
							if (!var21_distinct_values.MoveNext()) { state = 38; goto case 38; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("direction", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box((string)(var21_distinct_values.Current)));
							pos++;
							return true;
						case 38:
							state = 40;
							Altova.Mapforce.MFEnumerator.Dispose(var21_distinct_values); var21_distinct_values = null;
							var22_ChannelSet = (closure.var6_ChannelSet).GetEnumerator();
							goto case 40;
						case 40:
							state = 42;
							if (!var22_ChannelSet.MoveNext()) { state = 41; goto case 41; }
							var23_Channel = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Channel", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var22_ChannelSet.Current))).GetEnumerator();
							goto case 42;
						case 41:
							state = 45;
							Altova.Mapforce.MFEnumerator.Dispose(var22_ChannelSet); var22_ChannelSet = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("commonData", "http://www.witsml.org/schemas/1series"), (new seq20_join(closure.var1_cur, closure.var4_Citation, closure.var6_ChannelSet)));
							pos++;
							return true;
						case 42:
							state = 42;
							if (!var23_Channel.MoveNext()) { state = 43; goto case 43; }
							var24_StartIndex = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("StartIndex", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var23_Channel.Current)));
							var25_EndIndex = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("EndIndex", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var23_Channel.Current)));
							var26_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Uom", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var23_Channel.Current))))));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("logCurveInfo", "http://www.witsml.org/schemas/1series"), (new seq18_join((Altova.Mapforce.IMFNode)(var22_ChannelSet.Current), var24_StartIndex, var25_EndIndex, var26_box, (Altova.Mapforce.IMFNode)(var23_Channel.Current))));
							pos++;
							return true;
						case 43:
							state = 40;
							Altova.Mapforce.MFEnumerator.Dispose(var23_Channel); var23_Channel = null;
							goto case 40;
						case 45:
							state = 46;
							var27_CustomData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CustomData", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 46;
						case 46:
							state = 46;
							if (!var27_CustomData.MoveNext()) { state = 47; goto case 47; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), tbf.tbf1_cs_customData.Eval((Altova.Mapforce.IMFNode)(var27_CustomData.Current)));
							pos++;
							return true;
						case 47:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var27_CustomData); var27_CustomData = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var9_distinct_values); var9_distinct_values = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_distinct_values); var10_distinct_values = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_RunNumber); var11_RunNumber = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_RunNumber); var14_RunNumber = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_Channel); var13_Channel = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_ChannelSet); var12_ChannelSet = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_distinct_values); var15_distinct_values = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_distinct_values); var16_distinct_values = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_filter); var17_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_filter); var18_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_filter); var19_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_filter); var20_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_distinct_values); var21_distinct_values = null;
					Altova.Mapforce.MFEnumerator.Dispose(var23_Channel); var23_Channel = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_ChannelSet); var22_ChannelSet = null;
					Altova.Mapforce.MFEnumerator.Dispose(var27_CustomData); var27_CustomData = null;
				}
			}
		}
		class seq3_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_ChannelSet;
			private readonly System.Collections.IEnumerable var2_LoggingCompanyName;

			public seq3_if_exists(
				System.Collections.IEnumerable var1_ChannelSet,
				System.Collections.IEnumerable var2_LoggingCompanyName
			)
			{
				this.var1_ChannelSet = var1_ChannelSet;
				this.var2_LoggingCompanyName = var2_LoggingCompanyName;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_if_exists closure;
				private IEnumerator var3_LoggingCompanyName;
				public Enumerator(seq3_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var2_LoggingCompanyName))) { state = 2; goto case 2;  }
							var3_LoggingCompanyName = (closure.var2_LoggingCompanyName).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = (string)Altova.Functions.Core.Last((new seq4_join(closure.var1_ChannelSet)));
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var3_LoggingCompanyName.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_LoggingCompanyName.Current));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_LoggingCompanyName); var3_LoggingCompanyName = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_LoggingCompanyName); var3_LoggingCompanyName = null;
				}
			}
		}
		class seq4_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_ChannelSet;

			public seq4_join(
				System.Collections.IEnumerable var1_ChannelSet
			)
			{
				this.var1_ChannelSet = var1_ChannelSet;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_join closure;
				private IEnumerator var2_ChannelSet;
				private IEnumerator var3_Channel;
				public Enumerator(seq4_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_ChannelSet = (closure.var1_ChannelSet).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_ChannelSet.MoveNext()) { state = 3; goto case 3; }
							var3_Channel = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Channel", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_ChannelSet.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_ChannelSet); var2_ChannelSet = null;
							return false;
						case 4:
							state = 4;
							if (!var3_Channel.MoveNext()) { state = 5; goto case 5; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LoggingCompanyName", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_Channel.Current))));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Channel); var3_Channel = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Channel); var3_Channel = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_ChannelSet); var2_ChannelSet = null;
				}
			}
		}
		class seq5_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_StartIndex;
			private readonly System.Collections.IEnumerable var2_PassNumber;
			private readonly System.Collections.IEnumerable var3_ChannelSet;

			public seq5_if_exists(
				System.Collections.IEnumerable var1_StartIndex,
				System.Collections.IEnumerable var2_PassNumber,
				System.Collections.IEnumerable var3_ChannelSet
			)
			{
				this.var1_StartIndex = var1_StartIndex;
				this.var2_PassNumber = var2_PassNumber;
				this.var3_ChannelSet = var3_ChannelSet;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_if_exists closure;
				private IEnumerator var4_PassNumber;
				private IEnumerator var5_filter;
				public Enumerator(seq5_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var2_PassNumber))) { state = 2; goto case 2;  }
							var4_PassNumber = (closure.var2_PassNumber).GetEnumerator();
							goto case 3;
						case 2:
							state = 8;
							if (!((bool)Altova.Functions.Core.First((new seq8_CoreAny((new seq6_map(closure.var1_StartIndex))))))) { state = 7; goto case 7;  }
							var5_filter = (closure.var1_StartIndex).GetEnumerator();
							goto case 8;
						case 3:
							state = 3;
							if (!var4_PassNumber.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_PassNumber.Current));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_PassNumber); var4_PassNumber = null;
							return false;
						case 7:
							state = 0;
							if (!((bool)Altova.Functions.Core.First((new seq8_CoreAny((new seq9_map(closure.var3_ChannelSet))))))) { state = 0; return false; }
							current = (string)Altova.Functions.Core.Last((new seq11_join(closure.var3_ChannelSet)));
							pos++;
							return true;
						case 8:
							state = 8;
							if (!var5_filter.MoveNext()) { state = 9; goto case 9; }
							if (!((bool)Altova.Functions.Core.First((new seq8_CoreAny((new seq7_map((Altova.Mapforce.IMFNode)(var5_filter.Current)))))))) { state = 8; goto case 8;  }
							current = Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Pass", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var5_filter.Current))))))))));
							pos++;
							return true;
						case 9:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_filter); var5_filter = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_PassNumber); var4_PassNumber = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_filter); var5_filter = null;
				}
			}
		}
		class seq6_map : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_StartIndex;

			public seq6_map(
				System.Collections.IEnumerable var1_StartIndex
			)
			{
				this.var1_StartIndex = var1_StartIndex;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_map closure;
				private IEnumerator var2_StartIndex;
				public Enumerator(seq6_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_StartIndex = (closure.var1_StartIndex).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_StartIndex.MoveNext()) { state = 3; goto case 3; }
							current = (bool)Altova.Functions.Core.First((new seq8_CoreAny((new seq7_map((Altova.Mapforce.IMFNode)(var2_StartIndex.Current))))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_StartIndex); var2_StartIndex = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_StartIndex); var2_StartIndex = null;
				}
			}
		}
		class seq7_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq7_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_map closure;
				private IEnumerator var2_type;
				public Enumerator(seq7_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_type = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("type", "http://www.w3.org/2001/XMLSchema-instance"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_type.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Equal(Altova.CoreTypes.NodeToQName((Altova.Mapforce.IMFNode)(var2_type.Current)), Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}PassIndexedDepth"));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
				}
			}
		}
		class seq8_CoreAny : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_sequence;

			public seq8_CoreAny(
				System.Collections.IEnumerable var1_sequence
			)
			{
				this.var1_sequence = var1_sequence;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq8_CoreAny closure;
				private IEnumerator var2_enum;
				public Enumerator(seq8_CoreAny closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_enum = (closure.var1_sequence).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_enum.MoveNext()) { state = 3; goto case 3; }
							if (!((bool)(var2_enum.Current))) { state = 2; goto case 2;  }
							current = Altova.CoreTypes.ParseBoolean("true");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.CoreTypes.ParseBoolean("false");
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_enum); var2_enum = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_enum); var2_enum = null;
				}
			}
		}
		class seq9_map : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_ChannelSet;

			public seq9_map(
				System.Collections.IEnumerable var1_ChannelSet
			)
			{
				this.var1_ChannelSet = var1_ChannelSet;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq9_map closure;
				private IEnumerator var2_ChannelSet;
				public Enumerator(seq9_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_ChannelSet = (closure.var1_ChannelSet).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_ChannelSet.MoveNext()) { state = 3; goto case 3; }
							current = (bool)Altova.Functions.Core.First((new seq8_CoreAny((new seq10_map((Altova.Mapforce.IMFNode)(var2_ChannelSet.Current))))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_ChannelSet); var2_ChannelSet = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_ChannelSet); var2_ChannelSet = null;
				}
			}
		}
		class seq10_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq10_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq10_map closure;
				private IEnumerator var2_Channel;
				public Enumerator(seq10_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Channel = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Channel", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_Channel.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PassNumber", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_Channel.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Channel); var2_Channel = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Channel); var2_Channel = null;
				}
			}
		}
		class seq11_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_ChannelSet;

			public seq11_join(
				System.Collections.IEnumerable var1_ChannelSet
			)
			{
				this.var1_ChannelSet = var1_ChannelSet;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq11_join closure;
				private IEnumerator var2_ChannelSet;
				private IEnumerator var3_Channel;
				private IEnumerator var4_PassNumber;
				public Enumerator(seq11_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_ChannelSet = (closure.var1_ChannelSet).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_ChannelSet.MoveNext()) { state = 3; goto case 3; }
							var3_Channel = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Channel", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_ChannelSet.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_ChannelSet); var2_ChannelSet = null;
							return false;
						case 4:
							state = 6;
							if (!var3_Channel.MoveNext()) { state = 5; goto case 5; }
							var4_PassNumber = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PassNumber", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_Channel.Current))).GetEnumerator();
							goto case 6;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Channel); var3_Channel = null;
							goto case 2;
						case 6:
							state = 6;
							if (!var4_PassNumber.MoveNext()) { state = 7; goto case 7; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_PassNumber.Current));
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var4_PassNumber); var4_PassNumber = null;
							goto case 4;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_PassNumber); var4_PassNumber = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_Channel); var3_Channel = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_ChannelSet); var2_ChannelSet = null;
				}
			}
		}
		class seq12_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_TimeDepth;
			private readonly System.Collections.IEnumerable var2_ChannelSet;

			public seq12_if_exists(
				System.Collections.IEnumerable var1_TimeDepth,
				System.Collections.IEnumerable var2_ChannelSet
			)
			{
				this.var1_TimeDepth = var1_TimeDepth;
				this.var2_ChannelSet = var2_ChannelSet;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq12_if_exists closure;
				private IEnumerator var3_TimeDepth;
				public Enumerator(seq12_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_TimeDepth))) { state = 2; goto case 2;  }
							var3_TimeDepth = (closure.var1_TimeDepth).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = (string)Altova.Functions.Core.Last((new seq13_join(closure.var2_ChannelSet)));
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var3_TimeDepth.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_TimeDepth.Current));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_TimeDepth); var3_TimeDepth = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_TimeDepth); var3_TimeDepth = null;
				}
			}
		}
		class seq13_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_ChannelSet;

			public seq13_join(
				System.Collections.IEnumerable var1_ChannelSet
			)
			{
				this.var1_ChannelSet = var1_ChannelSet;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq13_join closure;
				private IEnumerator var2_ChannelSet;
				private IEnumerator var3_Index;
				public Enumerator(seq13_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_ChannelSet = (closure.var1_ChannelSet).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_ChannelSet.MoveNext()) { state = 3; goto case 3; }
							var3_Index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Index", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_ChannelSet.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_ChannelSet); var2_ChannelSet = null;
							return false;
						case 4:
							state = 4;
							if (!var3_Index.MoveNext()) { state = 5; goto case 5; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IndexType", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_Index.Current))));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_ChannelSet); var2_ChannelSet = null;
				}
			}
		}
		class seq14_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq14_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq14_map closure;
				private IEnumerator var2_type;
				public Enumerator(seq14_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_type = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("type", "http://www.w3.org/2001/XMLSchema-instance"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_type.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Equal(Altova.CoreTypes.NodeToQName((Altova.Mapforce.IMFNode)(var2_type.Current)), Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}DepthIndexValue"));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
				}
			}
		}
		class seq15_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_ChannelSet;

			public seq15_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_ChannelSet
			)
			{
				this.var1_cur = var1_cur;
				this.var2_ChannelSet = var2_ChannelSet;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq15_join closure;
				private IEnumerator var3_ChannelSet;
				private IEnumerator var4_Index;
				public Enumerator(seq15_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_ChannelSet = (closure.var2_ChannelSet).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var3_ChannelSet.MoveNext()) { state = 3; goto case 3; }
							var4_Index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Index", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_ChannelSet.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_ChannelSet); var3_ChannelSet = null;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Depth", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 4:
							state = 4;
							if (!var4_Index.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Uom", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Index.Current))))));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var4_Index); var4_Index = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_Index); var4_Index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_ChannelSet); var3_ChannelSet = null;
				}
			}
		}
		class seq16_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq16_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq16_map closure;
				private IEnumerator var2_type;
				public Enumerator(seq16_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_type = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("type", "http://www.w3.org/2001/XMLSchema-instance"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_type.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Equal(Altova.CoreTypes.NodeToQName((Altova.Mapforce.IMFNode)(var2_type.Current)), Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}TimeIndexValue"));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_type); var2_type = null;
				}
			}
		}
		class seq17_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_ChannelSet;

			public seq17_join(
				System.Collections.IEnumerable var1_ChannelSet
			)
			{
				this.var1_ChannelSet = var1_ChannelSet;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq17_join closure;
				private IEnumerator var2_ChannelSet;
				private IEnumerator var3_Index;
				public Enumerator(seq17_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_ChannelSet = (closure.var1_ChannelSet).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_ChannelSet.MoveNext()) { state = 3; goto case 3; }
							var3_Index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Index", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var2_ChannelSet.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_ChannelSet); var2_ChannelSet = null;
							return false;
						case 4:
							state = 4;
							if (!var3_Index.MoveNext()) { state = 5; goto case 5; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Direction", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var3_Index.Current))));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_ChannelSet); var2_ChannelSet = null;
				}
			}
		}
		class seq18_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_StartIndex;
			private readonly System.Collections.IEnumerable var3_EndIndex;
			private readonly System.Collections.IEnumerable var4_box;
			private readonly Altova.Mapforce.IMFNode var5_cur;

			public seq18_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_StartIndex,
				System.Collections.IEnumerable var3_EndIndex,
				System.Collections.IEnumerable var4_box,
				Altova.Mapforce.IMFNode var5_cur
			)
			{
				this.var1_cur = var1_cur;
				this.var2_StartIndex = var2_StartIndex;
				this.var3_EndIndex = var3_EndIndex;
				this.var4_box = var4_box;
				this.var5_cur = var5_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq18_join closure;
				private IEnumerator var6_Aliases;
				private IEnumerator var7_Index;
				private IEnumerator var8_DatumReference;
				private IEnumerator var9_filter;
				private IEnumerator var10_filter;
				private IEnumerator var11_filter;
				private IEnumerator var12_filter;
				private IEnumerator var13_Source;
				public Enumerator(seq18_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var6_Aliases = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), closure.var5_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var6_Aliases.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("authority", ""), (Altova.Mapforce.IMFNode)(var6_Aliases.Current))))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var6_Aliases); var6_Aliases = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mnemonic", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Mnemonic", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)))));
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("unit", "http://www.witsml.org/schemas/1series"), closure.var4_box);
							pos++;
							return true;
						case 6:
							state = 7;
							var7_Index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Index", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 9;
							if (!var7_Index.MoveNext()) { state = 8; goto case 8; }
							var8_DatumReference = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DatumReference", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var7_Index.Current))).GetEnumerator();
							goto case 9;
						case 8:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var7_Index); var7_Index = null;
							var9_filter = (closure.var2_StartIndex).GetEnumerator();
							goto case 12;
						case 9:
							state = 9;
							if (!var8_DatumReference.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wellDatum", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_DatumReference.Current))));
							pos++;
							return true;
						case 10:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var8_DatumReference); var8_DatumReference = null;
							goto case 7;
						case 12:
							state = 12;
							if (!var9_filter.MoveNext()) { state = 13; goto case 13; }
							if (!((bool)Altova.Functions.Core.First((new seq8_CoreAny((new seq14_map((Altova.Mapforce.IMFNode)(var9_filter.Current)))))))) { state = 12; goto case 12;  }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("minIndex", "http://www.witsml.org/schemas/1series"), (new seq19_seq_((Altova.Mapforce.IMFNode)(var9_filter.Current), closure.var4_box)));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var9_filter); var9_filter = null;
							var10_filter = (closure.var3_EndIndex).GetEnumerator();
							goto case 15;
						case 15:
							state = 15;
							if (!var10_filter.MoveNext()) { state = 16; goto case 16; }
							if (!((bool)Altova.Functions.Core.First((new seq8_CoreAny((new seq14_map((Altova.Mapforce.IMFNode)(var10_filter.Current)))))))) { state = 15; goto case 15;  }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("maxIndex", "http://www.witsml.org/schemas/1series"), (new seq19_seq_((Altova.Mapforce.IMFNode)(var10_filter.Current), closure.var4_box)));
							pos++;
							return true;
						case 16:
							state = 18;
							Altova.Mapforce.MFEnumerator.Dispose(var10_filter); var10_filter = null;
							var11_filter = (closure.var2_StartIndex).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var11_filter.MoveNext()) { state = 19; goto case 19; }
							if (!((bool)Altova.Functions.Core.First((new seq8_CoreAny((new seq16_map((Altova.Mapforce.IMFNode)(var11_filter.Current)))))))) { state = 18; goto case 18;  }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("minDateTimeIndex", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Time", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var11_filter.Current))))))));
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var11_filter); var11_filter = null;
							var12_filter = (closure.var3_EndIndex).GetEnumerator();
							goto case 21;
						case 21:
							state = 21;
							if (!var12_filter.MoveNext()) { state = 22; goto case 22; }
							if (!((bool)Altova.Functions.Core.First((new seq8_CoreAny((new seq16_map((Altova.Mapforce.IMFNode)(var12_filter.Current)))))))) { state = 21; goto case 21;  }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("maxDateTimeIndex", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Time", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var12_filter.Current))))))));
							pos++;
							return true;
						case 22:
							state = 24;
							Altova.Mapforce.MFEnumerator.Dispose(var12_filter); var12_filter = null;
							var13_Source = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Source", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)).GetEnumerator();
							goto case 24;
						case 24:
							state = 24;
							if (!var13_Source.MoveNext()) { state = 25; goto case 25; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dataSource", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_Source.Current))));
							pos++;
							return true;
						case 25:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var13_Source); var13_Source = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("typeLogData", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DataType", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var5_cur)))));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var6_Aliases); var6_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_DatumReference); var8_DatumReference = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_Index); var7_Index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_filter); var9_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_filter); var10_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_filter); var11_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_filter); var12_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_Source); var13_Source = null;
				}
			}
		}
		class seq19_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_box;

			public seq19_seq_(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_box
			)
			{
				this.var1_cur = var1_cur;
				this.var2_box = var2_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq19_seq_ closure;
				public Enumerator(seq19_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), closure.var2_box);
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Depth", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_cur)))));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq20_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly Altova.Mapforce.IMFNode var2_Citation;
			private readonly System.Collections.IEnumerable var3_ChannelSet;

			public seq20_join(
				Altova.Mapforce.IMFNode var1_cur,
				Altova.Mapforce.IMFNode var2_Citation,
				System.Collections.IEnumerable var3_ChannelSet
			)
			{
				this.var1_cur = var1_cur;
				this.var2_Citation = var2_Citation;
				this.var3_ChannelSet = var3_ChannelSet;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq20_join closure;
				private IEnumerator var4_distinct_values;
				private IEnumerator var5_LastUpdate;
				private IEnumerator var6_ExtensionNameValue;
				public Enumerator(seq20_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var4_distinct_values = (Altova.Functions.Core.DistinctValues(Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString((Altova.Types.DateTime)Altova.Functions.Core.Last((new seq21_map(closure.var3_ChannelSet))))))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var4_distinct_values.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimCreation", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime((string)(var4_distinct_values.Current)))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var4_distinct_values); var4_distinct_values = null;
							var5_LastUpdate = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), closure.var2_Citation)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var5_LastUpdate.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimLastChange", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_LastUpdate.Current))))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var5_LastUpdate); var5_LastUpdate = null;
							var6_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var6_ExtensionNameValue.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (new seq22_join((Altova.Mapforce.IMFNode)(var6_ExtensionNameValue.Current))));
							pos++;
							return true;
						case 9:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var6_ExtensionNameValue); var6_ExtensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_distinct_values); var4_distinct_values = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_LastUpdate); var5_LastUpdate = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_ExtensionNameValue); var6_ExtensionNameValue = null;
				}
			}
		}
		class seq21_map : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_ChannelSet;

			public seq21_map(
				System.Collections.IEnumerable var1_ChannelSet
			)
			{
				this.var1_ChannelSet = var1_ChannelSet;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq21_map closure;
				private IEnumerator var2_ChannelSet;
				public Enumerator(seq21_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_ChannelSet = (closure.var1_ChannelSet).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_ChannelSet.MoveNext()) { state = 3; goto case 3; }
							current = Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Creation", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var2_ChannelSet.Current)))))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_ChannelSet); var2_ChannelSet = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_ChannelSet); var2_ChannelSet = null;
				}
			}
		}
		class seq22_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq22_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq22_join closure;
				private IEnumerator var2_DTim;
				private IEnumerator var3_Index;
				private IEnumerator var4_MeasureClass;
				private IEnumerator var5_Description;
				public Enumerator(seq22_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Value", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_DTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTim", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var2_DTim.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_DTim.Current))))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_DTim); var2_DTim = null;
							var3_Index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Index", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var3_Index.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_Index.Current))))))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
							var4_MeasureClass = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_MeasureClass.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_MeasureClass.Current))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_MeasureClass); var4_MeasureClass = null;
							var5_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_Description.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_Description.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_DTim); var2_DTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_MeasureClass); var4_MeasureClass = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_Log_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_Log_Instance
			)
			{
				this.var1_Log_Instance = var1_Log_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_Log;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Log = ((new main(closure.var1_Log_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_Log.MoveNext()) { state = 3; goto case 3; }
							current = var2_Log.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Log); var2_Log = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Log); var2_Log = null;
				}
			}
		}

	}
}
