////////////////////////////////////////////////////////////////////////
//
// Map20To14MapToobj_wbGeometry.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map20To14
{

	public class Map20To14MapToobj_wbGeometry : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_WellboreGeometry2Instance;
		// members
		#endregion //Members


		public void Run(String WellboreGeometry2SourceFilename, string obj_wbGeometry2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input WellboreGeometry2Source = new Altova.IO.FileInput(WellboreGeometry2SourceFilename))
			// open target stream
			using (Altova.IO.Output obj_wbGeometry2Target = new Altova.IO.FileOutput(obj_wbGeometry2TargetFilename))
			{
				// run
				Run(WellboreGeometry2Source, obj_wbGeometry2Target);
			}
		}

		public void Run(Altova.IO.Input WellboreGeometry2Source, Altova.IO.Output obj_wbGeometry2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + WellboreGeometry2Source.Filename + "...\n");
			XmlDocument WellboreGeometry2DocSourceObject = XmlTreeOperations.LoadDocument(WellboreGeometry2Source);


			m_WellboreGeometry2Instance = WellboreGeometry2DocSourceObject;
			if (runDoesCloseAll)
				WellboreGeometry2Source.Close();
				// Create the target
				XmlDocument obj_wbGeometry2Doc = (obj_wbGeometry2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? obj_wbGeometry2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_WellboreGeometry2Instance, WellboreGeometry2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, obj_wbGeometry2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				obj_wbGeometry2Doc,
				obj_wbGeometry2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					WellboreGeometry2Source.Close();
					obj_wbGeometry2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_WellboreGeometry_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_WellboreGeometry_Instance
			)
			{
				this.var1_WellboreGeometry_Instance = var1_WellboreGeometry_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_WellboreGeometry;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_WellboreGeometry = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("WellboreGeometry", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_WellboreGeometry_Instance));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wbGeometrys", "http://www.witsml.org/schemas/1series"), (new seq1_join(var2_WellboreGeometry)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_WellboreGeometry;

			public seq1_join(
				System.Collections.IEnumerable var1_WellboreGeometry
			)
			{
				this.var1_WellboreGeometry = var1_WellboreGeometry;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_WellboreGeometry;
				private IEnumerator var3_Aliases;
				private IEnumerator var4_WellboreGeometry;
				private Altova.Mapforce.IMFNode var5_Citation;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("abs", "http://www.energistics.org/schemas/abstract");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.witsml.org/schemas/1series http://w3.energistics.org/schema/WITSML_v1.4.1.1_Data_Schema/witsml_v1.4.1.1_data/xsd_schemas/obj_wbGeometry.xsd"));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_WellboreGeometry = (closure.var1_WellboreGeometry).GetEnumerator();
							goto case 4;
						case 4:
							state = 6;
							if (!var2_WellboreGeometry.MoveNext()) { state = 5; goto case 5; }
							var3_Aliases = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var2_WellboreGeometry.Current))).GetEnumerator();
							goto case 6;
						case 5:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeometry); var2_WellboreGeometry = null;
							var4_WellboreGeometry = (closure.var1_WellboreGeometry).GetEnumerator();
							goto case 9;
						case 6:
							state = 6;
							if (!var3_Aliases.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("version", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("authority", ""), (Altova.Mapforce.IMFNode)(var3_Aliases.Current))))));
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Aliases); var3_Aliases = null;
							goto case 4;
						case 9:
							state = 9;
							if (!var4_WellboreGeometry.MoveNext()) { state = 10; goto case 10; }
							var5_Citation = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var4_WellboreGeometry.Current))));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wbGeometry", "http://www.witsml.org/schemas/1series"), (new seq2_join(var5_Citation, (Altova.Mapforce.IMFNode)(var4_WellboreGeometry.Current))));
							pos++;
							return true;
						case 10:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_WellboreGeometry); var4_WellboreGeometry = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Aliases); var3_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeometry); var2_WellboreGeometry = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_WellboreGeometry); var4_WellboreGeometry = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_Citation;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq2_join(
				Altova.Mapforce.IMFNode var1_Citation,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_Citation = var1_Citation;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var3_LastUpdate;
				private IEnumerator var4_MdBase;
				private IEnumerator var5_GapAir;
				private IEnumerator var6_DepthWaterMean;
				private IEnumerator var7_WellboreGeometrySect;
				private System.Collections.IEnumerable var8_SectionTvdInterval;
				private System.Collections.IEnumerable var9_SectionMdInterval;
				private IEnumerator var10_CustomData;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("nameWellbore", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)))))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_Citation)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var3_LastUpdate = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_Citation)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var3_LastUpdate.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTimReport", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_LastUpdate.Current))))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var3_LastUpdate); var3_LastUpdate = null;
							var4_MdBase = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdBase", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var4_MdBase.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdBottom", "http://www.witsml.org/schemas/1series"), (new seq3_seq_((Altova.Mapforce.IMFNode)(var4_MdBase.Current))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var4_MdBase); var4_MdBase = null;
							var5_GapAir = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("GapAir", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var5_GapAir.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("gapAir", "http://www.witsml.org/schemas/1series"), tbf.tbf1_lengthMeasure.Eval((Altova.Mapforce.IMFNode)(var5_GapAir.Current)));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var5_GapAir); var5_GapAir = null;
							var6_DepthWaterMean = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DepthWaterMean", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var6_DepthWaterMean.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("depthWaterMean", "http://www.witsml.org/schemas/1series"), tbf.tbf1_lengthMeasure.Eval((Altova.Mapforce.IMFNode)(var6_DepthWaterMean.Current)));
							pos++;
							return true;
						case 14:
							state = 16;
							Altova.Mapforce.MFEnumerator.Dispose(var6_DepthWaterMean); var6_DepthWaterMean = null;
							var7_WellboreGeometrySect = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("WellboreGeometrySection", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_cur)).GetEnumerator();
							goto case 16;
						case 16:
							state = 16;
							if (!var7_WellboreGeometrySect.MoveNext()) { state = 17; goto case 17; }
							var8_SectionTvdInterval = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SectionTvdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var7_WellboreGeometrySect.Current)));
							var9_SectionMdInterval = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SectionMdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var7_WellboreGeometrySect.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wbGeometrySection", "http://www.witsml.org/schemas/1series"), (new seq4_join(var8_SectionTvdInterval, var9_SectionMdInterval, (Altova.Mapforce.IMFNode)(var7_WellboreGeometrySect.Current))));
							pos++;
							return true;
						case 17:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var7_WellboreGeometrySect); var7_WellboreGeometrySect = null;
							var10_CustomData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CustomData", "http://www.energistics.org/energyml/data/commonv2"), closure.var2_cur)).GetEnumerator();
							goto case 19;
						case 19:
							state = 19;
							if (!var10_CustomData.MoveNext()) { state = 20; goto case 20; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), tbf.tbf4_cs_customData.Eval((Altova.Mapforce.IMFNode)(var10_CustomData.Current)));
							pos++;
							return true;
						case 20:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var10_CustomData); var10_CustomData = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_LastUpdate); var3_LastUpdate = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_MdBase); var4_MdBase = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_GapAir); var5_GapAir = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_DepthWaterMean); var6_DepthWaterMean = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_WellboreGeometrySect); var7_WellboreGeometrySect = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_CustomData); var10_CustomData = null;
				}
			}
		}
		class seq3_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq3_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_seq_ closure;
				public Enumerator(seq3_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq4_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_SectionTvdInterval;
			private readonly System.Collections.IEnumerable var2_SectionMdInterval;
			private readonly Altova.Mapforce.IMFNode var3_cur;

			public seq4_join(
				System.Collections.IEnumerable var1_SectionTvdInterval,
				System.Collections.IEnumerable var2_SectionMdInterval,
				Altova.Mapforce.IMFNode var3_cur
			)
			{
				this.var1_SectionTvdInterval = var1_SectionTvdInterval;
				this.var2_SectionMdInterval = var2_SectionMdInterval;
				this.var3_cur = var3_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_join closure;
				private IEnumerator var4_TypeHoleCasing;
				private IEnumerator var5_SectionMdInterval;
				private IEnumerator var6_SectionMdInterval;
				private IEnumerator var7_SectionTvdInterval;
				private IEnumerator var8_SectionTvdInterval;
				private IEnumerator var9_IdSection;
				private IEnumerator var10_OdSection;
				private IEnumerator var11_WtPerLen;
				private IEnumerator var12_Grade;
				private IEnumerator var13_CurveConductor;
				private IEnumerator var14_DiaDrift;
				private IEnumerator var15_FactFric;
				private IEnumerator var16_ExtensionNameValue;
				public Enumerator(seq4_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var3_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							var4_TypeHoleCasing = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TypeHoleCasing", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var3_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var4_TypeHoleCasing.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("typeHoleCasing", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_TypeHoleCasing.Current))));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var4_TypeHoleCasing); var4_TypeHoleCasing = null;
							var5_SectionMdInterval = (closure.var2_SectionMdInterval).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var5_SectionMdInterval.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdTop", "http://www.witsml.org/schemas/1series"), (new seq5_join((Altova.Mapforce.IMFNode)(var5_SectionMdInterval.Current))));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var5_SectionMdInterval); var5_SectionMdInterval = null;
							var6_SectionMdInterval = (closure.var2_SectionMdInterval).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var6_SectionMdInterval.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("mdBottom", "http://www.witsml.org/schemas/1series"), (new seq6_join((Altova.Mapforce.IMFNode)(var6_SectionMdInterval.Current))));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var6_SectionMdInterval); var6_SectionMdInterval = null;
							var7_SectionTvdInterval = (closure.var1_SectionTvdInterval).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var7_SectionTvdInterval.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("tvdTop", "http://www.witsml.org/schemas/1series"), (new seq7_join((Altova.Mapforce.IMFNode)(var7_SectionTvdInterval.Current))));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var7_SectionTvdInterval); var7_SectionTvdInterval = null;
							var8_SectionTvdInterval = (closure.var1_SectionTvdInterval).GetEnumerator();
							goto case 15;
						case 15:
							state = 15;
							if (!var8_SectionTvdInterval.MoveNext()) { state = 16; goto case 16; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("tvdBottom", "http://www.witsml.org/schemas/1series"), (new seq8_join((Altova.Mapforce.IMFNode)(var8_SectionTvdInterval.Current))));
							pos++;
							return true;
						case 16:
							state = 18;
							Altova.Mapforce.MFEnumerator.Dispose(var8_SectionTvdInterval); var8_SectionTvdInterval = null;
							var9_IdSection = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IdSection", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var3_cur)).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var9_IdSection.MoveNext()) { state = 19; goto case 19; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("idSection", "http://www.witsml.org/schemas/1series"), tbf.tbf1_lengthMeasure.Eval((Altova.Mapforce.IMFNode)(var9_IdSection.Current)));
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var9_IdSection); var9_IdSection = null;
							var10_OdSection = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("OdSection", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var3_cur)).GetEnumerator();
							goto case 21;
						case 21:
							state = 21;
							if (!var10_OdSection.MoveNext()) { state = 22; goto case 22; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("odSection", "http://www.witsml.org/schemas/1series"), tbf.tbf1_lengthMeasure.Eval((Altova.Mapforce.IMFNode)(var10_OdSection.Current)));
							pos++;
							return true;
						case 22:
							state = 24;
							Altova.Mapforce.MFEnumerator.Dispose(var10_OdSection); var10_OdSection = null;
							var11_WtPerLen = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("WtPerLen", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var3_cur)).GetEnumerator();
							goto case 24;
						case 24:
							state = 24;
							if (!var11_WtPerLen.MoveNext()) { state = 25; goto case 25; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("wtPerLen", "http://www.witsml.org/schemas/1series"), tbf.tbf2_massPerLengthMeasure.Eval((Altova.Mapforce.IMFNode)(var11_WtPerLen.Current)));
							pos++;
							return true;
						case 25:
							state = 27;
							Altova.Mapforce.MFEnumerator.Dispose(var11_WtPerLen); var11_WtPerLen = null;
							var12_Grade = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Grade", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var3_cur)).GetEnumerator();
							goto case 27;
						case 27:
							state = 27;
							if (!var12_Grade.MoveNext()) { state = 28; goto case 28; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("grade", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var12_Grade.Current))));
							pos++;
							return true;
						case 28:
							state = 30;
							Altova.Mapforce.MFEnumerator.Dispose(var12_Grade); var12_Grade = null;
							var13_CurveConductor = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CurveConductor", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var3_cur)).GetEnumerator();
							goto case 30;
						case 30:
							state = 30;
							if (!var13_CurveConductor.MoveNext()) { state = 31; goto case 31; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("curveConductor", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_CurveConductor.Current))))));
							pos++;
							return true;
						case 31:
							state = 33;
							Altova.Mapforce.MFEnumerator.Dispose(var13_CurveConductor); var13_CurveConductor = null;
							var14_DiaDrift = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DiaDrift", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var3_cur)).GetEnumerator();
							goto case 33;
						case 33:
							state = 33;
							if (!var14_DiaDrift.MoveNext()) { state = 34; goto case 34; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("diaDrift", "http://www.witsml.org/schemas/1series"), tbf.tbf1_lengthMeasure.Eval((Altova.Mapforce.IMFNode)(var14_DiaDrift.Current)));
							pos++;
							return true;
						case 34:
							state = 36;
							Altova.Mapforce.MFEnumerator.Dispose(var14_DiaDrift); var14_DiaDrift = null;
							var15_FactFric = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("FactFric", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var3_cur)).GetEnumerator();
							goto case 36;
						case 36:
							state = 36;
							if (!var15_FactFric.MoveNext()) { state = 37; goto case 37; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("factFric", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var15_FactFric.Current))))));
							pos++;
							return true;
						case 37:
							state = 39;
							Altova.Mapforce.MFEnumerator.Dispose(var15_FactFric); var15_FactFric = null;
							var16_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var3_cur)).GetEnumerator();
							goto case 39;
						case 39:
							state = 39;
							if (!var16_ExtensionNameValue.MoveNext()) { state = 40; goto case 40; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (new seq9_join((Altova.Mapforce.IMFNode)(var16_ExtensionNameValue.Current))));
							pos++;
							return true;
						case 40:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var16_ExtensionNameValue); var16_ExtensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_TypeHoleCasing); var4_TypeHoleCasing = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_SectionMdInterval); var5_SectionMdInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_SectionMdInterval); var6_SectionMdInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_SectionTvdInterval); var7_SectionTvdInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_SectionTvdInterval); var8_SectionTvdInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_IdSection); var9_IdSection = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_OdSection); var10_OdSection = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_WtPerLen); var11_WtPerLen = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_Grade); var12_Grade = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_CurveConductor); var13_CurveConductor = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_DiaDrift); var14_DiaDrift = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_FactFric); var15_FactFric = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_ExtensionNameValue); var16_ExtensionNameValue = null;
				}
			}
		}
		class seq5_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq5_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_join closure;
				private Altova.Mapforce.IMFNode var2_MdTop;
				public Enumerator(seq5_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_MdTop = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdTop", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_MdTop)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_MdTop)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq6_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq6_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_join closure;
				private Altova.Mapforce.IMFNode var2_MdBase;
				public Enumerator(seq6_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_MdBase = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MdBase", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_MdBase)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_MdBase)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq7_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq7_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_join closure;
				private Altova.Mapforce.IMFNode var2_TvdTop;
				public Enumerator(seq7_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_TvdTop = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TvdTop", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_TvdTop)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_TvdTop)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq8_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq8_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq8_join closure;
				private Altova.Mapforce.IMFNode var2_TvdBase;
				public Enumerator(seq8_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_TvdBase = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TvdBase", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_TvdBase)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_TvdBase)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq9_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq9_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq9_join closure;
				private IEnumerator var2_DTim;
				private IEnumerator var3_Index;
				private IEnumerator var4_MeasureClass;
				private IEnumerator var5_Description;
				public Enumerator(seq9_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), tbf.tbf3_extensionvalue.Eval((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Value", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur))));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_DTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTim", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var2_DTim.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_DTim.Current))))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_DTim); var2_DTim = null;
							var3_Index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Index", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var3_Index.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_Index.Current))))))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
							var4_MeasureClass = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_MeasureClass.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_MeasureClass.Current))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_MeasureClass); var4_MeasureClass = null;
							var5_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_Description.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_Description.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_DTim); var2_DTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_Index); var3_Index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_MeasureClass); var4_MeasureClass = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_WellboreGeometry_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_WellboreGeometry_Instance
			)
			{
				this.var1_WellboreGeometry_Instance = var1_WellboreGeometry_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_WellboreGeometry;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_WellboreGeometry = ((new main(closure.var1_WellboreGeometry_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_WellboreGeometry.MoveNext()) { state = 3; goto case 3; }
							current = var2_WellboreGeometry.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeometry); var2_WellboreGeometry = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_WellboreGeometry); var2_WellboreGeometry = null;
				}
			}
		}

	}
}
