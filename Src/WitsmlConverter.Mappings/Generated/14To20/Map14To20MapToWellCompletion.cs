////////////////////////////////////////////////////////////////////////
//
// Map14To20MapToWellCompletion.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map14To20
{

	public class Map14To20MapToWellCompletion : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_obj_wellCompletion2Instance;
		// members
		#endregion //Members


		public void Run(String obj_wellCompletion2SourceFilename, string WellCompletion2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input obj_wellCompletion2Source = new Altova.IO.FileInput(obj_wellCompletion2SourceFilename))
			// open target stream
			using (Altova.IO.Output WellCompletion2Target = new Altova.IO.FileOutput(WellCompletion2TargetFilename))
			{
				// run
				Run(obj_wellCompletion2Source, WellCompletion2Target);
			}
		}

		public void Run(Altova.IO.Input obj_wellCompletion2Source, Altova.IO.Output WellCompletion2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + obj_wellCompletion2Source.Filename + "...\n");
			XmlDocument obj_wellCompletion2DocSourceObject = XmlTreeOperations.LoadDocument(obj_wellCompletion2Source);


			m_obj_wellCompletion2Instance = obj_wellCompletion2DocSourceObject;
			if (runDoesCloseAll)
				obj_wellCompletion2Source.Close();
				// Create the target
				XmlDocument WellCompletion2Doc = (WellCompletion2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? WellCompletion2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_obj_wellCompletion2Instance, obj_wellCompletion2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, WellCompletion2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				WellCompletion2Doc,
				WellCompletion2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					obj_wellCompletion2Source.Close();
					WellCompletion2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_wellCompletion_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_obj_wellCompletion_Instance
			)
			{
				this.var1_obj_wellCompletion_Instance = var1_obj_wellCompletion_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_wellCompletions;
				private System.Collections.IEnumerable var3_first_items;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_wellCompletions = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wellCompletions", "http://www.witsml.org/schemas/1series"), closure.var1_obj_wellCompletion_Instance));
							var3_first_items = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FirstItems((new seq1_join(var2_wellCompletions)), 1m));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("WellCompletion", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq2_join(var2_wellCompletions, var3_first_items)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellCompletions;

			public seq1_join(
				System.Collections.IEnumerable var1_wellCompletions
			)
			{
				this.var1_wellCompletions = var1_wellCompletions;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_wellCompletions;
				private IEnumerator var3_wellCompletion;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_wellCompletions = (closure.var1_wellCompletions).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_wellCompletions.MoveNext()) { state = 3; goto case 3; }
							var3_wellCompletion = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wellCompletion", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_wellCompletions.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_wellCompletions); var2_wellCompletions = null;
							return false;
						case 4:
							state = 4;
							if (!var3_wellCompletion.MoveNext()) { state = 5; goto case 5; }
							current = var3_wellCompletion.Current;
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_wellCompletion); var3_wellCompletion = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_wellCompletion); var3_wellCompletion = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_wellCompletions); var2_wellCompletions = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellCompletions;
			private readonly System.Collections.IEnumerable var2_first_items;

			public seq2_join(
				System.Collections.IEnumerable var1_wellCompletions,
				System.Collections.IEnumerable var2_first_items
			)
			{
				this.var1_wellCompletions = var1_wellCompletions;
				this.var2_first_items = var2_first_items;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var3_first_items;
				private IEnumerator var4_first_items;
				private System.Collections.IEnumerable var5_commonData;
				private System.Collections.IEnumerable var6_uidWell;
				private string var7_cast;
				private IEnumerator var8_customData;
				private IEnumerator var9_commonData;
				private IEnumerator var10_extensionNameValue;
				private IEnumerator var11_fieldID;
				private IEnumerator var12_fieldCode;
				private IEnumerator var13_fieldType;
				private IEnumerator var14_effectiveDate;
				private IEnumerator var15_expiredDate;
				private IEnumerator var16_E_P_RightsID;
				private IEnumerator var17_currentStatus;
				private string var18_cast;
				private IEnumerator var19_statusDate;
				private IEnumerator var20_statusHistory;
				private System.Collections.IEnumerable var21_mdBottom;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("eml", "http://www.energistics.org/energyml/data/commonv2");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateNamespace("gco", "http://www.isotc211.org/2005/gco");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateNamespace("gmd", "http://www.isotc211.org/2005/gmd");
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateNamespace("gsr", "http://www.isotc211.org/2005/gsr");
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateNamespace("gts", "http://www.isotc211.org/2005/gts");
							pos++;
							return true;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateNamespace("gml", "http://www.opengis.net/gml/3.2");
							pos++;
							return true;
						case 7:
							state = 8;
							current = Altova.Functions.Core.CreateNamespace("xlink", "http://www.w3.org/1999/xlink");
							pos++;
							return true;
						case 8:
							state = 9;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.energistics.org/energyml/data/witsmlv2 file:///D:/Repos/witsmlvalidation/witsml/energyml/2.0/data/witsml/v2.0/xsd_schemas/WellCompletion.xsd"));
							pos++;
							return true;
						case 9:
							state = 10;
							var3_first_items = (closure.var2_first_items).GetEnumerator();
							goto case 10;
						case 10:
							state = 12;
							if (!var3_first_items.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("schemaVersion", ""), Altova.Functions.Core.Box("2.0"));
							pos++;
							return true;
						case 11:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
							var4_first_items = (closure.var2_first_items).GetEnumerator();
							goto case 14;
						case 12:
							state = 10;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uuid", ""), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 14:
							state = 16;
							if (!var4_first_items.MoveNext()) { state = 15; goto case 15; }
							var5_commonData = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("commonData", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current)));
							var6_uidWell = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uidWell", ""), (Altova.Mapforce.IMFNode)(var4_first_items.Current)));
							var7_cast = (Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nameWell", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current)))));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Aliases", "http://www.energistics.org/energyml/data/commonv2"), (new seq3_join((Altova.Mapforce.IMFNode)(var4_first_items.Current), closure.var1_wellCompletions, var6_uidWell, var7_cast)));
							pos++;
							return true;
						case 15:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
							return false;
						case 16:
							state = 17;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), (new seq4_join(var5_commonData, (Altova.Mapforce.IMFNode)(var4_first_items.Current))));
							pos++;
							return true;
						case 17:
							state = 18;
							var8_customData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var8_customData.MoveNext()) { state = 19; goto case 19; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:CustomData", "http://www.energistics.org/energyml/data/commonv2"), tbf.tbf1_CustomData.Eval((Altova.Mapforce.IMFNode)(var8_customData.Current)));
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var8_customData); var8_customData = null;
							var9_commonData = (var5_commonData).GetEnumerator();
							goto case 21;
						case 21:
							state = 23;
							if (!var9_commonData.MoveNext()) { state = 22; goto case 22; }
							var10_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var9_commonData.Current))).GetEnumerator();
							goto case 23;
						case 22:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var9_commonData); var9_commonData = null;
							var11_fieldID = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("fieldID", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 26;
						case 23:
							state = 23;
							if (!var10_extensionNameValue.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ExtensionNameValue", "http://www.energistics.org/energyml/data/commonv2"), (new seq5_join((Altova.Mapforce.IMFNode)(var10_extensionNameValue.Current))));
							pos++;
							return true;
						case 24:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var10_extensionNameValue); var10_extensionNameValue = null;
							goto case 21;
						case 26:
							state = 26;
							if (!var11_fieldID.MoveNext()) { state = 27; goto case 27; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FieldID", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var11_fieldID.Current))));
							pos++;
							return true;
						case 27:
							state = 29;
							Altova.Mapforce.MFEnumerator.Dispose(var11_fieldID); var11_fieldID = null;
							var12_fieldCode = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("fieldCode", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 29;
						case 29:
							state = 29;
							if (!var12_fieldCode.MoveNext()) { state = 30; goto case 30; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FieldCode", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var12_fieldCode.Current))));
							pos++;
							return true;
						case 30:
							state = 32;
							Altova.Mapforce.MFEnumerator.Dispose(var12_fieldCode); var12_fieldCode = null;
							var13_fieldType = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("fieldType", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 32;
						case 32:
							state = 32;
							if (!var13_fieldType.MoveNext()) { state = 33; goto case 33; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FieldType", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_fieldType.Current))));
							pos++;
							return true;
						case 33:
							state = 35;
							Altova.Mapforce.MFEnumerator.Dispose(var13_fieldType); var13_fieldType = null;
							var14_effectiveDate = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("effectiveDate", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 35;
						case 35:
							state = 35;
							if (!var14_effectiveDate.MoveNext()) { state = 36; goto case 36; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EffectiveDate", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var14_effectiveDate.Current))))));
							pos++;
							return true;
						case 36:
							state = 38;
							Altova.Mapforce.MFEnumerator.Dispose(var14_effectiveDate); var14_effectiveDate = null;
							var15_expiredDate = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("expiredDate", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 38;
						case 38:
							state = 38;
							if (!var15_expiredDate.MoveNext()) { state = 39; goto case 39; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExpiredDate", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var15_expiredDate.Current))))));
							pos++;
							return true;
						case 39:
							state = 41;
							Altova.Mapforce.MFEnumerator.Dispose(var15_expiredDate); var15_expiredDate = null;
							var16_E_P_RightsID = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("E_P_RightsID", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 41;
						case 41:
							state = 41;
							if (!var16_E_P_RightsID.MoveNext()) { state = 42; goto case 42; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("E_P_RightsID", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var16_E_P_RightsID.Current))));
							pos++;
							return true;
						case 42:
							state = 44;
							Altova.Mapforce.MFEnumerator.Dispose(var16_E_P_RightsID); var16_E_P_RightsID = null;
							var17_currentStatus = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("currentStatus", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 44;
						case 44:
							state = 44;
							if (!var17_currentStatus.MoveNext()) { state = 45; goto case 45; }
							var18_cast = (Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var17_currentStatus.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CurrentStatus", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.Functions.Lang.Lowercase((string)Altova.Functions.Core.First((new seq6_if_equal(var18_cast))))));
							pos++;
							return true;
						case 45:
							state = 47;
							Altova.Mapforce.MFEnumerator.Dispose(var17_currentStatus); var17_currentStatus = null;
							var19_statusDate = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("statusDate", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 47;
						case 47:
							state = 47;
							if (!var19_statusDate.MoveNext()) { state = 48; goto case 48; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("StatusDate", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var19_statusDate.Current))))));
							pos++;
							return true;
						case 48:
							state = 50;
							Altova.Mapforce.MFEnumerator.Dispose(var19_statusDate); var19_statusDate = null;
							var20_statusHistory = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("statusHistory", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 50;
						case 50:
							state = 50;
							if (!var20_statusHistory.MoveNext()) { state = 51; goto case 51; }
							var21_mdBottom = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdBottom", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var20_statusHistory.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("StatusHistory", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq7_join((Altova.Mapforce.IMFNode)(var20_statusHistory.Current), var21_mdBottom)));
							pos++;
							return true;
						case 51:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var20_statusHistory); var20_statusHistory = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Well", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq11_join(var6_uidWell, var7_cast)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_customData); var8_customData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_extensionNameValue); var10_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_commonData); var9_commonData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_fieldID); var11_fieldID = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_fieldCode); var12_fieldCode = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_fieldType); var13_fieldType = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_effectiveDate); var14_effectiveDate = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_expiredDate); var15_expiredDate = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_E_P_RightsID); var16_E_P_RightsID = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_currentStatus); var17_currentStatus = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_statusDate); var19_statusDate = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_statusHistory); var20_statusHistory = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
				}
			}
		}
		class seq3_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_wellCompletions;
			private readonly System.Collections.IEnumerable var3_uidWell;
			private readonly string var4_cast;

			public seq3_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_wellCompletions,
				System.Collections.IEnumerable var3_uidWell,
				string var4_cast
			)
			{
				this.var1_cur = var1_cur;
				this.var2_wellCompletions = var2_wellCompletions;
				this.var3_uidWell = var3_uidWell;
				this.var4_cast = var4_cast;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_join closure;
				private IEnumerator var5_wellCompletions;
				private IEnumerator var6_uidWell;
				private IEnumerator var7_uid;
				public Enumerator(seq3_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var5_wellCompletions = (closure.var2_wellCompletions).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var5_wellCompletions.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("authority", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("version", ""), (Altova.Mapforce.IMFNode)(var5_wellCompletions.Current))))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var5_wellCompletions); var5_wellCompletions = null;
							var6_uidWell = (closure.var3_uidWell).GetEnumerator();
							goto case 5;
						case 5:
							state = 7;
							if (!var6_uidWell.MoveNext()) { state = 6; goto case 6; }
							var7_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var6_uidWell); var6_uidWell = null;
							return false;
						case 7:
							state = 7;
							if (!var7_uid.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Identifier", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_uidWell.Current)), Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_uid.Current))), closure.var4_cast)));
							pos++;
							return true;
						case 8:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var7_uid); var7_uid = null;
							goto case 5;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_wellCompletions); var5_wellCompletions = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_uid); var7_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_uidWell); var6_uidWell = null;
				}
			}
		}
		class seq4_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_commonData;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq4_join(
				System.Collections.IEnumerable var1_commonData,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_commonData = var1_commonData;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_join closure;
				private IEnumerator var3_commonData;
				private IEnumerator var4_dTimLastChange;
				public Enumerator(seq4_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var2_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Originator", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("1411_input"));
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Format", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Mapforce"));
							pos++;
							return true;
						case 4:
							state = 5;
							var3_commonData = (closure.var1_commonData).GetEnumerator();
							goto case 5;
						case 5:
							state = 7;
							if (!var3_commonData.MoveNext()) { state = 6; goto case 6; }
							var4_dTimLastChange = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTimLastChange", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_commonData.Current))).GetEnumerator();
							goto case 7;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_commonData); var3_commonData = null;
							return false;
						case 7:
							state = 7;
							if (!var4_dTimLastChange.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_dTimLastChange.Current))))));
							pos++;
							return true;
						case 8:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var4_dTimLastChange); var4_dTimLastChange = null;
							goto case 5;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_dTimLastChange); var4_dTimLastChange = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_commonData); var3_commonData = null;
				}
			}
		}
		class seq5_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq5_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_join closure;
				private IEnumerator var2_dTim;
				private IEnumerator var3_index;
				private IEnumerator var4_description;
				public Enumerator(seq5_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Name", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Value", "http://www.energistics.org/energyml/data/commonv2"), tbf.tbf2_StringMeasure.Eval((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), closure.var1_cur))));
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("length"));
							pos++;
							return true;
						case 4:
							state = 5;
							var2_dTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var2_dTim.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:DTim", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_dTim.Current))))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var2_dTim); var2_dTim = null;
							var3_index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var3_index.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Index", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_index.Current))))))))));
							pos++;
							return true;
						case 9:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var3_index); var3_index = null;
							var4_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var4_description.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_description.Current))));
							pos++;
							return true;
						case 12:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_description); var4_description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_dTim); var2_dTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_index); var3_index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_description); var4_description = null;
				}
			}
		}
		class seq6_if_equal : IEnumerable
		{
			private readonly string var1_cast;

			public seq6_if_equal(
				string var1_cast
			)
			{
				this.var1_cast = var1_cast;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_if_equal closure;
				public Enumerator(seq6_if_equal closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							if (!((closure.var1_cast) == ("Temporary Abandoned"))) { state = 2; goto case 2;  }
							current = "Temporarily Abandoned";
							pos++;
							return true;
						case 2:
							state = 0;
							current = closure.var1_cast;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq7_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_mdBottom;

			public seq7_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_mdBottom
			)
			{
				this.var1_cur = var1_cur;
				this.var2_mdBottom = var2_mdBottom;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_join closure;
				private IEnumerator var3_uid;
				private IEnumerator var4_status;
				private string var5_cast;
				private IEnumerator var6_startDate;
				private IEnumerator var7_endDate;
				private IEnumerator var8_comment;
				public Enumerator(seq7_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_uid); var3_uid = null;
							var4_status = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("status", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var4_status.MoveNext()) { state = 6; goto case 6; }
							var5_cast = (Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_status.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Status", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.Functions.Lang.Lowercase((string)Altova.Functions.Core.First((new seq6_if_equal(var5_cast))))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var4_status); var4_status = null;
							var6_startDate = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("startDate", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var6_startDate.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("StartDate", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_startDate.Current))))));
							pos++;
							return true;
						case 9:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var6_startDate); var6_startDate = null;
							var7_endDate = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("endDate", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var7_endDate.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EndDate", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_endDate.Current))))));
							pos++;
							return true;
						case 12:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var7_endDate); var7_endDate = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("PerforationMdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq8_join(closure.var1_cur, closure.var2_mdBottom)));
							pos++;
							return true;
						case 14:
							state = 15;
							var8_comment = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("comment", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 15;
						case 15:
							state = 15;
							if (!var8_comment.MoveNext()) { state = 16; goto case 16; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Comment", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_comment.Current))));
							pos++;
							return true;
						case 16:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var8_comment); var8_comment = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_uid); var3_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_status); var4_status = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_startDate); var6_startDate = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_endDate); var7_endDate = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_comment); var8_comment = null;
				}
			}
		}
		class seq8_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_mdBottom;

			public seq8_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_mdBottom
			)
			{
				this.var1_cur = var1_cur;
				this.var2_mdBottom = var2_mdBottom;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq8_join closure;
				private IEnumerator var3_mdBottom;
				private IEnumerator var4_datum;
				private IEnumerator var5_mdTop;
				private IEnumerator var6_mdBottom;
				public Enumerator(seq8_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_mdBottom = (closure.var2_mdBottom).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var3_mdBottom.MoveNext()) { state = 3; goto case 3; }
							var4_datum = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("datum", ""), (Altova.Mapforce.IMFNode)(var3_mdBottom.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var3_mdBottom); var3_mdBottom = null;
							var5_mdTop = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdTop", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 4:
							state = 4;
							if (!var4_datum.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("datum", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_datum.Current))));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var4_datum); var4_datum = null;
							goto case 2;
						case 7:
							state = 7;
							if (!var5_mdTop.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdTop", "http://www.energistics.org/energyml/data/commonv2"), (new seq9_join((Altova.Mapforce.IMFNode)(var5_mdTop.Current), closure.var2_mdBottom)));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var5_mdTop); var5_mdTop = null;
							var6_mdBottom = (closure.var2_mdBottom).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var6_mdBottom.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdBase", "http://www.energistics.org/energyml/data/commonv2"), (new seq10_seq_((Altova.Mapforce.IMFNode)(var6_mdBottom.Current))));
							pos++;
							return true;
						case 11:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var6_mdBottom); var6_mdBottom = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_datum); var4_datum = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_mdBottom); var3_mdBottom = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_mdTop); var5_mdTop = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_mdBottom); var6_mdBottom = null;
				}
			}
		}
		class seq9_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_mdBottom;

			public seq9_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_mdBottom
			)
			{
				this.var1_cur = var1_cur;
				this.var2_mdBottom = var2_mdBottom;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq9_join closure;
				private IEnumerator var3_mdBottom;
				public Enumerator(seq9_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_mdBottom = (closure.var2_mdBottom).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_mdBottom.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)(var3_mdBottom.Current))))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_mdBottom); var3_mdBottom = null;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_mdBottom); var3_mdBottom = null;
				}
			}
		}
		class seq10_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq10_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq10_seq_ closure;
				public Enumerator(seq10_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq11_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_uidWell;
			private readonly string var2_cast;

			public seq11_join(
				System.Collections.IEnumerable var1_uidWell,
				string var2_cast
			)
			{
				this.var1_uidWell = var1_uidWell;
				this.var2_cast = var2_cast;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq11_join closure;
				private IEnumerator var3_uidWell;
				public Enumerator(seq11_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ContentType", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("well"));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(closure.var2_cast));
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Uuid", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 4:
							state = 5;
							var3_uidWell = (closure.var1_uidWell).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_uidWell.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:UuidAuthority", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_uidWell.Current))));
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_uidWell); var3_uidWell = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_uidWell); var3_uidWell = null;
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_wellCompletion_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_obj_wellCompletion_Instance
			)
			{
				this.var1_obj_wellCompletion_Instance = var1_obj_wellCompletion_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_wellCompletions;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_wellCompletions = ((new main(closure.var1_obj_wellCompletion_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_wellCompletions.MoveNext()) { state = 3; goto case 3; }
							current = var2_wellCompletions.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_wellCompletions); var2_wellCompletions = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_wellCompletions); var2_wellCompletions = null;
				}
			}
		}

	}
}
