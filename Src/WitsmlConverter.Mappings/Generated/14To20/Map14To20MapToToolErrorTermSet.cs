////////////////////////////////////////////////////////////////////////
//
// Map14To20MapToToolErrorTermSet.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map14To20
{

	public class Map14To20MapToToolErrorTermSet : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_obj_toolErrorTermSet2Instance;
		// members
		#endregion //Members


		public void Run(String obj_toolErrorTermSet2SourceFilename, string ToolErrorTermSet2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input obj_toolErrorTermSet2Source = new Altova.IO.FileInput(obj_toolErrorTermSet2SourceFilename))
			// open target stream
			using (Altova.IO.Output ToolErrorTermSet2Target = new Altova.IO.FileOutput(ToolErrorTermSet2TargetFilename))
			{
				// run
				Run(obj_toolErrorTermSet2Source, ToolErrorTermSet2Target);
			}
		}

		public void Run(Altova.IO.Input obj_toolErrorTermSet2Source, Altova.IO.Output ToolErrorTermSet2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + obj_toolErrorTermSet2Source.Filename + "...\n");
			XmlDocument obj_toolErrorTermSet2DocSourceObject = XmlTreeOperations.LoadDocument(obj_toolErrorTermSet2Source);


			m_obj_toolErrorTermSet2Instance = obj_toolErrorTermSet2DocSourceObject;
			if (runDoesCloseAll)
				obj_toolErrorTermSet2Source.Close();
				// Create the target
				XmlDocument ToolErrorTermSet2Doc = (ToolErrorTermSet2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? ToolErrorTermSet2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_obj_toolErrorTermSet2Instance, obj_toolErrorTermSet2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, ToolErrorTermSet2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				ToolErrorTermSet2Doc,
				ToolErrorTermSet2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					obj_toolErrorTermSet2Source.Close();
					ToolErrorTermSet2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_toolErrorTermSet_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_obj_toolErrorTermSet_Instance
			)
			{
				this.var1_obj_toolErrorTermSet_Instance = var1_obj_toolErrorTermSet_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_toolErrorTermSets;
				private System.Collections.IEnumerable var3_first_items;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_toolErrorTermSets = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("toolErrorTermSets", "http://www.witsml.org/schemas/1series"), closure.var1_obj_toolErrorTermSet_Instance));
							var3_first_items = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FirstItems((new seq1_join(var2_toolErrorTermSets)), 1m));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ToolErrorTermSet", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq2_join(var2_toolErrorTermSets, var3_first_items)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_toolErrorTermSets;

			public seq1_join(
				System.Collections.IEnumerable var1_toolErrorTermSets
			)
			{
				this.var1_toolErrorTermSets = var1_toolErrorTermSets;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_toolErrorTermSets;
				private IEnumerator var3_toolErrorTermSet;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_toolErrorTermSets = (closure.var1_toolErrorTermSets).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_toolErrorTermSets.MoveNext()) { state = 3; goto case 3; }
							var3_toolErrorTermSet = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("toolErrorTermSet", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_toolErrorTermSets.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_toolErrorTermSets); var2_toolErrorTermSets = null;
							return false;
						case 4:
							state = 4;
							if (!var3_toolErrorTermSet.MoveNext()) { state = 5; goto case 5; }
							current = var3_toolErrorTermSet.Current;
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_toolErrorTermSet); var3_toolErrorTermSet = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_toolErrorTermSet); var3_toolErrorTermSet = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_toolErrorTermSets); var2_toolErrorTermSets = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_toolErrorTermSets;
			private readonly System.Collections.IEnumerable var2_first_items;

			public seq2_join(
				System.Collections.IEnumerable var1_toolErrorTermSets,
				System.Collections.IEnumerable var2_first_items
			)
			{
				this.var1_toolErrorTermSets = var1_toolErrorTermSets;
				this.var2_first_items = var2_first_items;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var3_first_items;
				private IEnumerator var4_first_items;
				private IEnumerator var5_customData;
				private IEnumerator var6_authorization;
				private IEnumerator var7_nomenclature;
				private IEnumerator var8_errorTerm;
				private System.Collections.IEnumerable var9_extensionNameValue;
				private System.Collections.IEnumerable var10_measureClass;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("eml", "http://www.energistics.org/energyml/data/commonv2");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateNamespace("gco", "http://www.isotc211.org/2005/gco");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateNamespace("gmd", "http://www.isotc211.org/2005/gmd");
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateNamespace("gsr", "http://www.isotc211.org/2005/gsr");
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateNamespace("gts", "http://www.isotc211.org/2005/gts");
							pos++;
							return true;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateNamespace("gml", "http://www.opengis.net/gml/3.2");
							pos++;
							return true;
						case 7:
							state = 8;
							current = Altova.Functions.Core.CreateNamespace("xlink", "http://www.w3.org/1999/xlink");
							pos++;
							return true;
						case 8:
							state = 9;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.energistics.org/energyml/data/witsmlv2 file:///D:/Repos/witsmlvalidation/witsml/energyml/2.0/data/witsml/v2.0/xsd_schemas/ToolErrorTermSet.xsd"));
							pos++;
							return true;
						case 9:
							state = 10;
							var3_first_items = (closure.var2_first_items).GetEnumerator();
							goto case 10;
						case 10:
							state = 12;
							if (!var3_first_items.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("schemaVersion", ""), Altova.Functions.Core.Box("2.0"));
							pos++;
							return true;
						case 11:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
							var4_first_items = (closure.var2_first_items).GetEnumerator();
							goto case 14;
						case 12:
							state = 10;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uuid", ""), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 14:
							state = 16;
							if (!var4_first_items.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Aliases", "http://www.energistics.org/energyml/data/commonv2"), (new seq3_join(closure.var1_toolErrorTermSets, (Altova.Mapforce.IMFNode)(var4_first_items.Current))));
							pos++;
							return true;
						case 15:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
							return false;
						case 16:
							state = 17;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), (new seq4_join((Altova.Mapforce.IMFNode)(var4_first_items.Current))));
							pos++;
							return true;
						case 17:
							state = 18;
							var5_customData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var5_customData.MoveNext()) { state = 19; goto case 19; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:CustomData", "http://www.energistics.org/energyml/data/commonv2"), tbf.tbf1_CustomData.Eval((Altova.Mapforce.IMFNode)(var5_customData.Current)));
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var5_customData); var5_customData = null;
							var6_authorization = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("authorization", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 21;
						case 21:
							state = 21;
							if (!var6_authorization.MoveNext()) { state = 22; goto case 22; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Authorization", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_join((Altova.Mapforce.IMFNode)(var6_authorization.Current))));
							pos++;
							return true;
						case 22:
							state = 24;
							Altova.Mapforce.MFEnumerator.Dispose(var6_authorization); var6_authorization = null;
							var7_nomenclature = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nomenclature", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 24;
						case 24:
							state = 24;
							if (!var7_nomenclature.MoveNext()) { state = 25; goto case 25; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Nomenclature", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq6_join((Altova.Mapforce.IMFNode)(var7_nomenclature.Current))));
							pos++;
							return true;
						case 25:
							state = 27;
							Altova.Mapforce.MFEnumerator.Dispose(var7_nomenclature); var7_nomenclature = null;
							var8_errorTerm = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("errorTerm", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 27;
						case 27:
							state = 27;
							if (!var8_errorTerm.MoveNext()) { state = 28; goto case 28; }
							var9_extensionNameValue = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var8_errorTerm.Current)));
							var10_measureClass = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var8_errorTerm.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ErrorTerm", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq10_join(var9_extensionNameValue, var10_measureClass, (Altova.Mapforce.IMFNode)(var8_errorTerm.Current))));
							pos++;
							return true;
						case 28:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var8_errorTerm); var8_errorTerm = null;
							goto case 14;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_customData); var5_customData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_authorization); var6_authorization = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_nomenclature); var7_nomenclature = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_errorTerm); var8_errorTerm = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
				}
			}
		}
		class seq3_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_toolErrorTermSets;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq3_join(
				System.Collections.IEnumerable var1_toolErrorTermSets,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_toolErrorTermSets = var1_toolErrorTermSets;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_join closure;
				private IEnumerator var3_toolErrorTermSets;
				private IEnumerator var4_uid;
				public Enumerator(seq3_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_toolErrorTermSets = (closure.var1_toolErrorTermSets).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_toolErrorTermSets.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("authority", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("version", ""), (Altova.Mapforce.IMFNode)(var3_toolErrorTermSets.Current))))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_toolErrorTermSets); var3_toolErrorTermSets = null;
							var4_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var2_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var4_uid.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Identifier", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_uid.Current))));
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Identifier is created from the uid of the input scheme"));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_toolErrorTermSets); var3_toolErrorTermSets = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
				}
			}
		}
		class seq4_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq4_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_join closure;
				private IEnumerator var2_commonData;
				private IEnumerator var3_dTimLastChange;
				public Enumerator(seq4_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Originator", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("1411_input"));
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Format", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Mapforce"));
							pos++;
							return true;
						case 4:
							state = 5;
							var2_commonData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("commonData", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 7;
							if (!var2_commonData.MoveNext()) { state = 6; goto case 6; }
							var3_dTimLastChange = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTimLastChange", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_commonData.Current))).GetEnumerator();
							goto case 7;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_commonData); var2_commonData = null;
							return false;
						case 7:
							state = 7;
							if (!var3_dTimLastChange.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_dTimLastChange.Current))))));
							pos++;
							return true;
						case 8:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_dTimLastChange); var3_dTimLastChange = null;
							goto case 5;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_dTimLastChange); var3_dTimLastChange = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_commonData); var2_commonData = null;
				}
			}
		}
		class seq5_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq5_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_join closure;
				private IEnumerator var2_author;
				private IEnumerator var3_source;
				private IEnumerator var4_version;
				private IEnumerator var5_comment;
				public Enumerator(seq5_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_author = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("author", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_author.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Author", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_author.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_author); var2_author = null;
							var3_source = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("source", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_source.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Source", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_source.Current))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var3_source); var3_source = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Authority", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("authority", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 8:
							state = 9;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Status", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("status", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 9:
							state = 10;
							var4_version = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("version", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_version.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Version", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_version.Current))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_version); var4_version = null;
							var5_comment = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("comment", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_comment.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Comment", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_comment.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_comment); var5_comment = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_author); var2_author = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_source); var3_source = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_version); var4_version = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_comment); var5_comment = null;
				}
			}
		}
		class seq6_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq6_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_join closure;
				private IEnumerator var2_parameter;
				private IEnumerator var3_function;
				private IEnumerator var4_constant;
				public Enumerator(seq6_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_parameter = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("parameter", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_parameter.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Parameter", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq7_join((Altova.Mapforce.IMFNode)(var2_parameter.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_parameter); var2_parameter = null;
							var3_function = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("function", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_function.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Function", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq7_join((Altova.Mapforce.IMFNode)(var3_function.Current))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var3_function); var3_function = null;
							var4_constant = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("constant", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var4_constant.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Constant", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq9_join((Altova.Mapforce.IMFNode)(var4_constant.Current))));
							pos++;
							return true;
						case 9:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_constant); var4_constant = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_parameter); var2_parameter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_function); var3_function = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_constant); var4_constant = null;
				}
			}
		}
		class seq7_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq7_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_join closure;
				private IEnumerator var2_uid;
				private IEnumerator var3_extensionNameValue;
				public Enumerator(seq7_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 6:
							state = 7;
							var3_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var3_extensionNameValue.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq8_join((Altova.Mapforce.IMFNode)(var3_extensionNameValue.Current))));
							pos++;
							return true;
						case 8:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_extensionNameValue); var3_extensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_extensionNameValue); var3_extensionNameValue = null;
				}
			}
		}
		class seq8_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq8_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq8_join closure;
				private IEnumerator var2_measureClass;
				private IEnumerator var3_dTim;
				private IEnumerator var4_index;
				private IEnumerator var5_description;
				public Enumerator(seq8_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Name", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Value", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_measureClass = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var2_measureClass.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_measureClass.Current))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_measureClass); var2_measureClass = null;
							var3_dTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var3_dTim.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:DTim", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_dTim.Current))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var3_dTim); var3_dTim = null;
							var4_index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_index.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Index", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_index.Current))))))))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_index); var4_index = null;
							var5_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_description.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_description.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_description); var5_description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_measureClass); var2_measureClass = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_dTim); var3_dTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_index); var4_index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_description); var5_description = null;
				}
			}
		}
		class seq9_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq9_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq9_join closure;
				private IEnumerator var2_uid;
				private IEnumerator var3_extensionNameValue;
				public Enumerator(seq9_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Value", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))))));
							pos++;
							return true;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Unit", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("unit", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 7:
							state = 8;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 8:
							state = 9;
							var3_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var3_extensionNameValue.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq8_join((Altova.Mapforce.IMFNode)(var3_extensionNameValue.Current))));
							pos++;
							return true;
						case 10:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_extensionNameValue); var3_extensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_extensionNameValue); var3_extensionNameValue = null;
				}
			}
		}
		class seq10_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_extensionNameValue;
			private readonly System.Collections.IEnumerable var2_measureClass;
			private readonly Altova.Mapforce.IMFNode var3_cur;

			public seq10_join(
				System.Collections.IEnumerable var1_extensionNameValue,
				System.Collections.IEnumerable var2_measureClass,
				Altova.Mapforce.IMFNode var3_cur
			)
			{
				this.var1_extensionNameValue = var1_extensionNameValue;
				this.var2_measureClass = var2_measureClass;
				this.var3_cur = var3_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq10_join closure;
				private IEnumerator var4_uid;
				private IEnumerator var5_type;
				private IEnumerator var6_filter;
				private IEnumerator var7_description;
				private IEnumerator var8_operatingMode;
				private IEnumerator var9_extensionNameValue;
				private IEnumerator var10_errorCoefficient;
				public Enumerator(seq10_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var4_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var3_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var4_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var3_cur)))));
							pos++;
							return true;
						case 5:
							state = 6;
							var5_type = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("type", "http://www.witsml.org/schemas/1series"), closure.var3_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var5_type.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Type", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_type.Current))));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var5_type); var5_type = null;
							var6_filter = (closure.var2_measureClass).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var6_filter.MoveNext()) { state = 10; goto case 10; }
							if (!((bool)Altova.Functions.Core.First((new seq11_if_equal(closure.var1_extensionNameValue, (Altova.Mapforce.IMFNode)(var6_filter.Current)))))) { state = 9; goto case 9;  }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MeasureClass", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box((string)Altova.Functions.Core.Last((new seq14_if_equal(closure.var1_extensionNameValue, (Altova.Mapforce.IMFNode)(var6_filter.Current))))));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var6_filter); var6_filter = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Label", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("label", "http://www.witsml.org/schemas/1series"), closure.var3_cur)))));
							pos++;
							return true;
						case 12:
							state = 13;
							var7_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var3_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var7_description.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_description.Current))));
							pos++;
							return true;
						case 14:
							state = 16;
							Altova.Mapforce.MFEnumerator.Dispose(var7_description); var7_description = null;
							var8_operatingMode = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("operatingMode", "http://www.witsml.org/schemas/1series"), closure.var3_cur)).GetEnumerator();
							goto case 16;
						case 16:
							state = 16;
							if (!var8_operatingMode.MoveNext()) { state = 17; goto case 17; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("OperatingMode", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.Functions.Lang.Lowercase(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_operatingMode.Current)))));
							pos++;
							return true;
						case 17:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var8_operatingMode); var8_operatingMode = null;
							var9_extensionNameValue = (closure.var1_extensionNameValue).GetEnumerator();
							goto case 19;
						case 19:
							state = 19;
							if (!var9_extensionNameValue.MoveNext()) { state = 20; goto case 20; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq15_join((Altova.Mapforce.IMFNode)(var9_extensionNameValue.Current), closure.var2_measureClass)));
							pos++;
							return true;
						case 20:
							state = 22;
							Altova.Mapforce.MFEnumerator.Dispose(var9_extensionNameValue); var9_extensionNameValue = null;
							var10_errorCoefficient = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("errorCoefficient", "http://www.witsml.org/schemas/1series"), closure.var3_cur)).GetEnumerator();
							goto case 22;
						case 22:
							state = 22;
							if (!var10_errorCoefficient.MoveNext()) { state = 23; goto case 23; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ErrorCoefficient", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq17_join((Altova.Mapforce.IMFNode)(var10_errorCoefficient.Current))));
							pos++;
							return true;
						case 23:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var10_errorCoefficient); var10_errorCoefficient = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_type); var5_type = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_filter); var6_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_description); var7_description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_operatingMode); var8_operatingMode = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_extensionNameValue); var9_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_errorCoefficient); var10_errorCoefficient = null;
				}
			}
		}
		class seq11_if_equal : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_extensionNameValue;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq11_if_equal(
				System.Collections.IEnumerable var1_extensionNameValue,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_extensionNameValue = var1_extensionNameValue;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq11_if_equal closure;
				public Enumerator(seq11_if_equal closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							if (!((Altova.CoreTypes.NodeToString(closure.var2_cur)) == ("acceleration linear"))) { state = 2; goto case 2;  }
							current = Altova.CoreTypes.ParseBoolean("true");
							pos++;
							return true;
						case 2:
							state = 0;
							current = (bool)Altova.Functions.Core.First((new seq13_CoreAny((new seq12_map(closure.var1_extensionNameValue)))));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq12_map : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_extensionNameValue;

			public seq12_map(
				System.Collections.IEnumerable var1_extensionNameValue
			)
			{
				this.var1_extensionNameValue = var1_extensionNameValue;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq12_map closure;
				private IEnumerator var2_extensionNameValue;
				public Enumerator(seq12_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_extensionNameValue = (closure.var1_extensionNameValue).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_extensionNameValue.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_extensionNameValue.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_extensionNameValue); var2_extensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_extensionNameValue); var2_extensionNameValue = null;
				}
			}
		}
		class seq13_CoreAny : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_sequence;

			public seq13_CoreAny(
				System.Collections.IEnumerable var1_sequence
			)
			{
				this.var1_sequence = var1_sequence;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq13_CoreAny closure;
				private IEnumerator var2_enum;
				public Enumerator(seq13_CoreAny closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_enum = (closure.var1_sequence).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_enum.MoveNext()) { state = 3; goto case 3; }
							if (!((bool)(var2_enum.Current))) { state = 2; goto case 2;  }
							current = Altova.CoreTypes.ParseBoolean("true");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.CoreTypes.ParseBoolean("false");
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_enum); var2_enum = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_enum); var2_enum = null;
				}
			}
		}
		class seq14_if_equal : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_extensionNameValue;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq14_if_equal(
				System.Collections.IEnumerable var1_extensionNameValue,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_extensionNameValue = var1_extensionNameValue;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq14_if_equal closure;
				private IEnumerator var3_extensionNameValue;
				private IEnumerator var4_measureClass;
				public Enumerator(seq14_if_equal closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							if (!((Altova.CoreTypes.NodeToString(closure.var2_cur)) == ("acceleration linear"))) { state = 2; goto case 2;  }
							current = "linear acceleration";
							pos++;
							return true;
						case 2:
							state = 5;
							var3_extensionNameValue = (closure.var1_extensionNameValue).GetEnumerator();
							goto case 5;
						case 5:
							state = 7;
							if (!var3_extensionNameValue.MoveNext()) { state = 6; goto case 6; }
							var4_measureClass = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_extensionNameValue.Current))).GetEnumerator();
							goto case 7;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_extensionNameValue); var3_extensionNameValue = null;
							return false;
						case 7:
							state = 7;
							if (!var4_measureClass.MoveNext()) { state = 8; goto case 8; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_measureClass.Current));
							pos++;
							return true;
						case 8:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var4_measureClass); var4_measureClass = null;
							goto case 5;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_measureClass); var4_measureClass = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_extensionNameValue); var3_extensionNameValue = null;
				}
			}
		}
		class seq15_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_measureClass;

			public seq15_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_measureClass
			)
			{
				this.var1_cur = var1_cur;
				this.var2_measureClass = var2_measureClass;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq15_join closure;
				private IEnumerator var3_measureClass;
				private IEnumerator var4_if_equal;
				private IEnumerator var5_dTim;
				private IEnumerator var6_index;
				private IEnumerator var7_description;
				public Enumerator(seq15_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Name", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Value", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var3_measureClass = (closure.var2_measureClass).GetEnumerator();
							goto case 4;
						case 4:
							state = 6;
							if (!var3_measureClass.MoveNext()) { state = 5; goto case 5; }
							var4_if_equal = ((new seq16_if_equal(closure.var1_cur, (Altova.Mapforce.IMFNode)(var3_measureClass.Current)))).GetEnumerator();
							goto case 6;
						case 5:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var3_measureClass); var3_measureClass = null;
							var5_dTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 9;
						case 6:
							state = 6;
							if (!var4_if_equal.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box((string)(var4_if_equal.Current)));
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var4_if_equal); var4_if_equal = null;
							goto case 4;
						case 9:
							state = 9;
							if (!var5_dTim.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:DTim", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_dTim.Current))))));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var5_dTim); var5_dTim = null;
							var6_index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var6_index.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Index", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_index.Current))))))))));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var6_index); var6_index = null;
							var7_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 15;
						case 15:
							state = 15;
							if (!var7_description.MoveNext()) { state = 16; goto case 16; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_description.Current))));
							pos++;
							return true;
						case 16:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var7_description); var7_description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_if_equal); var4_if_equal = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_measureClass); var3_measureClass = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_dTim); var5_dTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_index); var6_index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_description); var7_description = null;
				}
			}
		}
		class seq16_if_equal : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq16_if_equal(
				Altova.Mapforce.IMFNode var1_cur,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_cur = var1_cur;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq16_if_equal closure;
				private IEnumerator var3_measureClass;
				public Enumerator(seq16_if_equal closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							if (!((Altova.CoreTypes.NodeToString(closure.var2_cur)) == ("acceleration linear"))) { state = 2; goto case 2;  }
							current = "linear acceleration";
							pos++;
							return true;
						case 2:
							state = 5;
							var3_measureClass = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_measureClass.MoveNext()) { state = 6; goto case 6; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_measureClass.Current));
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_measureClass); var3_measureClass = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_measureClass); var3_measureClass = null;
				}
			}
		}
		class seq17_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq17_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq17_join closure;
				private IEnumerator var2_uid;
				private IEnumerator var3_extensionNameValue;
				private IEnumerator var4_azi;
				private IEnumerator var5_depth;
				private IEnumerator var6_inc;
				private IEnumerator var7_tvd;
				public Enumerator(seq17_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
							var3_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_extensionNameValue.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq8_join((Altova.Mapforce.IMFNode)(var3_extensionNameValue.Current))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var3_extensionNameValue); var3_extensionNameValue = null;
							var4_azi = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("azi", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var4_azi.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("AbstractIscwsaErrorCoefficient", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq18_seq_()));
							pos++;
							return true;
						case 9:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var4_azi); var4_azi = null;
							var5_depth = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("depth", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var5_depth.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("AbstractIscwsaErrorCoefficient", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq19_seq_()));
							pos++;
							return true;
						case 12:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var5_depth); var5_depth = null;
							var6_inc = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("inc", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 14;
						case 14:
							state = 14;
							if (!var6_inc.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("AbstractIscwsaErrorCoefficient", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq20_seq_()));
							pos++;
							return true;
						case 15:
							state = 17;
							Altova.Mapforce.MFEnumerator.Dispose(var6_inc); var6_inc = null;
							var7_tvd = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("tvd", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 17;
						case 17:
							state = 17;
							if (!var7_tvd.MoveNext()) { state = 18; goto case 18; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("AbstractIscwsaErrorCoefficient", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq21_seq_()));
							pos++;
							return true;
						case 18:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var7_tvd); var7_tvd = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_extensionNameValue); var3_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_azi); var4_azi = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_depth); var5_depth = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_inc); var6_inc = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_tvd); var7_tvd = null;
				}
			}
		}
		class seq18_seq_ : IEnumerable
		{

			public seq18_seq_(
			)
			{
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq18_seq_ closure;
				public Enumerator(seq18_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}Azi")));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Azi", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("azimuth"));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq19_seq_ : IEnumerable
		{

			public seq19_seq_(
			)
			{
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq19_seq_ closure;
				public Enumerator(seq19_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}Depth")));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Depth", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("depth"));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq20_seq_ : IEnumerable
		{

			public seq20_seq_(
			)
			{
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq20_seq_ closure;
				public Enumerator(seq20_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}Inc")));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Inc", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("inc"));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq21_seq_ : IEnumerable
		{

			public seq21_seq_(
			)
			{
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq21_seq_ closure;
				public Enumerator(seq21_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}Tvd")));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Tvd", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("tvd"));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_toolErrorTermSet_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_obj_toolErrorTermSet_Instance
			)
			{
				this.var1_obj_toolErrorTermSet_Instance = var1_obj_toolErrorTermSet_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_toolErrorTermSets;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_toolErrorTermSets = ((new main(closure.var1_obj_toolErrorTermSet_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_toolErrorTermSets.MoveNext()) { state = 3; goto case 3; }
							current = var2_toolErrorTermSets.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_toolErrorTermSets); var2_toolErrorTermSets = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_toolErrorTermSets); var2_toolErrorTermSets = null;
				}
			}
		}

	}
}
