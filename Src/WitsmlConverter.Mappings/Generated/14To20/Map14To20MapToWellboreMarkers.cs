////////////////////////////////////////////////////////////////////////
//
// Map14To20MapToWellboreMarkers.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map14To20
{

	public class Map14To20MapToWellboreMarkers : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_obj_formationMarker2Instance;
		// members
		#endregion //Members


		public void Run(String obj_formationMarker2SourceFilename, string WellboreMarkers2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input obj_formationMarker2Source = new Altova.IO.FileInput(obj_formationMarker2SourceFilename))
			// open target stream
			using (Altova.IO.Output WellboreMarkers2Target = new Altova.IO.FileOutput(WellboreMarkers2TargetFilename))
			{
				// run
				Run(obj_formationMarker2Source, WellboreMarkers2Target);
			}
		}

		public void Run(Altova.IO.Input obj_formationMarker2Source, Altova.IO.Output WellboreMarkers2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + obj_formationMarker2Source.Filename + "...\n");
			XmlDocument obj_formationMarker2DocSourceObject = XmlTreeOperations.LoadDocument(obj_formationMarker2Source);


			m_obj_formationMarker2Instance = obj_formationMarker2DocSourceObject;
			if (runDoesCloseAll)
				obj_formationMarker2Source.Close();
				// Create the target
				XmlDocument WellboreMarkers2Doc = (WellboreMarkers2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? WellboreMarkers2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_obj_formationMarker2Instance, obj_formationMarker2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, WellboreMarkers2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				WellboreMarkers2Doc,
				WellboreMarkers2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					obj_formationMarker2Source.Close();
					WellboreMarkers2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_formationMarker_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_obj_formationMarker_Instance
			)
			{
				this.var1_obj_formationMarker_Instance = var1_obj_formationMarker_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_formationMarkers;
				private System.Collections.IEnumerable var3_first_items;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_formationMarkers = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("formationMarkers", "http://www.witsml.org/schemas/1series"), closure.var1_obj_formationMarker_Instance));
							var3_first_items = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FirstItems((new seq1_join(var2_formationMarkers)), 1m));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("WellboreMarker", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq2_join(var2_formationMarkers, var3_first_items)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_formationMarkers;

			public seq1_join(
				System.Collections.IEnumerable var1_formationMarkers
			)
			{
				this.var1_formationMarkers = var1_formationMarkers;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_formationMarkers;
				private IEnumerator var3_formationMarker;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_formationMarkers = (closure.var1_formationMarkers).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_formationMarkers.MoveNext()) { state = 3; goto case 3; }
							var3_formationMarker = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("formationMarker", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_formationMarkers.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_formationMarkers); var2_formationMarkers = null;
							return false;
						case 4:
							state = 4;
							if (!var3_formationMarker.MoveNext()) { state = 5; goto case 5; }
							current = var3_formationMarker.Current;
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_formationMarker); var3_formationMarker = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_formationMarker); var3_formationMarker = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_formationMarkers); var2_formationMarkers = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_formationMarkers;
			private readonly System.Collections.IEnumerable var2_first_items;

			public seq2_join(
				System.Collections.IEnumerable var1_formationMarkers,
				System.Collections.IEnumerable var2_first_items
			)
			{
				this.var1_formationMarkers = var1_formationMarkers;
				this.var2_first_items = var2_first_items;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var3_first_items;
				private IEnumerator var4_first_items;
				private System.Collections.IEnumerable var5_commonData;
				private IEnumerator var6_customData;
				private IEnumerator var7_commonData;
				private IEnumerator var8_extensionNameValue;
				private IEnumerator var9_mdTopSample;
				private IEnumerator var10_tvdTopSample;
				private IEnumerator var11_dip;
				private IEnumerator var12_dipDirection;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("eml", "http://www.energistics.org/energyml/data/commonv2");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateNamespace("gco", "http://www.isotc211.org/2005/gco");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateNamespace("gmd", "http://www.isotc211.org/2005/gmd");
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateNamespace("gsr", "http://www.isotc211.org/2005/gsr");
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateNamespace("gts", "http://www.isotc211.org/2005/gts");
							pos++;
							return true;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateNamespace("gml", "http://www.opengis.net/gml/3.2");
							pos++;
							return true;
						case 7:
							state = 8;
							current = Altova.Functions.Core.CreateNamespace("xlink", "http://www.w3.org/1999/xlink");
							pos++;
							return true;
						case 8:
							state = 9;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.energistics.org/energyml/data/witsmlv2 file:///D:/Repos/witsmlvalidation/witsml/energyml/2.0/data/witsml/v2.0/xsd_schemas/WellboreMarkers.xsd"));
							pos++;
							return true;
						case 9:
							state = 10;
							var3_first_items = (closure.var2_first_items).GetEnumerator();
							goto case 10;
						case 10:
							state = 12;
							if (!var3_first_items.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("schemaVersion", ""), Altova.Functions.Core.Box("2.0"));
							pos++;
							return true;
						case 11:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
							var4_first_items = (closure.var2_first_items).GetEnumerator();
							goto case 14;
						case 12:
							state = 10;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uuid", ""), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 14:
							state = 16;
							if (!var4_first_items.MoveNext()) { state = 15; goto case 15; }
							var5_commonData = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("commonData", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Aliases", "http://www.energistics.org/energyml/data/commonv2"), (new seq3_join(closure.var1_formationMarkers, (Altova.Mapforce.IMFNode)(var4_first_items.Current))));
							pos++;
							return true;
						case 15:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
							return false;
						case 16:
							state = 17;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), (new seq4_join(var5_commonData, (Altova.Mapforce.IMFNode)(var4_first_items.Current))));
							pos++;
							return true;
						case 17:
							state = 18;
							var6_customData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var6_customData.MoveNext()) { state = 19; goto case 19; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:CustomData", "http://www.energistics.org/energyml/data/commonv2"), tbf.tbf1_CustomData.Eval((Altova.Mapforce.IMFNode)(var6_customData.Current)));
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var6_customData); var6_customData = null;
							var7_commonData = (var5_commonData).GetEnumerator();
							goto case 21;
						case 21:
							state = 23;
							if (!var7_commonData.MoveNext()) { state = 22; goto case 22; }
							var8_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var7_commonData.Current))).GetEnumerator();
							goto case 23;
						case 22:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var7_commonData); var7_commonData = null;
							var9_mdTopSample = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdTopSample", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 26;
						case 23:
							state = 23;
							if (!var8_extensionNameValue.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ExtensionNameValue", "http://www.energistics.org/energyml/data/commonv2"), (new seq5_seq_()));
							pos++;
							return true;
						case 24:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var8_extensionNameValue); var8_extensionNameValue = null;
							goto case 21;
						case 26:
							state = 26;
							if (!var9_mdTopSample.MoveNext()) { state = 27; goto case 27; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Md", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq6_seq_((Altova.Mapforce.IMFNode)(var9_mdTopSample.Current))));
							pos++;
							return true;
						case 27:
							state = 29;
							Altova.Mapforce.MFEnumerator.Dispose(var9_mdTopSample); var9_mdTopSample = null;
							var10_tvdTopSample = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("tvdTopSample", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 29;
						case 29:
							state = 29;
							if (!var10_tvdTopSample.MoveNext()) { state = 30; goto case 30; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Tvd", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq6_seq_((Altova.Mapforce.IMFNode)(var10_tvdTopSample.Current))));
							pos++;
							return true;
						case 30:
							state = 32;
							Altova.Mapforce.MFEnumerator.Dispose(var10_tvdTopSample); var10_tvdTopSample = null;
							var11_dip = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dip", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 32;
						case 32:
							state = 32;
							if (!var11_dip.MoveNext()) { state = 33; goto case 33; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DipAngle", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_PlaneAngleMeasure.Eval((Altova.Mapforce.IMFNode)(var11_dip.Current)));
							pos++;
							return true;
						case 33:
							state = 35;
							Altova.Mapforce.MFEnumerator.Dispose(var11_dip); var11_dip = null;
							var12_dipDirection = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dipDirection", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 35;
						case 35:
							state = 35;
							if (!var12_dipDirection.MoveNext()) { state = 36; goto case 36; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DipDirection", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_PlaneAngleMeasure.Eval((Altova.Mapforce.IMFNode)(var12_dipDirection.Current)));
							pos++;
							return true;
						case 36:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var12_dipDirection); var12_dipDirection = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq7_seq_((Altova.Mapforce.IMFNode)(var4_first_items.Current))));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_customData); var6_customData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_extensionNameValue); var8_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_commonData); var7_commonData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_mdTopSample); var9_mdTopSample = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_tvdTopSample); var10_tvdTopSample = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_dip); var11_dip = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_dipDirection); var12_dipDirection = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
				}
			}
		}
		class seq3_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_formationMarkers;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq3_join(
				System.Collections.IEnumerable var1_formationMarkers,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_formationMarkers = var1_formationMarkers;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_join closure;
				private IEnumerator var3_formationMarkers;
				private IEnumerator var4_uidWell;
				private IEnumerator var5_uidWellbore;
				private IEnumerator var6_uid;
				public Enumerator(seq3_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_formationMarkers = (closure.var1_formationMarkers).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_formationMarkers.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("authority", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("version", ""), (Altova.Mapforce.IMFNode)(var3_formationMarkers.Current))))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_formationMarkers); var3_formationMarkers = null;
							var4_uidWell = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uidWell", ""), closure.var2_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 7;
							if (!var4_uidWell.MoveNext()) { state = 6; goto case 6; }
							var5_uidWellbore = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uidWellbore", ""), closure.var2_cur)).GetEnumerator();
							goto case 7;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_uidWell); var4_uidWell = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Identifier is created from the uid of the input scheme"));
							pos++;
							return true;
						case 7:
							state = 9;
							if (!var5_uidWellbore.MoveNext()) { state = 8; goto case 8; }
							var6_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var2_cur)).GetEnumerator();
							goto case 9;
						case 8:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var5_uidWellbore); var5_uidWellbore = null;
							goto case 5;
						case 9:
							state = 9;
							if (!var6_uid.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Identifier", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_uidWell.Current)), Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_uidWellbore.Current))), Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_uid.Current)))));
							pos++;
							return true;
						case 10:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var6_uid); var6_uid = null;
							goto case 7;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_formationMarkers); var3_formationMarkers = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_uid); var6_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_uidWellbore); var5_uidWellbore = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_uidWell); var4_uidWell = null;
				}
			}
		}
		class seq4_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_commonData;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq4_join(
				System.Collections.IEnumerable var1_commonData,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_commonData = var1_commonData;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_join closure;
				private IEnumerator var3_commonData;
				private IEnumerator var4_dTimLastChange;
				public Enumerator(seq4_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var2_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Originator", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("1411_input"));
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Format", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Mapforce"));
							pos++;
							return true;
						case 4:
							state = 5;
							var3_commonData = (closure.var1_commonData).GetEnumerator();
							goto case 5;
						case 5:
							state = 7;
							if (!var3_commonData.MoveNext()) { state = 6; goto case 6; }
							var4_dTimLastChange = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTimLastChange", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_commonData.Current))).GetEnumerator();
							goto case 7;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_commonData); var3_commonData = null;
							return false;
						case 7:
							state = 7;
							if (!var4_dTimLastChange.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_dTimLastChange.Current))))));
							pos++;
							return true;
						case 8:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var4_dTimLastChange); var4_dTimLastChange = null;
							goto case 5;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_dTimLastChange); var4_dTimLastChange = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_commonData); var3_commonData = null;
				}
			}
		}
		class seq5_seq_ : IEnumerable
		{

			public seq5_seq_(
			)
			{
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_seq_ closure;
				public Enumerator(seq5_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq6_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq6_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_seq_ closure;
				public Enumerator(seq6_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("datum", ""), Altova.Functions.Core.Box("kelly bushing"));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq7_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq7_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_seq_ closure;
				public Enumerator(seq7_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ContentType", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("obj_wellbore"));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nameWellbore", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Uuid", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_formationMarker_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_obj_formationMarker_Instance
			)
			{
				this.var1_obj_formationMarker_Instance = var1_obj_formationMarker_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_formationMarkers;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_formationMarkers = ((new main(closure.var1_obj_formationMarker_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_formationMarkers.MoveNext()) { state = 3; goto case 3; }
							current = var2_formationMarkers.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_formationMarkers); var2_formationMarkers = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_formationMarkers); var2_formationMarkers = null;
				}
			}
		}

	}
}
