////////////////////////////////////////////////////////////////////////
//
// Map14To20MapToSurveyProgram.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map14To20
{

	public class Map14To20MapToSurveyProgram : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_obj_surveyProgram2Instance;
		// members
		#endregion //Members


		public void Run(String obj_surveyProgram2SourceFilename, string SurveyProgram2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input obj_surveyProgram2Source = new Altova.IO.FileInput(obj_surveyProgram2SourceFilename))
			// open target stream
			using (Altova.IO.Output SurveyProgram2Target = new Altova.IO.FileOutput(SurveyProgram2TargetFilename))
			{
				// run
				Run(obj_surveyProgram2Source, SurveyProgram2Target);
			}
		}

		public void Run(Altova.IO.Input obj_surveyProgram2Source, Altova.IO.Output SurveyProgram2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + obj_surveyProgram2Source.Filename + "...\n");
			XmlDocument obj_surveyProgram2DocSourceObject = XmlTreeOperations.LoadDocument(obj_surveyProgram2Source);


			m_obj_surveyProgram2Instance = obj_surveyProgram2DocSourceObject;
			if (runDoesCloseAll)
				obj_surveyProgram2Source.Close();
				// Create the target
				XmlDocument SurveyProgram2Doc = (SurveyProgram2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? SurveyProgram2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_obj_surveyProgram2Instance, obj_surveyProgram2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, SurveyProgram2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				SurveyProgram2Doc,
				SurveyProgram2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					obj_surveyProgram2Source.Close();
					SurveyProgram2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_surveyProgram_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_obj_surveyProgram_Instance
			)
			{
				this.var1_obj_surveyProgram_Instance = var1_obj_surveyProgram_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_first_items;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_first_items = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FirstItems((new seq1_join(closure.var1_obj_surveyProgram_Instance)), 1m));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SurveyProgram", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq2_join(var2_first_items)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_surveyProgram_Instance;

			public seq1_join(
				Altova.Mapforce.IMFNode var1_obj_surveyProgram_Instance
			)
			{
				this.var1_obj_surveyProgram_Instance = var1_obj_surveyProgram_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_surveyPrograms;
				private IEnumerator var3_surveyProgram;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_surveyPrograms = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("surveyPrograms", "http://www.witsml.org/schemas/1series"), closure.var1_obj_surveyProgram_Instance)).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_surveyPrograms.MoveNext()) { state = 3; goto case 3; }
							var3_surveyProgram = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("surveyProgram", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_surveyPrograms.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_surveyPrograms); var2_surveyPrograms = null;
							return false;
						case 4:
							state = 4;
							if (!var3_surveyProgram.MoveNext()) { state = 5; goto case 5; }
							current = var3_surveyProgram.Current;
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_surveyProgram); var3_surveyProgram = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_surveyProgram); var3_surveyProgram = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_surveyPrograms); var2_surveyPrograms = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_first_items;

			public seq2_join(
				System.Collections.IEnumerable var1_first_items
			)
			{
				this.var1_first_items = var1_first_items;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var2_first_items;
				private IEnumerator var3_first_items;
				private IEnumerator var4_customData;
				private IEnumerator var5_surveyVer;
				private IEnumerator var6_engineer;
				private IEnumerator var7_final;
				private IEnumerator var8_surveySection;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("eml", "http://www.energistics.org/energyml/data/commonv2");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateNamespace("gco", "http://www.isotc211.org/2005/gco");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateNamespace("gmd", "http://www.isotc211.org/2005/gmd");
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateNamespace("gsr", "http://www.isotc211.org/2005/gsr");
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateNamespace("gts", "http://www.isotc211.org/2005/gts");
							pos++;
							return true;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateNamespace("gml", "http://www.opengis.net/gml/3.2");
							pos++;
							return true;
						case 7:
							state = 8;
							current = Altova.Functions.Core.CreateNamespace("xlink", "http://www.w3.org/1999/xlink");
							pos++;
							return true;
						case 8:
							state = 9;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.energistics.org/energyml/data/witsmlv2 file:///D:/Repos/witsmlvalidation/witsml/energyml/2.0/data/witsml/v2.0/xsd_schemas/SurveyProgram.xsd"));
							pos++;
							return true;
						case 9:
							state = 10;
							var2_first_items = (closure.var1_first_items).GetEnumerator();
							goto case 10;
						case 10:
							state = 12;
							if (!var2_first_items.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("schemaVersion", ""), Altova.Functions.Core.Box("2.0"));
							pos++;
							return true;
						case 11:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var2_first_items); var2_first_items = null;
							var3_first_items = (closure.var1_first_items).GetEnumerator();
							goto case 14;
						case 12:
							state = 10;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uuid", ""), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 14:
							state = 16;
							if (!var3_first_items.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), (new seq3_seq_((Altova.Mapforce.IMFNode)(var3_first_items.Current))));
							pos++;
							return true;
						case 15:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
							return false;
						case 16:
							state = 17;
							var4_customData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_first_items.Current))).GetEnumerator();
							goto case 17;
						case 17:
							state = 17;
							if (!var4_customData.MoveNext()) { state = 18; goto case 18; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:CustomData", "http://www.energistics.org/energyml/data/commonv2"), tbf.tbf1_CustomData.Eval((Altova.Mapforce.IMFNode)(var4_customData.Current)));
							pos++;
							return true;
						case 18:
							state = 20;
							Altova.Mapforce.MFEnumerator.Dispose(var4_customData); var4_customData = null;
							var5_surveyVer = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("surveyVer", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_first_items.Current))).GetEnumerator();
							goto case 20;
						case 20:
							state = 20;
							if (!var5_surveyVer.MoveNext()) { state = 21; goto case 21; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SurveyVer", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_surveyVer.Current))))))))));
							pos++;
							return true;
						case 21:
							state = 23;
							Altova.Mapforce.MFEnumerator.Dispose(var5_surveyVer); var5_surveyVer = null;
							var6_engineer = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("engineer", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_first_items.Current))).GetEnumerator();
							goto case 23;
						case 23:
							state = 23;
							if (!var6_engineer.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Engineer", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_engineer.Current))));
							pos++;
							return true;
						case 24:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var6_engineer); var6_engineer = null;
							var7_final = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("final", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_first_items.Current))).GetEnumerator();
							goto case 26;
						case 26:
							state = 26;
							if (!var7_final.MoveNext()) { state = 27; goto case 27; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Final", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_final.Current))));
							pos++;
							return true;
						case 27:
							state = 29;
							Altova.Mapforce.MFEnumerator.Dispose(var7_final); var7_final = null;
							var8_surveySection = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("surveySection", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_first_items.Current))).GetEnumerator();
							goto case 29;
						case 29:
							state = 29;
							if (!var8_surveySection.MoveNext()) { state = 30; goto case 30; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SurveySection", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq4_join((Altova.Mapforce.IMFNode)(var8_surveySection.Current))));
							pos++;
							return true;
						case 30:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var8_surveySection); var8_surveySection = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq9_seq_((Altova.Mapforce.IMFNode)(var3_first_items.Current))));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_first_items); var2_first_items = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_customData); var4_customData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_surveyVer); var5_surveyVer = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_engineer); var6_engineer = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_final); var7_final = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_surveySection); var8_surveySection = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
				}
			}
		}
		class seq3_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq3_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_seq_ closure;
				public Enumerator(seq3_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Originator", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("1411_input"));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Format", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Mapforce"));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq4_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq4_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_join closure;
				private IEnumerator var2_uid;
				private IEnumerator var3_name;
				private IEnumerator var4_modelError;
				private IEnumerator var5_overwrite;
				private IEnumerator var6_frequencyMx;
				private IEnumerator var7_itemState;
				private IEnumerator var8_comments;
				private IEnumerator var9_extensionNameValue;
				public Enumerator(seq4_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Sequence", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("sequence", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))))))))));
							pos++;
							return true;
						case 5:
							state = 6;
							var3_name = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var3_name.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_name.Current))));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var3_name); var3_name = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_seq_(closure.var1_cur)));
							pos++;
							return true;
						case 9:
							state = 10;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NameSurveyCompany", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nameSurveyCompany", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 10:
							state = 11;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NameTool", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nameTool", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 11:
							state = 12;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TypeTool", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("typeTool", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 12:
							state = 13;
							var4_modelError = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("modelError", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var4_modelError.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ModelError", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_modelError.Current))));
							pos++;
							return true;
						case 14:
							state = 16;
							Altova.Mapforce.MFEnumerator.Dispose(var4_modelError); var4_modelError = null;
							var5_overwrite = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("overwrite", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 16;
						case 16:
							state = 16;
							if (!var5_overwrite.MoveNext()) { state = 17; goto case 17; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Overwrite", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_overwrite.Current))))));
							pos++;
							return true;
						case 17:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var5_overwrite); var5_overwrite = null;
							var6_frequencyMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("frequencyMx", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 19;
						case 19:
							state = 19;
							if (!var6_frequencyMx.MoveNext()) { state = 20; goto case 20; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FrequencyMx", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_LengthMeasure.Eval((Altova.Mapforce.IMFNode)(var6_frequencyMx.Current)));
							pos++;
							return true;
						case 20:
							state = 22;
							Altova.Mapforce.MFEnumerator.Dispose(var6_frequencyMx); var6_frequencyMx = null;
							var7_itemState = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("itemState", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 22;
						case 22:
							state = 22;
							if (!var7_itemState.MoveNext()) { state = 23; goto case 23; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ItemState", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_itemState.Current))));
							pos++;
							return true;
						case 23:
							state = 25;
							Altova.Mapforce.MFEnumerator.Dispose(var7_itemState); var7_itemState = null;
							var8_comments = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("comments", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 25;
						case 25:
							state = 25;
							if (!var8_comments.MoveNext()) { state = 26; goto case 26; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Comments", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_comments.Current))));
							pos++;
							return true;
						case 26:
							state = 28;
							Altova.Mapforce.MFEnumerator.Dispose(var8_comments); var8_comments = null;
							var9_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 28;
						case 28:
							state = 28;
							if (!var9_extensionNameValue.MoveNext()) { state = 29; goto case 29; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq8_join((Altova.Mapforce.IMFNode)(var9_extensionNameValue.Current))));
							pos++;
							return true;
						case 29:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var9_extensionNameValue); var9_extensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_name); var3_name = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_modelError); var4_modelError = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_overwrite); var5_overwrite = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_frequencyMx); var6_frequencyMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_itemState); var7_itemState = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_comments); var8_comments = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_extensionNameValue); var9_extensionNameValue = null;
				}
			}
		}
		class seq5_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq5_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_seq_ closure;
				public Enumerator(seq5_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("datum", ""), Altova.Functions.Core.Box("unknown"));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdTop", "http://www.energistics.org/energyml/data/commonv2"), (new seq6_join(closure.var1_cur)));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdBase", "http://www.energistics.org/energyml/data/commonv2"), (new seq7_join(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq6_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq6_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_join closure;
				private Altova.Mapforce.IMFNode var2_mdStart;
				public Enumerator(seq6_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_mdStart = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdStart", "http://www.witsml.org/schemas/1series"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_mdStart)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_mdStart)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq7_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq7_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_join closure;
				private Altova.Mapforce.IMFNode var2_mdEnd;
				public Enumerator(seq7_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_mdEnd = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdEnd", "http://www.witsml.org/schemas/1series"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_mdEnd)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_mdEnd)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq8_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq8_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq8_join closure;
				private IEnumerator var2_measureClass;
				private IEnumerator var3_dTim;
				private IEnumerator var4_index;
				private IEnumerator var5_description;
				public Enumerator(seq8_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Name", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Value", "http://www.energistics.org/energyml/data/commonv2"), tbf.tbf3_StringMeasure.Eval((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), closure.var1_cur))));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_measureClass = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var2_measureClass.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_measureClass.Current))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_measureClass); var2_measureClass = null;
							var3_dTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var3_dTim.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:DTim", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_dTim.Current))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var3_dTim); var3_dTim = null;
							var4_index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_index.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Index", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_index.Current))))))))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_index); var4_index = null;
							var5_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_description.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_description.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_description); var5_description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_measureClass); var2_measureClass = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_dTim); var3_dTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_index); var4_index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_description); var5_description = null;
				}
			}
		}
		class seq9_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq9_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq9_seq_ closure;
				public Enumerator(seq9_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ContentType", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("wellbore"));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nameWellbore", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Uuid", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_surveyProgram_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_obj_surveyProgram_Instance
			)
			{
				this.var1_obj_surveyProgram_Instance = var1_obj_surveyProgram_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_first_items;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_first_items = ((new main(closure.var1_obj_surveyProgram_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_first_items.MoveNext()) { state = 3; goto case 3; }
							current = var2_first_items.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_first_items); var2_first_items = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_first_items); var2_first_items = null;
				}
			}
		}

	}
}
