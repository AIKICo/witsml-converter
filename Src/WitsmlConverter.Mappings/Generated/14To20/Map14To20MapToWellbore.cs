////////////////////////////////////////////////////////////////////////
//
// Map14To20MapToWellbore.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map14To20
{

	public class Map14To20MapToWellbore : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_obj_wellbore2Instance;
		// members
		#endregion //Members


		public void Run(String obj_wellbore2SourceFilename, string Wellbore2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input obj_wellbore2Source = new Altova.IO.FileInput(obj_wellbore2SourceFilename))
			// open target stream
			using (Altova.IO.Output Wellbore2Target = new Altova.IO.FileOutput(Wellbore2TargetFilename))
			{
				// run
				Run(obj_wellbore2Source, Wellbore2Target);
			}
		}

		public void Run(Altova.IO.Input obj_wellbore2Source, Altova.IO.Output Wellbore2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + obj_wellbore2Source.Filename + "...\n");
			XmlDocument obj_wellbore2DocSourceObject = XmlTreeOperations.LoadDocument(obj_wellbore2Source);


			m_obj_wellbore2Instance = obj_wellbore2DocSourceObject;
			if (runDoesCloseAll)
				obj_wellbore2Source.Close();
				// Create the target
				XmlDocument Wellbore2Doc = (Wellbore2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? Wellbore2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_obj_wellbore2Instance, obj_wellbore2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, Wellbore2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				Wellbore2Doc,
				Wellbore2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					obj_wellbore2Source.Close();
					Wellbore2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_wellbore_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_obj_wellbore_Instance
			)
			{
				this.var1_obj_wellbore_Instance = var1_obj_wellbore_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_wellbores;
				private System.Collections.IEnumerable var3_first_items;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_wellbores = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wellbores", "http://www.witsml.org/schemas/1series"), closure.var1_obj_wellbore_Instance));
							var3_first_items = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FirstItems((new seq1_join(var2_wellbores)), 1m));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq2_join(var3_first_items, var2_wellbores)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellbores;

			public seq1_join(
				System.Collections.IEnumerable var1_wellbores
			)
			{
				this.var1_wellbores = var1_wellbores;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_wellbores;
				private IEnumerator var3_wellbore;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_wellbores = (closure.var1_wellbores).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_wellbores.MoveNext()) { state = 3; goto case 3; }
							var3_wellbore = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wellbore", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_wellbores.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_wellbores); var2_wellbores = null;
							return false;
						case 4:
							state = 4;
							if (!var3_wellbore.MoveNext()) { state = 5; goto case 5; }
							current = var3_wellbore.Current;
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_wellbore); var3_wellbore = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_wellbore); var3_wellbore = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_wellbores); var2_wellbores = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_first_items;
			private readonly System.Collections.IEnumerable var2_wellbores;

			public seq2_join(
				System.Collections.IEnumerable var1_first_items,
				System.Collections.IEnumerable var2_wellbores
			)
			{
				this.var1_first_items = var1_first_items;
				this.var2_wellbores = var2_wellbores;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var3_first_items;
				private IEnumerator var4_first_items;
				private System.Collections.IEnumerable var5_box;
				private System.Collections.IEnumerable var6_uid;
				private IEnumerator var7_customData;
				private IEnumerator var8_number;
				private IEnumerator var9_suffixAPI;
				private IEnumerator var10_numGovt;
				private IEnumerator var11_statusWellbore;
				private IEnumerator var12_isActive;
				private IEnumerator var13_purposeWellbore;
				private IEnumerator var14_typeWellbore;
				private IEnumerator var15_shape;
				private IEnumerator var16_dTimKickoff;
				private IEnumerator var17_achievedTD;
				private IEnumerator var18_md;
				private IEnumerator var19_tvd;
				private IEnumerator var20_mdBit;
				private IEnumerator var21_tvdBit;
				private IEnumerator var22_mdKickoff;
				private IEnumerator var23_tvdKickoff;
				private IEnumerator var24_mdPlanned;
				private IEnumerator var25_tvdPlanned;
				private IEnumerator var26_mdSubSeaPlanned;
				private IEnumerator var27_tvdSubSeaPlanned;
				private IEnumerator var28_dayTarget;
				private IEnumerator var29_uid;
				private IEnumerator var30_parentWellbore;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("eml", "http://www.energistics.org/energyml/data/commonv2");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateNamespace("gco", "http://www.isotc211.org/2005/gco");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateNamespace("gmd", "http://www.isotc211.org/2005/gmd");
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateNamespace("gsr", "http://www.isotc211.org/2005/gsr");
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateNamespace("gts", "http://www.isotc211.org/2005/gts");
							pos++;
							return true;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateNamespace("gml", "http://www.opengis.net/gml/3.2");
							pos++;
							return true;
						case 7:
							state = 8;
							current = Altova.Functions.Core.CreateNamespace("xlink", "http://www.w3.org/1999/xlink");
							pos++;
							return true;
						case 8:
							state = 9;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.energistics.org/energyml/data/witsmlv2 file:///D:/Repos/witsmlvalidation/witsml/energyml/2.0/data/witsml/v2.0/xsd_schemas/Wellbore.xsd"));
							pos++;
							return true;
						case 9:
							state = 10;
							var3_first_items = (closure.var1_first_items).GetEnumerator();
							goto case 10;
						case 10:
							state = 12;
							if (!var3_first_items.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("schemaVersion", ""), Altova.Functions.Core.Box("2.0"));
							pos++;
							return true;
						case 11:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
							var4_first_items = (closure.var1_first_items).GetEnumerator();
							goto case 14;
						case 12:
							state = 10;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uuid", ""), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 14:
							state = 16;
							if (!var4_first_items.MoveNext()) { state = 15; goto case 15; }
							var5_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box("1411_input"));
							var6_uid = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), (Altova.Mapforce.IMFNode)(var4_first_items.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Aliases", "http://www.energistics.org/energyml/data/commonv2"), (new seq3_join(closure.var2_wellbores, var6_uid)));
							pos++;
							return true;
						case 15:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
							return false;
						case 16:
							state = 17;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), (new seq4_join((Altova.Mapforce.IMFNode)(var4_first_items.Current), var5_box)));
							pos++;
							return true;
						case 17:
							state = 18;
							var7_customData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var7_customData.MoveNext()) { state = 19; goto case 19; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:CustomData", "http://www.energistics.org/energyml/data/commonv2"), tbf.tbf1_CustomData.Eval((Altova.Mapforce.IMFNode)(var7_customData.Current)));
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var7_customData); var7_customData = null;
							var8_number = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("number", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 21;
						case 21:
							state = 21;
							if (!var8_number.MoveNext()) { state = 22; goto case 22; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Number", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_number.Current))));
							pos++;
							return true;
						case 22:
							state = 24;
							Altova.Mapforce.MFEnumerator.Dispose(var8_number); var8_number = null;
							var9_suffixAPI = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("suffixAPI", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 24;
						case 24:
							state = 24;
							if (!var9_suffixAPI.MoveNext()) { state = 25; goto case 25; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SuffixAPI", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var9_suffixAPI.Current))));
							pos++;
							return true;
						case 25:
							state = 27;
							Altova.Mapforce.MFEnumerator.Dispose(var9_suffixAPI); var9_suffixAPI = null;
							var10_numGovt = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("numGovt", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 27;
						case 27:
							state = 27;
							if (!var10_numGovt.MoveNext()) { state = 28; goto case 28; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NumGovt", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var10_numGovt.Current))));
							pos++;
							return true;
						case 28:
							state = 30;
							Altova.Mapforce.MFEnumerator.Dispose(var10_numGovt); var10_numGovt = null;
							var11_statusWellbore = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("statusWellbore", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 30;
						case 30:
							state = 30;
							if (!var11_statusWellbore.MoveNext()) { state = 31; goto case 31; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("StatusWellbore", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var11_statusWellbore.Current))));
							pos++;
							return true;
						case 31:
							state = 33;
							Altova.Mapforce.MFEnumerator.Dispose(var11_statusWellbore); var11_statusWellbore = null;
							var12_isActive = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("isActive", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 33;
						case 33:
							state = 33;
							if (!var12_isActive.MoveNext()) { state = 34; goto case 34; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("IsActive", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var12_isActive.Current))))));
							pos++;
							return true;
						case 34:
							state = 36;
							Altova.Mapforce.MFEnumerator.Dispose(var12_isActive); var12_isActive = null;
							var13_purposeWellbore = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("purposeWellbore", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 36;
						case 36:
							state = 36;
							if (!var13_purposeWellbore.MoveNext()) { state = 37; goto case 37; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("PurposeWellbore", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_purposeWellbore.Current))));
							pos++;
							return true;
						case 37:
							state = 39;
							Altova.Mapforce.MFEnumerator.Dispose(var13_purposeWellbore); var13_purposeWellbore = null;
							var14_typeWellbore = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("typeWellbore", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 39;
						case 39:
							state = 39;
							if (!var14_typeWellbore.MoveNext()) { state = 40; goto case 40; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TypeWellbore", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var14_typeWellbore.Current))));
							pos++;
							return true;
						case 40:
							state = 42;
							Altova.Mapforce.MFEnumerator.Dispose(var14_typeWellbore); var14_typeWellbore = null;
							var15_shape = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("shape", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 42;
						case 42:
							state = 42;
							if (!var15_shape.MoveNext()) { state = 43; goto case 43; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Shape", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var15_shape.Current))));
							pos++;
							return true;
						case 43:
							state = 45;
							Altova.Mapforce.MFEnumerator.Dispose(var15_shape); var15_shape = null;
							var16_dTimKickoff = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTimKickoff", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 45;
						case 45:
							state = 45;
							if (!var16_dTimKickoff.MoveNext()) { state = 46; goto case 46; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DTimKickoff", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var16_dTimKickoff.Current))))));
							pos++;
							return true;
						case 46:
							state = 48;
							Altova.Mapforce.MFEnumerator.Dispose(var16_dTimKickoff); var16_dTimKickoff = null;
							var17_achievedTD = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("achievedTD", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 48;
						case 48:
							state = 48;
							if (!var17_achievedTD.MoveNext()) { state = 49; goto case 49; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("AchievedTD", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var17_achievedTD.Current))))));
							pos++;
							return true;
						case 49:
							state = 51;
							Altova.Mapforce.MFEnumerator.Dispose(var17_achievedTD); var17_achievedTD = null;
							var18_md = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("md", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 51;
						case 51:
							state = 51;
							if (!var18_md.MoveNext()) { state = 52; goto case 52; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Md", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_seq_((Altova.Mapforce.IMFNode)(var18_md.Current))));
							pos++;
							return true;
						case 52:
							state = 54;
							Altova.Mapforce.MFEnumerator.Dispose(var18_md); var18_md = null;
							var19_tvd = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("tvd", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 54;
						case 54:
							state = 54;
							if (!var19_tvd.MoveNext()) { state = 55; goto case 55; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Tvd", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_seq_((Altova.Mapforce.IMFNode)(var19_tvd.Current))));
							pos++;
							return true;
						case 55:
							state = 57;
							Altova.Mapforce.MFEnumerator.Dispose(var19_tvd); var19_tvd = null;
							var20_mdBit = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdBit", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 57;
						case 57:
							state = 57;
							if (!var20_mdBit.MoveNext()) { state = 58; goto case 58; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MdBit", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_seq_((Altova.Mapforce.IMFNode)(var20_mdBit.Current))));
							pos++;
							return true;
						case 58:
							state = 60;
							Altova.Mapforce.MFEnumerator.Dispose(var20_mdBit); var20_mdBit = null;
							var21_tvdBit = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("tvdBit", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 60;
						case 60:
							state = 60;
							if (!var21_tvdBit.MoveNext()) { state = 61; goto case 61; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TvdBit", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_WellVerticalDepthCoord.Eval((Altova.Mapforce.IMFNode)(var21_tvdBit.Current)));
							pos++;
							return true;
						case 61:
							state = 63;
							Altova.Mapforce.MFEnumerator.Dispose(var21_tvdBit); var21_tvdBit = null;
							var22_mdKickoff = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdKickoff", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 63;
						case 63:
							state = 63;
							if (!var22_mdKickoff.MoveNext()) { state = 64; goto case 64; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MdKickoff", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_seq_((Altova.Mapforce.IMFNode)(var22_mdKickoff.Current))));
							pos++;
							return true;
						case 64:
							state = 66;
							Altova.Mapforce.MFEnumerator.Dispose(var22_mdKickoff); var22_mdKickoff = null;
							var23_tvdKickoff = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("tvdKickoff", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 66;
						case 66:
							state = 66;
							if (!var23_tvdKickoff.MoveNext()) { state = 67; goto case 67; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TvdKickoff", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_seq_((Altova.Mapforce.IMFNode)(var23_tvdKickoff.Current))));
							pos++;
							return true;
						case 67:
							state = 69;
							Altova.Mapforce.MFEnumerator.Dispose(var23_tvdKickoff); var23_tvdKickoff = null;
							var24_mdPlanned = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdPlanned", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 69;
						case 69:
							state = 69;
							if (!var24_mdPlanned.MoveNext()) { state = 70; goto case 70; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MdPlanned", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_seq_((Altova.Mapforce.IMFNode)(var24_mdPlanned.Current))));
							pos++;
							return true;
						case 70:
							state = 72;
							Altova.Mapforce.MFEnumerator.Dispose(var24_mdPlanned); var24_mdPlanned = null;
							var25_tvdPlanned = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("tvdPlanned", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 72;
						case 72:
							state = 72;
							if (!var25_tvdPlanned.MoveNext()) { state = 73; goto case 73; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TvdPlanned", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_seq_((Altova.Mapforce.IMFNode)(var25_tvdPlanned.Current))));
							pos++;
							return true;
						case 73:
							state = 75;
							Altova.Mapforce.MFEnumerator.Dispose(var25_tvdPlanned); var25_tvdPlanned = null;
							var26_mdSubSeaPlanned = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdSubSeaPlanned", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 75;
						case 75:
							state = 75;
							if (!var26_mdSubSeaPlanned.MoveNext()) { state = 76; goto case 76; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MdSubSeaPlanned", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_seq_((Altova.Mapforce.IMFNode)(var26_mdSubSeaPlanned.Current))));
							pos++;
							return true;
						case 76:
							state = 78;
							Altova.Mapforce.MFEnumerator.Dispose(var26_mdSubSeaPlanned); var26_mdSubSeaPlanned = null;
							var27_tvdSubSeaPlanned = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("tvdSubSeaPlanned", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 78;
						case 78:
							state = 78;
							if (!var27_tvdSubSeaPlanned.MoveNext()) { state = 79; goto case 79; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TvdSubSeaPlanned", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_seq_((Altova.Mapforce.IMFNode)(var27_tvdSubSeaPlanned.Current))));
							pos++;
							return true;
						case 79:
							state = 81;
							Altova.Mapforce.MFEnumerator.Dispose(var27_tvdSubSeaPlanned); var27_tvdSubSeaPlanned = null;
							var28_dayTarget = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dayTarget", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 81;
						case 81:
							state = 81;
							if (!var28_dayTarget.MoveNext()) { state = 82; goto case 82; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DayTarget", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_TimeMeasure.Eval((Altova.Mapforce.IMFNode)(var28_dayTarget.Current)));
							pos++;
							return true;
						case 82:
							state = 84;
							Altova.Mapforce.MFEnumerator.Dispose(var28_dayTarget); var28_dayTarget = null;
							var29_uid = (var6_uid).GetEnumerator();
							goto case 84;
						case 84:
							state = 84;
							if (!var29_uid.MoveNext()) { state = 85; goto case 85; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Well", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq6_join((Altova.Mapforce.IMFNode)(var4_first_items.Current), var5_box)));
							pos++;
							return true;
						case 85:
							state = 87;
							Altova.Mapforce.MFEnumerator.Dispose(var29_uid); var29_uid = null;
							var30_parentWellbore = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("parentWellbore", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 87;
						case 87:
							state = 87;
							if (!var30_parentWellbore.MoveNext()) { state = 88; goto case 88; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ParentWellbore", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq7_join(var5_box, (Altova.Mapforce.IMFNode)(var30_parentWellbore.Current))));
							pos++;
							return true;
						case 88:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var30_parentWellbore); var30_parentWellbore = null;
							goto case 14;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_customData); var7_customData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_number); var8_number = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_suffixAPI); var9_suffixAPI = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_numGovt); var10_numGovt = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_statusWellbore); var11_statusWellbore = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_isActive); var12_isActive = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_purposeWellbore); var13_purposeWellbore = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_typeWellbore); var14_typeWellbore = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_shape); var15_shape = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_dTimKickoff); var16_dTimKickoff = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_achievedTD); var17_achievedTD = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_md); var18_md = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_tvd); var19_tvd = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_mdBit); var20_mdBit = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_tvdBit); var21_tvdBit = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_mdKickoff); var22_mdKickoff = null;
					Altova.Mapforce.MFEnumerator.Dispose(var23_tvdKickoff); var23_tvdKickoff = null;
					Altova.Mapforce.MFEnumerator.Dispose(var24_mdPlanned); var24_mdPlanned = null;
					Altova.Mapforce.MFEnumerator.Dispose(var25_tvdPlanned); var25_tvdPlanned = null;
					Altova.Mapforce.MFEnumerator.Dispose(var26_mdSubSeaPlanned); var26_mdSubSeaPlanned = null;
					Altova.Mapforce.MFEnumerator.Dispose(var27_tvdSubSeaPlanned); var27_tvdSubSeaPlanned = null;
					Altova.Mapforce.MFEnumerator.Dispose(var28_dayTarget); var28_dayTarget = null;
					Altova.Mapforce.MFEnumerator.Dispose(var29_uid); var29_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var30_parentWellbore); var30_parentWellbore = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
				}
			}
		}
		class seq3_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellbores;
			private readonly System.Collections.IEnumerable var2_uid;

			public seq3_join(
				System.Collections.IEnumerable var1_wellbores,
				System.Collections.IEnumerable var2_uid
			)
			{
				this.var1_wellbores = var1_wellbores;
				this.var2_uid = var2_uid;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_join closure;
				private IEnumerator var3_wellbores;
				private IEnumerator var4_uid;
				public Enumerator(seq3_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_wellbores = (closure.var1_wellbores).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_wellbores.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("authority", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("version", ""), (Altova.Mapforce.IMFNode)(var3_wellbores.Current))))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_wellbores); var3_wellbores = null;
							var4_uid = (closure.var2_uid).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var4_uid.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Identifier", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_uid.Current))));
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Identifier is created from the uid of the input scheme"));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_wellbores); var3_wellbores = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
				}
			}
		}
		class seq4_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_box;

			public seq4_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_box
			)
			{
				this.var1_cur = var1_cur;
				this.var2_box = var2_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_join closure;
				private IEnumerator var3_commonData;
				private IEnumerator var4_dTimLastChange;
				public Enumerator(seq4_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Originator", "http://www.energistics.org/energyml/data/commonv2"), closure.var2_box);
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Format", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Mapforce"));
							pos++;
							return true;
						case 4:
							state = 5;
							var3_commonData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("commonData", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 7;
							if (!var3_commonData.MoveNext()) { state = 6; goto case 6; }
							var4_dTimLastChange = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTimLastChange", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_commonData.Current))).GetEnumerator();
							goto case 7;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_commonData); var3_commonData = null;
							return false;
						case 7:
							state = 7;
							if (!var4_dTimLastChange.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_dTimLastChange.Current))))));
							pos++;
							return true;
						case 8:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var4_dTimLastChange); var4_dTimLastChange = null;
							goto case 5;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_dTimLastChange); var4_dTimLastChange = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_commonData); var3_commonData = null;
				}
			}
		}
		class seq5_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq5_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_seq_ closure;
				public Enumerator(seq5_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("datum", ""), Altova.Functions.Core.Box("unknown"));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq6_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_box;

			public seq6_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_box
			)
			{
				this.var1_cur = var1_cur;
				this.var2_box = var2_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_join closure;
				private IEnumerator var3_uidWell;
				public Enumerator(seq6_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ContentType", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("well"));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nameWell", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Uuid", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 4:
							state = 5;
							var3_uidWell = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uidWell", ""), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_uidWell.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:UuidAuthority", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_uidWell.Current))));
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_uidWell); var3_uidWell = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:VersionString", "http://www.energistics.org/energyml/data/commonv2"), closure.var2_box);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_uidWell); var3_uidWell = null;
				}
			}
		}
		class seq7_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_box;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq7_join(
				System.Collections.IEnumerable var1_box,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_box = var1_box;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_join closure;
				private IEnumerator var3_uidRef;
				public Enumerator(seq7_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ContentType", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("wellbore"));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString(closure.var2_cur)));
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Uuid", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 4:
							state = 5;
							var3_uidRef = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uidRef", ""), closure.var2_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_uidRef.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:UuidAuthority", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_uidRef.Current))));
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_uidRef); var3_uidRef = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:VersionString", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_box);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_uidRef); var3_uidRef = null;
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_wellbore_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_obj_wellbore_Instance
			)
			{
				this.var1_obj_wellbore_Instance = var1_obj_wellbore_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_wellbores;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_wellbores = ((new main(closure.var1_obj_wellbore_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_wellbores.MoveNext()) { state = 3; goto case 3; }
							current = var2_wellbores.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_wellbores); var2_wellbores = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_wellbores); var2_wellbores = null;
				}
			}
		}

	}
}
