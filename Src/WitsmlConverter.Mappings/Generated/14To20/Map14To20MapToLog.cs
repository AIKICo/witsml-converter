////////////////////////////////////////////////////////////////////////
//
// Map14To20MapToLog.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map14To20
{

	public class Map14To20MapToLog : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_obj_log2Instance;
		// members
		#endregion //Members


		public void Run(String obj_log2SourceFilename, string Log2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input obj_log2Source = new Altova.IO.FileInput(obj_log2SourceFilename))
			// open target stream
			using (Altova.IO.Output Log2Target = new Altova.IO.FileOutput(Log2TargetFilename))
			{
				// run
				Run(obj_log2Source, Log2Target);
			}
		}

		public void Run(Altova.IO.Input obj_log2Source, Altova.IO.Output Log2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + obj_log2Source.Filename + "...\n");
			XmlDocument obj_log2DocSourceObject = XmlTreeOperations.LoadDocument(obj_log2Source);


			m_obj_log2Instance = obj_log2DocSourceObject;
			if (runDoesCloseAll)
				obj_log2Source.Close();
				// Create the target
				XmlDocument Log2Doc = (Log2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? Log2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_obj_log2Instance, obj_log2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, Log2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				Log2Doc,
				Log2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					obj_log2Source.Close();
					Log2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_log_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_obj_log_Instance
			)
			{
				this.var1_obj_log_Instance = var1_obj_log_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_logs;
				private System.Collections.IEnumerable var3_first_items;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_logs = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("logs", "http://www.witsml.org/schemas/1series"), closure.var1_obj_log_Instance));
							var3_first_items = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FirstItems((new seq1_join(var2_logs)), 1m));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Log", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq2_join(var3_first_items, var2_logs)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_logs;

			public seq1_join(
				System.Collections.IEnumerable var1_logs
			)
			{
				this.var1_logs = var1_logs;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_logs;
				private IEnumerator var3_log;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_logs = (closure.var1_logs).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_logs.MoveNext()) { state = 3; goto case 3; }
							var3_log = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("log", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_logs.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_logs); var2_logs = null;
							return false;
						case 4:
							state = 4;
							if (!var3_log.MoveNext()) { state = 5; goto case 5; }
							current = var3_log.Current;
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_log); var3_log = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_log); var3_log = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_logs); var2_logs = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_first_items;
			private readonly System.Collections.IEnumerable var2_logs;

			public seq2_join(
				System.Collections.IEnumerable var1_first_items,
				System.Collections.IEnumerable var2_logs
			)
			{
				this.var1_first_items = var1_first_items;
				this.var2_logs = var2_logs;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var3_first_items;
				private IEnumerator var4_first_items;
				private System.Collections.IEnumerable var5_box;
				private System.Collections.IEnumerable var6_box;
				private System.Collections.IEnumerable var7_logCurveInfo;
				private System.Collections.IEnumerable var8_indexType;
				private System.Collections.IEnumerable var9_commonData;
				private Altova.Mapforce.IMFNode var10_create_attribute_qname;
				private Altova.Mapforce.IMFNode var11_create_element_qname;
				private System.Collections.IEnumerable var12_serviceCompany;
				private System.Collections.IEnumerable var13_startIndex;
				private Altova.Mapforce.IMFNode var14_create_attribute_qname;
				private Altova.Mapforce.IMFNode var15_create_element_qname;
				private System.Collections.IEnumerable var16_box;
				private System.Collections.IEnumerable var17_box;
				private System.Collections.IEnumerable var18_box;
				private System.Collections.IEnumerable var19_box;
				private System.Collections.IEnumerable var20_join;
				private System.Collections.IEnumerable var21_join;
				private IEnumerator var22_customData;
				private IEnumerator var23_join;
				private IEnumerator var24_indexType;
				private IEnumerator var25_runNumber;
				private IEnumerator var26_startIndex;
				private IEnumerator var27_startDateTimeIndex;
				private IEnumerator var28_endIndex;
				private IEnumerator var29_endDateTimeIndex;
				private IEnumerator var30_serviceCompany;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("eml", "http://www.energistics.org/energyml/data/commonv2");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateNamespace("gco", "http://www.isotc211.org/2005/gco");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateNamespace("gmd", "http://www.isotc211.org/2005/gmd");
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateNamespace("gsr", "http://www.isotc211.org/2005/gsr");
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateNamespace("gts", "http://www.isotc211.org/2005/gts");
							pos++;
							return true;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateNamespace("gml", "http://www.opengis.net/gml/3.2");
							pos++;
							return true;
						case 7:
							state = 8;
							current = Altova.Functions.Core.CreateNamespace("xlink", "http://www.w3.org/1999/xlink");
							pos++;
							return true;
						case 8:
							state = 9;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.energistics.org/energyml/data/witsmlv2 file:///D:/Repos/witsmlvalidation/witsml/energyml/2.0/data/witsml/v2.0/xsd_schemas/Log.xsd"));
							pos++;
							return true;
						case 9:
							state = 10;
							var3_first_items = (closure.var1_first_items).GetEnumerator();
							goto case 10;
						case 10:
							state = 12;
							if (!var3_first_items.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("schemaVersion", ""), Altova.Functions.Core.Box("2.0"));
							pos++;
							return true;
						case 11:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
							var4_first_items = (closure.var1_first_items).GetEnumerator();
							goto case 14;
						case 12:
							state = 10;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uuid", ""), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 14:
							state = 16;
							if (!var4_first_items.MoveNext()) { state = 15; goto case 15; }
							var5_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							var6_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box("DEPTH"));
							var7_logCurveInfo = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("logCurveInfo", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current)));
							var8_indexType = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("indexType", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current)));
							var9_commonData = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("commonData", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current)));
							var10_create_attribute_qname = (Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("schemaVersion", ""), Altova.Functions.Core.Box("2.0.0.0")));
							var11_create_element_qname = (Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ContentType", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("log")));
							var12_serviceCompany = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("serviceCompany", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current)));
							var13_startIndex = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("startIndex", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current)));
							var14_create_attribute_qname = (Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uuid", ""), var5_box));
							var15_create_element_qname = (Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Uuid", "http://www.energistics.org/energyml/data/commonv2"), var5_box));
							var16_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("LoggingMethod", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("mixed"))));
							var17_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Originator", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("1411_input"))));
							var18_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Format", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Mapforce"))));
							var19_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))))))));
							var20_join = new Altova.Functions.Core.SequenceCache((new seq3_join(var9_commonData)));
							var21_join = new Altova.Functions.Core.SequenceCache((new seq4_join(var9_commonData)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Aliases", "http://www.energistics.org/energyml/data/commonv2"), (new seq6_join(closure.var2_logs, (Altova.Mapforce.IMFNode)(var4_first_items.Current))));
							pos++;
							return true;
						case 15:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
							return false;
						case 16:
							state = 17;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), (new seq7_join(var17_box, var9_commonData, var18_box, var19_box)));
							pos++;
							return true;
						case 17:
							state = 18;
							var22_customData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var22_customData.MoveNext()) { state = 19; goto case 19; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:CustomData", "http://www.energistics.org/energyml/data/commonv2"), tbf.tbf1_CustomData.Eval((Altova.Mapforce.IMFNode)(var22_customData.Current)));
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var22_customData); var22_customData = null;
							var23_join = (var21_join).GetEnumerator();
							goto case 21;
						case 21:
							state = 21;
							if (!var23_join.MoveNext()) { state = 22; goto case 22; }
							current = var23_join.Current;
							pos++;
							return true;
						case 22:
							state = 24;
							Altova.Mapforce.MFEnumerator.Dispose(var23_join); var23_join = null;
							var24_indexType = (var8_indexType).GetEnumerator();
							goto case 24;
						case 24:
							state = 24;
							if (!var24_indexType.MoveNext()) { state = 25; goto case 25; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TimeDepth", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var24_indexType.Current))));
							pos++;
							return true;
						case 25:
							state = 27;
							Altova.Mapforce.MFEnumerator.Dispose(var24_indexType); var24_indexType = null;
							var25_runNumber = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("runNumber", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 27;
						case 27:
							state = 27;
							if (!var25_runNumber.MoveNext()) { state = 28; goto case 28; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("RunNumber", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var25_runNumber.Current))));
							pos++;
							return true;
						case 28:
							state = 30;
							Altova.Mapforce.MFEnumerator.Dispose(var25_runNumber); var25_runNumber = null;
							var26_startIndex = (var13_startIndex).GetEnumerator();
							goto case 30;
						case 30:
							state = 30;
							if (!var26_startIndex.MoveNext()) { state = 31; goto case 31; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("StartIndex", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq8_seq_((Altova.Mapforce.IMFNode)(var26_startIndex.Current))));
							pos++;
							return true;
						case 31:
							state = 33;
							Altova.Mapforce.MFEnumerator.Dispose(var26_startIndex); var26_startIndex = null;
							var27_startDateTimeIndex = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("startDateTimeIndex", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 33;
						case 33:
							state = 33;
							if (!var27_startDateTimeIndex.MoveNext()) { state = 34; goto case 34; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("StartIndex", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq9_seq_((Altova.Mapforce.IMFNode)(var27_startDateTimeIndex.Current))));
							pos++;
							return true;
						case 34:
							state = 36;
							Altova.Mapforce.MFEnumerator.Dispose(var27_startDateTimeIndex); var27_startDateTimeIndex = null;
							var28_endIndex = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("endIndex", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 36;
						case 36:
							state = 36;
							if (!var28_endIndex.MoveNext()) { state = 37; goto case 37; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EndIndex", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq8_seq_((Altova.Mapforce.IMFNode)(var28_endIndex.Current))));
							pos++;
							return true;
						case 37:
							state = 39;
							Altova.Mapforce.MFEnumerator.Dispose(var28_endIndex); var28_endIndex = null;
							var29_endDateTimeIndex = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("endDateTimeIndex", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 39;
						case 39:
							state = 39;
							if (!var29_endDateTimeIndex.MoveNext()) { state = 40; goto case 40; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EndIndex", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq9_seq_((Altova.Mapforce.IMFNode)(var29_endDateTimeIndex.Current))));
							pos++;
							return true;
						case 40:
							state = 42;
							Altova.Mapforce.MFEnumerator.Dispose(var29_endDateTimeIndex); var29_endDateTimeIndex = null;
							var30_serviceCompany = (var12_serviceCompany).GetEnumerator();
							goto case 42;
						case 42:
							state = 42;
							if (!var30_serviceCompany.MoveNext()) { state = 43; goto case 43; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("LoggingCompanyName", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var30_serviceCompany.Current))));
							pos++;
							return true;
						case 43:
							state = 45;
							Altova.Mapforce.MFEnumerator.Dispose(var30_serviceCompany); var30_serviceCompany = null;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var16_box);
							pos++;
							return true;
						case 45:
							state = 46;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq10_seq_(var15_create_element_qname, (Altova.Mapforce.IMFNode)(var4_first_items.Current))));
							pos++;
							return true;
						case 46:
							state = 14;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ChannelSet", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq11_join(var17_box, var6_box, var11_create_element_qname, var15_create_element_qname, var21_join, var20_join, var16_box, var12_serviceCompany, var7_logCurveInfo, var14_create_attribute_qname, var10_create_attribute_qname, var8_indexType, var18_box, var13_startIndex, var19_box, (Altova.Mapforce.IMFNode)(var4_first_items.Current))));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_customData); var22_customData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var23_join); var23_join = null;
					Altova.Mapforce.MFEnumerator.Dispose(var24_indexType); var24_indexType = null;
					Altova.Mapforce.MFEnumerator.Dispose(var25_runNumber); var25_runNumber = null;
					Altova.Mapforce.MFEnumerator.Dispose(var26_startIndex); var26_startIndex = null;
					Altova.Mapforce.MFEnumerator.Dispose(var27_startDateTimeIndex); var27_startDateTimeIndex = null;
					Altova.Mapforce.MFEnumerator.Dispose(var28_endIndex); var28_endIndex = null;
					Altova.Mapforce.MFEnumerator.Dispose(var29_endDateTimeIndex); var29_endDateTimeIndex = null;
					Altova.Mapforce.MFEnumerator.Dispose(var30_serviceCompany); var30_serviceCompany = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
				}
			}
		}
		class seq3_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_commonData;

			public seq3_join(
				System.Collections.IEnumerable var1_commonData
			)
			{
				this.var1_commonData = var1_commonData;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_join closure;
				private IEnumerator var2_commonData;
				private IEnumerator var3_dTimCreation;
				public Enumerator(seq3_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_commonData = (closure.var1_commonData).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_commonData.MoveNext()) { state = 3; goto case 3; }
							var3_dTimCreation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTimCreation", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_commonData.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_commonData); var2_commonData = null;
							return false;
						case 4:
							state = 4;
							if (!var3_dTimCreation.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Creation", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_dTimCreation.Current))))));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_dTimCreation); var3_dTimCreation = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_dTimCreation); var3_dTimCreation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_commonData); var2_commonData = null;
				}
			}
		}
		class seq4_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_commonData;

			public seq4_join(
				System.Collections.IEnumerable var1_commonData
			)
			{
				this.var1_commonData = var1_commonData;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_join closure;
				private IEnumerator var2_commonData;
				private IEnumerator var3_extensionNameValue;
				public Enumerator(seq4_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_commonData = (closure.var1_commonData).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_commonData.MoveNext()) { state = 3; goto case 3; }
							var3_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_commonData.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_commonData); var2_commonData = null;
							return false;
						case 4:
							state = 4;
							if (!var3_extensionNameValue.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ExtensionNameValue", "http://www.energistics.org/energyml/data/commonv2"), (new seq5_join((Altova.Mapforce.IMFNode)(var3_extensionNameValue.Current))));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_extensionNameValue); var3_extensionNameValue = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_extensionNameValue); var3_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_commonData); var2_commonData = null;
				}
			}
		}
		class seq5_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq5_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_join closure;
				private IEnumerator var2_measureClass;
				private IEnumerator var3_dTim;
				private IEnumerator var4_index;
				private IEnumerator var5_description;
				public Enumerator(seq5_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Name", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Value", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_measureClass = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var2_measureClass.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_measureClass.Current))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_measureClass); var2_measureClass = null;
							var3_dTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var3_dTim.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:DTim", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_dTim.Current))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var3_dTim); var3_dTim = null;
							var4_index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_index.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Index", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_index.Current))))))))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_index); var4_index = null;
							var5_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_description.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_description.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_description); var5_description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_measureClass); var2_measureClass = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_dTim); var3_dTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_index); var4_index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_description); var5_description = null;
				}
			}
		}
		class seq6_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_logs;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq6_join(
				System.Collections.IEnumerable var1_logs,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_logs = var1_logs;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_join closure;
				private IEnumerator var3_logs;
				private IEnumerator var4_uidWell;
				private IEnumerator var5_uidWellbore;
				private IEnumerator var6_uid;
				public Enumerator(seq6_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_logs = (closure.var1_logs).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_logs.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("authority", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("version", ""), (Altova.Mapforce.IMFNode)(var3_logs.Current))))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_logs); var3_logs = null;
							var4_uidWell = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uidWell", ""), closure.var2_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 7;
							if (!var4_uidWell.MoveNext()) { state = 6; goto case 6; }
							var5_uidWellbore = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uidWellbore", ""), closure.var2_cur)).GetEnumerator();
							goto case 7;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_uidWell); var4_uidWell = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Identifier is created from the uid of the input scheme"));
							pos++;
							return true;
						case 7:
							state = 9;
							if (!var5_uidWellbore.MoveNext()) { state = 8; goto case 8; }
							var6_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var2_cur)).GetEnumerator();
							goto case 9;
						case 8:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var5_uidWellbore); var5_uidWellbore = null;
							goto case 5;
						case 9:
							state = 9;
							if (!var6_uid.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Identifier", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.Functions.Core.Substring(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_uidWell.Current)), Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_uidWellbore.Current))), Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_uid.Current))), Altova.CoreTypes.DecimalToDouble(1m), Altova.CoreTypes.DecimalToDouble(64m))));
							pos++;
							return true;
						case 10:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var6_uid); var6_uid = null;
							goto case 7;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_logs); var3_logs = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_uid); var6_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_uidWellbore); var5_uidWellbore = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_uidWell); var4_uidWell = null;
				}
			}
		}
		class seq7_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_box;
			private readonly System.Collections.IEnumerable var2_commonData;
			private readonly System.Collections.IEnumerable var3_box;
			private readonly System.Collections.IEnumerable var4_box;

			public seq7_join(
				System.Collections.IEnumerable var1_box,
				System.Collections.IEnumerable var2_commonData,
				System.Collections.IEnumerable var3_box,
				System.Collections.IEnumerable var4_box
			)
			{
				this.var1_box = var1_box;
				this.var2_commonData = var2_commonData;
				this.var3_box = var3_box;
				this.var4_box = var4_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_join closure;
				private IEnumerator var5_commonData;
				private IEnumerator var6_dTimLastChange;
				public Enumerator(seq7_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var4_box);
							pos++;
							return true;
						case 2:
							state = 3;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var1_box);
							pos++;
							return true;
						case 3:
							state = 4;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var3_box);
							pos++;
							return true;
						case 4:
							state = 5;
							var5_commonData = (closure.var2_commonData).GetEnumerator();
							goto case 5;
						case 5:
							state = 7;
							if (!var5_commonData.MoveNext()) { state = 6; goto case 6; }
							var6_dTimLastChange = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTimLastChange", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var5_commonData.Current))).GetEnumerator();
							goto case 7;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_commonData); var5_commonData = null;
							return false;
						case 7:
							state = 7;
							if (!var6_dTimLastChange.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_dTimLastChange.Current))))));
							pos++;
							return true;
						case 8:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var6_dTimLastChange); var6_dTimLastChange = null;
							goto case 5;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var6_dTimLastChange); var6_dTimLastChange = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_commonData); var5_commonData = null;
				}
			}
		}
		class seq8_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq8_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq8_seq_ closure;
				public Enumerator(seq8_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}DepthIndexValue")));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Depth", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)))));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq9_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq9_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq9_seq_ closure;
				public Enumerator(seq9_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}TimeIndexValue")));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Time", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString(closure.var1_cur)))));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq10_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq10_seq_(
				Altova.Mapforce.IMFNode var1_create_element_qname,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_create_element_qname = var1_create_element_qname;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq10_seq_ closure;
				public Enumerator(seq10_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ContentType", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("wellbore"));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nameWellbore", "http://www.witsml.org/schemas/1series"), closure.var2_cur)))));
							pos++;
							return true;
						case 3:
							state = 0;
							current = closure.var1_create_element_qname;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq11_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_box;
			private readonly System.Collections.IEnumerable var2_box;
			private readonly Altova.Mapforce.IMFNode var3_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var4_create_element_qname;
			private readonly System.Collections.IEnumerable var5_join;
			private readonly System.Collections.IEnumerable var6_join;
			private readonly System.Collections.IEnumerable var7_box;
			private readonly System.Collections.IEnumerable var8_serviceCompany;
			private readonly System.Collections.IEnumerable var9_logCurveInfo;
			private readonly Altova.Mapforce.IMFNode var10_create_attribute_qname;
			private readonly Altova.Mapforce.IMFNode var11_create_attribute_qname;
			private readonly System.Collections.IEnumerable var12_indexType;
			private readonly System.Collections.IEnumerable var13_box;
			private readonly System.Collections.IEnumerable var14_startIndex;
			private readonly System.Collections.IEnumerable var15_box;
			private readonly Altova.Mapforce.IMFNode var16_cur;

			public seq11_join(
				System.Collections.IEnumerable var1_box,
				System.Collections.IEnumerable var2_box,
				Altova.Mapforce.IMFNode var3_create_element_qname,
				Altova.Mapforce.IMFNode var4_create_element_qname,
				System.Collections.IEnumerable var5_join,
				System.Collections.IEnumerable var6_join,
				System.Collections.IEnumerable var7_box,
				System.Collections.IEnumerable var8_serviceCompany,
				System.Collections.IEnumerable var9_logCurveInfo,
				Altova.Mapforce.IMFNode var10_create_attribute_qname,
				Altova.Mapforce.IMFNode var11_create_attribute_qname,
				System.Collections.IEnumerable var12_indexType,
				System.Collections.IEnumerable var13_box,
				System.Collections.IEnumerable var14_startIndex,
				System.Collections.IEnumerable var15_box,
				Altova.Mapforce.IMFNode var16_cur
			)
			{
				this.var1_box = var1_box;
				this.var2_box = var2_box;
				this.var3_create_element_qname = var3_create_element_qname;
				this.var4_create_element_qname = var4_create_element_qname;
				this.var5_join = var5_join;
				this.var6_join = var6_join;
				this.var7_box = var7_box;
				this.var8_serviceCompany = var8_serviceCompany;
				this.var9_logCurveInfo = var9_logCurveInfo;
				this.var10_create_attribute_qname = var10_create_attribute_qname;
				this.var11_create_attribute_qname = var11_create_attribute_qname;
				this.var12_indexType = var12_indexType;
				this.var13_box = var13_box;
				this.var14_startIndex = var14_startIndex;
				this.var15_box = var15_box;
				this.var16_cur = var16_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq11_join closure;
				private IEnumerator var17_join;
				private IEnumerator var18_logCurveInfo;
				private System.Collections.IEnumerable var19_box;
				private System.Collections.IEnumerable var20_unit;
				private System.Collections.IEnumerable var21_box;
				public Enumerator(seq11_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = closure.var11_create_attribute_qname;
							pos++;
							return true;
						case 2:
							state = 3;
							current = closure.var10_create_attribute_qname;
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), (new seq12_join(closure.var1_box, closure.var6_join, closure.var13_box, closure.var15_box)));
							pos++;
							return true;
						case 4:
							state = 5;
							var17_join = (closure.var5_join).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var17_join.MoveNext()) { state = 6; goto case 6; }
							current = var17_join.Current;
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var17_join); var17_join = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Index", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq13_join(closure.var9_logCurveInfo, closure.var12_indexType, closure.var14_startIndex, closure.var16_cur)));
							pos++;
							return true;
						case 8:
							state = 9;
							var18_logCurveInfo = (closure.var9_logCurveInfo).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var18_logCurveInfo.MoveNext()) { state = 10; goto case 10; }
							var19_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box("m"));
							var20_unit = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("unit", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var18_logCurveInfo.Current)));
							var21_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mnemonic", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var18_logCurveInfo.Current))))));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Channel", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq15_join((Altova.Mapforce.IMFNode)(var18_logCurveInfo.Current), closure.var1_box, closure.var2_box, closure.var3_create_element_qname, closure.var4_create_element_qname, closure.var6_join, closure.var7_box, closure.var8_serviceCompany, closure.var10_create_attribute_qname, closure.var11_create_attribute_qname, closure.var13_box, var20_unit, var21_box, var19_box, closure.var16_cur)));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var18_logCurveInfo); var18_logCurveInfo = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Data", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq24_map(closure.var16_cur)));
							pos++;
							return true;
						case 12:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DataContext", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq26_seq_(closure.var2_box, closure.var3_create_element_qname, closure.var4_create_element_qname)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var17_join); var17_join = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_logCurveInfo); var18_logCurveInfo = null;
				}
			}
		}
		class seq12_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_box;
			private readonly System.Collections.IEnumerable var2_join;
			private readonly System.Collections.IEnumerable var3_box;
			private readonly System.Collections.IEnumerable var4_box;

			public seq12_join(
				System.Collections.IEnumerable var1_box,
				System.Collections.IEnumerable var2_join,
				System.Collections.IEnumerable var3_box,
				System.Collections.IEnumerable var4_box
			)
			{
				this.var1_box = var1_box;
				this.var2_join = var2_join;
				this.var3_box = var3_box;
				this.var4_box = var4_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq12_join closure;
				private IEnumerator var5_join;
				public Enumerator(seq12_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var4_box);
							pos++;
							return true;
						case 2:
							state = 3;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var1_box);
							pos++;
							return true;
						case 3:
							state = 4;
							var5_join = (closure.var2_join).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var5_join.MoveNext()) { state = 5; goto case 5; }
							current = var5_join.Current;
							pos++;
							return true;
						case 5:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_join); var5_join = null;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var3_box);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_join); var5_join = null;
				}
			}
		}
		class seq13_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_logCurveInfo;
			private readonly System.Collections.IEnumerable var2_indexType;
			private readonly System.Collections.IEnumerable var3_startIndex;
			private readonly Altova.Mapforce.IMFNode var4_cur;

			public seq13_join(
				System.Collections.IEnumerable var1_logCurveInfo,
				System.Collections.IEnumerable var2_indexType,
				System.Collections.IEnumerable var3_startIndex,
				Altova.Mapforce.IMFNode var4_cur
			)
			{
				this.var1_logCurveInfo = var1_logCurveInfo;
				this.var2_indexType = var2_indexType;
				this.var3_startIndex = var3_startIndex;
				this.var4_cur = var4_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq13_join closure;
				private IEnumerator var5_indexType;
				private IEnumerator var6_if_exists;
				private IEnumerator var7_direction;
				private IEnumerator var8_indexType;
				private IEnumerator var9_logCurveInfo;
				private IEnumerator var10_wellDatum;
				public Enumerator(seq13_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var5_indexType = (closure.var2_indexType).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var5_indexType.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("IndexType", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_indexType.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var5_indexType); var5_indexType = null;
							var6_if_exists = ((new seq14_if_exists(closure.var3_startIndex))).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var6_if_exists.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Uom", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box((string)(var6_if_exists.Current)));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var6_if_exists); var6_if_exists = null;
							var7_direction = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("direction", "http://www.witsml.org/schemas/1series"), closure.var4_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var7_direction.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Direction", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_direction.Current))));
							pos++;
							return true;
						case 9:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var7_direction); var7_direction = null;
							var8_indexType = (closure.var2_indexType).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var8_indexType.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Mnemonic", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_indexType.Current))));
							pos++;
							return true;
						case 12:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var8_indexType); var8_indexType = null;
							var9_logCurveInfo = (closure.var1_logCurveInfo).GetEnumerator();
							goto case 14;
						case 14:
							state = 16;
							if (!var9_logCurveInfo.MoveNext()) { state = 15; goto case 15; }
							var10_wellDatum = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wellDatum", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var9_logCurveInfo.Current))).GetEnumerator();
							goto case 16;
						case 15:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var9_logCurveInfo); var9_logCurveInfo = null;
							return false;
						case 16:
							state = 16;
							if (!var10_wellDatum.MoveNext()) { state = 17; goto case 17; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DatumReference", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var10_wellDatum.Current))));
							pos++;
							return true;
						case 17:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var10_wellDatum); var10_wellDatum = null;
							goto case 14;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_indexType); var5_indexType = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_if_exists); var6_if_exists = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_direction); var7_direction = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_indexType); var8_indexType = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_wellDatum); var10_wellDatum = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_logCurveInfo); var9_logCurveInfo = null;
				}
			}
		}
		class seq14_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_startIndex;

			public seq14_if_exists(
				System.Collections.IEnumerable var1_startIndex
			)
			{
				this.var1_startIndex = var1_startIndex;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq14_if_exists closure;
				private IEnumerator var2_startIndex;
				public Enumerator(seq14_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_startIndex))) { state = 2; goto case 2;  }
							var2_startIndex = (closure.var1_startIndex).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = "m";
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var2_startIndex.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)(var2_startIndex.Current))));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_startIndex); var2_startIndex = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_startIndex); var2_startIndex = null;
				}
			}
		}
		class seq15_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_box;
			private readonly System.Collections.IEnumerable var3_box;
			private readonly Altova.Mapforce.IMFNode var4_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var5_create_element_qname;
			private readonly System.Collections.IEnumerable var6_join;
			private readonly System.Collections.IEnumerable var7_box;
			private readonly System.Collections.IEnumerable var8_serviceCompany;
			private readonly Altova.Mapforce.IMFNode var9_create_attribute_qname;
			private readonly Altova.Mapforce.IMFNode var10_create_attribute_qname;
			private readonly System.Collections.IEnumerable var11_box;
			private readonly System.Collections.IEnumerable var12_unit;
			private readonly System.Collections.IEnumerable var13_box;
			private readonly System.Collections.IEnumerable var14_box;
			private readonly Altova.Mapforce.IMFNode var15_cur;

			public seq15_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_box,
				System.Collections.IEnumerable var3_box,
				Altova.Mapforce.IMFNode var4_create_element_qname,
				Altova.Mapforce.IMFNode var5_create_element_qname,
				System.Collections.IEnumerable var6_join,
				System.Collections.IEnumerable var7_box,
				System.Collections.IEnumerable var8_serviceCompany,
				Altova.Mapforce.IMFNode var9_create_attribute_qname,
				Altova.Mapforce.IMFNode var10_create_attribute_qname,
				System.Collections.IEnumerable var11_box,
				System.Collections.IEnumerable var12_unit,
				System.Collections.IEnumerable var13_box,
				System.Collections.IEnumerable var14_box,
				Altova.Mapforce.IMFNode var15_cur
			)
			{
				this.var1_cur = var1_cur;
				this.var2_box = var2_box;
				this.var3_box = var3_box;
				this.var4_create_element_qname = var4_create_element_qname;
				this.var5_create_element_qname = var5_create_element_qname;
				this.var6_join = var6_join;
				this.var7_box = var7_box;
				this.var8_serviceCompany = var8_serviceCompany;
				this.var9_create_attribute_qname = var9_create_attribute_qname;
				this.var10_create_attribute_qname = var10_create_attribute_qname;
				this.var11_box = var11_box;
				this.var12_unit = var12_unit;
				this.var13_box = var13_box;
				this.var14_box = var14_box;
				this.var15_cur = var15_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq15_join closure;
				private Altova.Mapforce.IMFNode var16_typeLogData;
				private IEnumerator var17_if_exists;
				private IEnumerator var18_dataSource;
				private IEnumerator var19_bhaRunNumber;
				private IEnumerator var20_minIndex;
				private IEnumerator var21_minDateTimeIndex;
				private IEnumerator var22_maxIndex;
				private IEnumerator var23_maxDateTimeIndex;
				private IEnumerator var24_if_exists;
				public Enumerator(seq15_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = closure.var10_create_attribute_qname;
							pos++;
							return true;
						case 2:
							state = 3;
							current = closure.var9_create_attribute_qname;
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Aliases", "http://www.energistics.org/energyml/data/commonv2"), (new seq16_join(closure.var1_cur)));
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), (new seq17_join(closure.var2_box, closure.var6_join, closure.var11_box, closure.var13_box)));
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Mnemonic", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var13_box);
							pos++;
							return true;
						case 6:
							state = 7;
							var16_typeLogData = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("typeLogData", "http://www.witsml.org/schemas/1series"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DataType", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq18_cast(var16_typeLogData)))));
							pos++;
							return true;
						case 7:
							state = 8;
							var17_if_exists = ((new seq19_if_exists(closure.var12_unit))).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var17_if_exists.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Uom", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box((string)(var17_if_exists.Current)));
							pos++;
							return true;
						case 9:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var17_if_exists); var17_if_exists = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GrowingStatus", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("active"));
							pos++;
							return true;
						case 11:
							state = 12;
							var18_dataSource = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dataSource", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var18_dataSource.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Source", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var18_dataSource.Current))));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var18_dataSource); var18_dataSource = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TimeDepth", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("time"));
							pos++;
							return true;
						case 15:
							state = 16;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ChannelClass", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq20_seq_(closure.var4_create_element_qname, closure.var5_create_element_qname)));
							pos++;
							return true;
						case 16:
							state = 17;
							var19_bhaRunNumber = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("bhaRunNumber", "http://www.witsml.org/schemas/1series"), closure.var15_cur)).GetEnumerator();
							goto case 17;
						case 17:
							state = 17;
							if (!var19_bhaRunNumber.MoveNext()) { state = 18; goto case 18; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("RunNumber", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var19_bhaRunNumber.Current))))))))));
							pos++;
							return true;
						case 18:
							state = 20;
							Altova.Mapforce.MFEnumerator.Dispose(var19_bhaRunNumber); var19_bhaRunNumber = null;
							var20_minIndex = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("minIndex", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 20;
						case 20:
							state = 20;
							if (!var20_minIndex.MoveNext()) { state = 21; goto case 21; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("StartIndex", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq8_seq_((Altova.Mapforce.IMFNode)(var20_minIndex.Current))));
							pos++;
							return true;
						case 21:
							state = 23;
							Altova.Mapforce.MFEnumerator.Dispose(var20_minIndex); var20_minIndex = null;
							var21_minDateTimeIndex = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("minDateTimeIndex", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 23;
						case 23:
							state = 23;
							if (!var21_minDateTimeIndex.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("StartIndex", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq9_seq_((Altova.Mapforce.IMFNode)(var21_minDateTimeIndex.Current))));
							pos++;
							return true;
						case 24:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var21_minDateTimeIndex); var21_minDateTimeIndex = null;
							var22_maxIndex = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("maxIndex", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 26;
						case 26:
							state = 26;
							if (!var22_maxIndex.MoveNext()) { state = 27; goto case 27; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EndIndex", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq8_seq_((Altova.Mapforce.IMFNode)(var22_maxIndex.Current))));
							pos++;
							return true;
						case 27:
							state = 29;
							Altova.Mapforce.MFEnumerator.Dispose(var22_maxIndex); var22_maxIndex = null;
							var23_maxDateTimeIndex = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("maxDateTimeIndex", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 29;
						case 29:
							state = 29;
							if (!var23_maxDateTimeIndex.MoveNext()) { state = 30; goto case 30; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EndIndex", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq9_seq_((Altova.Mapforce.IMFNode)(var23_maxDateTimeIndex.Current))));
							pos++;
							return true;
						case 30:
							state = 32;
							Altova.Mapforce.MFEnumerator.Dispose(var23_maxDateTimeIndex); var23_maxDateTimeIndex = null;
							var24_if_exists = ((new seq21_if_exists(closure.var8_serviceCompany))).GetEnumerator();
							goto case 32;
						case 32:
							state = 32;
							if (!var24_if_exists.MoveNext()) { state = 33; goto case 33; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("LoggingCompanyName", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box((string)(var24_if_exists.Current)));
							pos++;
							return true;
						case 33:
							state = 35;
							Altova.Mapforce.MFEnumerator.Dispose(var24_if_exists); var24_if_exists = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Derivation", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("raw"));
							pos++;
							return true;
						case 35:
							state = 36;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var7_box);
							pos++;
							return true;
						case 36:
							state = 37;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NominalHoleSize", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq22_seq_(closure.var14_box)));
							pos++;
							return true;
						case 37:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Index", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq23_seq_(closure.var3_box, closure.var14_box)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var17_if_exists); var17_if_exists = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_dataSource); var18_dataSource = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_bhaRunNumber); var19_bhaRunNumber = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_minIndex); var20_minIndex = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_minDateTimeIndex); var21_minDateTimeIndex = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_maxIndex); var22_maxIndex = null;
					Altova.Mapforce.MFEnumerator.Dispose(var23_maxDateTimeIndex); var23_maxDateTimeIndex = null;
					Altova.Mapforce.MFEnumerator.Dispose(var24_if_exists); var24_if_exists = null;
				}
			}
		}
		class seq16_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq16_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq16_join closure;
				private IEnumerator var2_uid;
				public Enumerator(seq16_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("authority", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Identifier", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Identifier for this channel"));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
				}
			}
		}
		class seq17_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_box;
			private readonly System.Collections.IEnumerable var2_join;
			private readonly System.Collections.IEnumerable var3_box;
			private readonly System.Collections.IEnumerable var4_box;

			public seq17_join(
				System.Collections.IEnumerable var1_box,
				System.Collections.IEnumerable var2_join,
				System.Collections.IEnumerable var3_box,
				System.Collections.IEnumerable var4_box
			)
			{
				this.var1_box = var1_box;
				this.var2_join = var2_join;
				this.var3_box = var3_box;
				this.var4_box = var4_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq17_join closure;
				private IEnumerator var5_join;
				public Enumerator(seq17_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), closure.var4_box);
							pos++;
							return true;
						case 2:
							state = 3;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var1_box);
							pos++;
							return true;
						case 3:
							state = 4;
							var5_join = (closure.var2_join).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var5_join.MoveNext()) { state = 5; goto case 5; }
							current = var5_join.Current;
							pos++;
							return true;
						case 5:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_join); var5_join = null;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var3_box);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_join); var5_join = null;
				}
			}
		}
		class seq18_cast : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq18_cast(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq18_cast closure;
				private string var2_cast;
				public Enumerator(seq18_cast closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							var2_cast = (Altova.CoreTypes.NodeToString(closure.var1_cur));
							if (!((var2_cast) == ("date time"))) { state = 2; goto case 2;  }
							current = "string";
							pos++;
							return true;
						case 2:
							state = 0;
							current = var2_cast;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq19_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_unit;

			public seq19_if_exists(
				System.Collections.IEnumerable var1_unit
			)
			{
				this.var1_unit = var1_unit;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq19_if_exists closure;
				private IEnumerator var2_unit;
				public Enumerator(seq19_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_unit))) { state = 2; goto case 2;  }
							var2_unit = (closure.var1_unit).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = "WITSML:Unitless";
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var2_unit.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_unit.Current));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_unit); var2_unit = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_unit); var2_unit = null;
				}
			}
		}
		class seq20_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;

			public seq20_seq_(
				Altova.Mapforce.IMFNode var1_create_element_qname,
				Altova.Mapforce.IMFNode var2_create_element_qname
			)
			{
				this.var1_create_element_qname = var1_create_element_qname;
				this.var2_create_element_qname = var2_create_element_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq20_seq_ closure;
				public Enumerator(seq20_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = closure.var1_create_element_qname;
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("title"));
							pos++;
							return true;
						case 3:
							state = 0;
							current = closure.var2_create_element_qname;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq21_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_serviceCompany;

			public seq21_if_exists(
				System.Collections.IEnumerable var1_serviceCompany
			)
			{
				this.var1_serviceCompany = var1_serviceCompany;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq21_if_exists closure;
				private IEnumerator var2_serviceCompany;
				public Enumerator(seq21_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_serviceCompany))) { state = 2; goto case 2;  }
							var2_serviceCompany = (closure.var1_serviceCompany).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = "unknown";
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var2_serviceCompany.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_serviceCompany.Current));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_serviceCompany); var2_serviceCompany = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_serviceCompany); var2_serviceCompany = null;
				}
			}
		}
		class seq22_seq_ : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_box;

			public seq22_seq_(
				System.Collections.IEnumerable var1_box
			)
			{
				this.var1_box = var1_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq22_seq_ closure;
				public Enumerator(seq22_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), closure.var1_box);
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble("-999"));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq23_seq_ : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_box;
			private readonly System.Collections.IEnumerable var2_box;

			public seq23_seq_(
				System.Collections.IEnumerable var1_box,
				System.Collections.IEnumerable var2_box
			)
			{
				this.var1_box = var1_box;
				this.var2_box = var2_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq23_seq_ closure;
				public Enumerator(seq23_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("IndexType", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("measured depth"));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Uom", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var2_box);
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Direction", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("decreasing"));
							pos++;
							return true;
						case 4:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Mnemonic", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_box);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq24_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq24_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq24_map closure;
				private IEnumerator var2_logData;
				public Enumerator(seq24_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_logData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("logData", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_logData.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Data", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq25_seq_()));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_logData); var2_logData = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_logData); var2_logData = null;
				}
			}
		}
		class seq25_seq_ : IEnumerable
		{

			public seq25_seq_(
			)
			{
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq25_seq_ closure;
				public Enumerator(seq25_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq26_seq_ : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_box;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var3_create_element_qname;

			public seq26_seq_(
				System.Collections.IEnumerable var1_box,
				Altova.Mapforce.IMFNode var2_create_element_qname,
				Altova.Mapforce.IMFNode var3_create_element_qname
			)
			{
				this.var1_box = var1_box;
				this.var2_create_element_qname = var2_create_element_qname;
				this.var3_create_element_qname = var3_create_element_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq26_seq_ closure;
				public Enumerator(seq26_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}ChannelValueContext")));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ChannelReference", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq27_seq_(closure.var1_box, closure.var2_create_element_qname, closure.var3_create_element_qname)));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DataValue", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("-999"));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq27_seq_ : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_box;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var3_create_element_qname;

			public seq27_seq_(
				System.Collections.IEnumerable var1_box,
				Altova.Mapforce.IMFNode var2_create_element_qname,
				Altova.Mapforce.IMFNode var3_create_element_qname
			)
			{
				this.var1_box = var1_box;
				this.var2_create_element_qname = var2_create_element_qname;
				this.var3_create_element_qname = var3_create_element_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq27_seq_ closure;
				public Enumerator(seq27_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = closure.var2_create_element_qname;
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_box);
							pos++;
							return true;
						case 3:
							state = 0;
							current = closure.var3_create_element_qname;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_log_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_obj_log_Instance
			)
			{
				this.var1_obj_log_Instance = var1_obj_log_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_logs;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_logs = ((new main(closure.var1_obj_log_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_logs.MoveNext()) { state = 3; goto case 3; }
							current = var2_logs.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_logs); var2_logs = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_logs); var2_logs = null;
				}
			}
		}

	}
}
