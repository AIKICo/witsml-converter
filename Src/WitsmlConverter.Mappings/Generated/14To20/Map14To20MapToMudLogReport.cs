////////////////////////////////////////////////////////////////////////
//
// Map14To20MapToMudLogReport.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map14To20
{

	public class Map14To20MapToMudLogReport : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_obj_mudLog2Instance;
		// members
		#endregion //Members


		public void Run(String obj_mudLog2SourceFilename, string MudLogReport2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input obj_mudLog2Source = new Altova.IO.FileInput(obj_mudLog2SourceFilename))
			// open target stream
			using (Altova.IO.Output MudLogReport2Target = new Altova.IO.FileOutput(MudLogReport2TargetFilename))
			{
				// run
				Run(obj_mudLog2Source, MudLogReport2Target);
			}
		}

		public void Run(Altova.IO.Input obj_mudLog2Source, Altova.IO.Output MudLogReport2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + obj_mudLog2Source.Filename + "...\n");
			XmlDocument obj_mudLog2DocSourceObject = XmlTreeOperations.LoadDocument(obj_mudLog2Source);


			m_obj_mudLog2Instance = obj_mudLog2DocSourceObject;
			if (runDoesCloseAll)
				obj_mudLog2Source.Close();
				// Create the target
				XmlDocument MudLogReport2Doc = (MudLogReport2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? MudLogReport2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_obj_mudLog2Instance, obj_mudLog2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, MudLogReport2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				MudLogReport2Doc,
				MudLogReport2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					obj_mudLog2Source.Close();
					MudLogReport2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_mudLog_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_obj_mudLog_Instance
			)
			{
				this.var1_obj_mudLog_Instance = var1_obj_mudLog_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_first_items;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_first_items = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FirstItems((new seq1_join(closure.var1_obj_mudLog_Instance)), 1m));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MudLogReport", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq2_join(var2_first_items)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_mudLog_Instance;

			public seq1_join(
				Altova.Mapforce.IMFNode var1_obj_mudLog_Instance
			)
			{
				this.var1_obj_mudLog_Instance = var1_obj_mudLog_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_mudLogs;
				private IEnumerator var3_mudLog;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_mudLogs = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mudLogs", "http://www.witsml.org/schemas/1series"), closure.var1_obj_mudLog_Instance)).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_mudLogs.MoveNext()) { state = 3; goto case 3; }
							var3_mudLog = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mudLog", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_mudLogs.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_mudLogs); var2_mudLogs = null;
							return false;
						case 4:
							state = 4;
							if (!var3_mudLog.MoveNext()) { state = 5; goto case 5; }
							current = var3_mudLog.Current;
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_mudLog); var3_mudLog = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_mudLog); var3_mudLog = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_mudLogs); var2_mudLogs = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_first_items;

			public seq2_join(
				System.Collections.IEnumerable var1_first_items
			)
			{
				this.var1_first_items = var1_first_items;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var2_first_items;
				private IEnumerator var3_first_items;
				private System.Collections.IEnumerable var4_box;
				private Altova.Mapforce.IMFNode var5_create_element_qname;
				private System.Collections.IEnumerable var6_endMd;
				private Altova.Mapforce.IMFNode var7_create_attribute_qname;
				private Altova.Mapforce.IMFNode var8_create_element_qname;
				private Altova.Mapforce.IMFNode var9_create_element_qname;
				private System.Collections.IEnumerable var10_startMd;
				private IEnumerator var11_customData;
				private IEnumerator var12_mudLogCompany;
				private IEnumerator var13_mudLogEngineers;
				private IEnumerator var14_geologyInterval;
				private System.Collections.IEnumerable var15_box;
				private System.Collections.IEnumerable var16_uid;
				private IEnumerator var17_parameter;
				private System.Collections.IEnumerable var18_force;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("eml", "http://www.energistics.org/energyml/data/commonv2");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateNamespace("gco", "http://www.isotc211.org/2005/gco");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateNamespace("gmd", "http://www.isotc211.org/2005/gmd");
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateNamespace("gsr", "http://www.isotc211.org/2005/gsr");
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateNamespace("gts", "http://www.isotc211.org/2005/gts");
							pos++;
							return true;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateNamespace("gml", "http://www.opengis.net/gml/3.2");
							pos++;
							return true;
						case 7:
							state = 8;
							current = Altova.Functions.Core.CreateNamespace("xlink", "http://www.w3.org/1999/xlink");
							pos++;
							return true;
						case 8:
							state = 9;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.energistics.org/energyml/data/witsmlv2 file:///D:/Repos/witsmlvalidation/witsml/energyml/2.0/data/witsml/v2.0/xsd_schemas/MudLogReport.xsd"));
							pos++;
							return true;
						case 9:
							state = 10;
							var2_first_items = (closure.var1_first_items).GetEnumerator();
							goto case 10;
						case 10:
							state = 12;
							if (!var2_first_items.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("schemaVersion", ""), Altova.Functions.Core.Box("2.0"));
							pos++;
							return true;
						case 11:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var2_first_items); var2_first_items = null;
							var3_first_items = (closure.var1_first_items).GetEnumerator();
							goto case 14;
						case 12:
							state = 10;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uuid", ""), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 14:
							state = 16;
							if (!var3_first_items.MoveNext()) { state = 15; goto case 15; }
							var4_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box("1411_input"));
							var5_create_element_qname = (Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Format", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Mapforce")));
							var6_endMd = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("endMd", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_first_items.Current)));
							var7_create_attribute_qname = (Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("datum", ""), Altova.Functions.Core.Box("unknown")));
							var8_create_element_qname = (Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Uuid", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000")));
							var9_create_element_qname = (Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Originator", "http://www.energistics.org/energyml/data/commonv2"), var4_box));
							var10_startMd = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("startMd", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_first_items.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Aliases", "http://www.energistics.org/energyml/data/commonv2"), (new seq3_join((Altova.Mapforce.IMFNode)(var3_first_items.Current), var4_box)));
							pos++;
							return true;
						case 15:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
							return false;
						case 16:
							state = 17;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), (new seq4_seq_((Altova.Mapforce.IMFNode)(var3_first_items.Current), var5_create_element_qname, var9_create_element_qname)));
							pos++;
							return true;
						case 17:
							state = 18;
							var11_customData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_first_items.Current))).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var11_customData.MoveNext()) { state = 19; goto case 19; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:CustomData", "http://www.energistics.org/energyml/data/commonv2"), tbf.tbf1_CustomData.Eval((Altova.Mapforce.IMFNode)(var11_customData.Current)));
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var11_customData); var11_customData = null;
							var12_mudLogCompany = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mudLogCompany", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_first_items.Current))).GetEnumerator();
							goto case 21;
						case 21:
							state = 21;
							if (!var12_mudLogCompany.MoveNext()) { state = 22; goto case 22; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MudLogCompany", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var12_mudLogCompany.Current))));
							pos++;
							return true;
						case 22:
							state = 24;
							Altova.Mapforce.MFEnumerator.Dispose(var12_mudLogCompany); var12_mudLogCompany = null;
							var13_mudLogEngineers = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mudLogEngineers", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_first_items.Current))).GetEnumerator();
							goto case 24;
						case 24:
							state = 24;
							if (!var13_mudLogEngineers.MoveNext()) { state = 25; goto case 25; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MudLogEngineers", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_mudLogEngineers.Current))));
							pos++;
							return true;
						case 25:
							state = 27;
							Altova.Mapforce.MFEnumerator.Dispose(var13_mudLogEngineers); var13_mudLogEngineers = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ReportMdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_join(var7_create_attribute_qname, var6_endMd, var10_startMd)));
							pos++;
							return true;
						case 27:
							state = 28;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GrowingStatus", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("active"));
							pos++;
							return true;
						case 28:
							state = 29;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq12_seq_((Altova.Mapforce.IMFNode)(var3_first_items.Current), var8_create_element_qname)));
							pos++;
							return true;
						case 29:
							state = 30;
							var14_geologyInterval = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("geologyInterval", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_first_items.Current))).GetEnumerator();
							goto case 30;
						case 30:
							state = 30;
							if (!var14_geologyInterval.MoveNext()) { state = 31; goto case 31; }
							var15_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box("GeologyInterval"));
							var16_uid = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), (Altova.Mapforce.IMFNode)(var14_geologyInterval.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MudlogIntervals", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq13_join(var7_create_attribute_qname, (Altova.Mapforce.IMFNode)(var14_geologyInterval.Current), var8_create_element_qname, var15_box, var16_uid)));
							pos++;
							return true;
						case 31:
							state = 33;
							Altova.Mapforce.MFEnumerator.Dispose(var14_geologyInterval); var14_geologyInterval = null;
							var17_parameter = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("parameter", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_first_items.Current))).GetEnumerator();
							goto case 33;
						case 33:
							state = 33;
							if (!var17_parameter.MoveNext()) { state = 34; goto case 34; }
							var18_force = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("force", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var17_parameter.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Parameter", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq36_join(var7_create_attribute_qname, var5_create_element_qname, var9_create_element_qname, var18_force, (Altova.Mapforce.IMFNode)(var17_parameter.Current))));
							pos++;
							return true;
						case 34:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var17_parameter); var17_parameter = null;
							goto case 14;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_first_items); var2_first_items = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_customData); var11_customData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_mudLogCompany); var12_mudLogCompany = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_mudLogEngineers); var13_mudLogEngineers = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_geologyInterval); var14_geologyInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_parameter); var17_parameter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
				}
			}
		}
		class seq3_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_box;

			public seq3_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_box
			)
			{
				this.var1_cur = var1_cur;
				this.var2_box = var2_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_join closure;
				private IEnumerator var3_uid;
				public Enumerator(seq3_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("authority", ""), closure.var2_box);
							pos++;
							return true;
						case 2:
							state = 3;
							var3_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var3_uid.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Identifier", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_uid.Current))));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_uid); var3_uid = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_uid); var3_uid = null;
				}
			}
		}
		class seq4_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var3_create_element_qname;

			public seq4_seq_(
				Altova.Mapforce.IMFNode var1_cur,
				Altova.Mapforce.IMFNode var2_create_element_qname,
				Altova.Mapforce.IMFNode var3_create_element_qname
			)
			{
				this.var1_cur = var1_cur;
				this.var2_create_element_qname = var2_create_element_qname;
				this.var3_create_element_qname = var3_create_element_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_seq_ closure;
				public Enumerator(seq4_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = closure.var3_create_element_qname;
							pos++;
							return true;
						case 3:
							state = 0;
							current = closure.var2_create_element_qname;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq5_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_create_attribute_qname;
			private readonly System.Collections.IEnumerable var2_endMd;
			private readonly System.Collections.IEnumerable var3_startMd;

			public seq5_join(
				Altova.Mapforce.IMFNode var1_create_attribute_qname,
				System.Collections.IEnumerable var2_endMd,
				System.Collections.IEnumerable var3_startMd
			)
			{
				this.var1_create_attribute_qname = var1_create_attribute_qname;
				this.var2_endMd = var2_endMd;
				this.var3_startMd = var3_startMd;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_join closure;
				private IEnumerator var4_if_exists;
				private IEnumerator var5_if_exists;
				public Enumerator(seq5_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = closure.var1_create_attribute_qname;
							pos++;
							return true;
						case 2:
							state = 3;
							var4_if_exists = ((new seq6_if_exists(closure.var3_startMd))).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var4_if_exists.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdTop", "http://www.energistics.org/energyml/data/commonv2"), (new seq7_join((double)(var4_if_exists.Current), closure.var3_startMd)));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var4_if_exists); var4_if_exists = null;
							var5_if_exists = ((new seq9_if_exists(closure.var2_endMd))).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var5_if_exists.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdBase", "http://www.energistics.org/energyml/data/commonv2"), (new seq10_join((double)(var5_if_exists.Current), closure.var2_endMd)));
							pos++;
							return true;
						case 7:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_if_exists); var5_if_exists = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_if_exists); var4_if_exists = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_if_exists); var5_if_exists = null;
				}
			}
		}
		class seq6_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_startMd;

			public seq6_if_exists(
				System.Collections.IEnumerable var1_startMd
			)
			{
				this.var1_startMd = var1_startMd;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_if_exists closure;
				private IEnumerator var2_startMd;
				public Enumerator(seq6_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_startMd))) { state = 2; goto case 2;  }
							var2_startMd = (closure.var1_startMd).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DecimalToDouble(1m);
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var2_startMd.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_startMd.Current)));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_startMd); var2_startMd = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_startMd); var2_startMd = null;
				}
			}
		}
		class seq7_join : IEnumerable
		{
			private readonly double var1_cur;
			private readonly System.Collections.IEnumerable var2_startMd;

			public seq7_join(
				double var1_cur,
				System.Collections.IEnumerable var2_startMd
			)
			{
				this.var1_cur = var1_cur;
				this.var2_startMd = var2_startMd;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_join closure;
				private IEnumerator var3_if_exists;
				public Enumerator(seq7_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_if_exists = ((new seq8_if_exists(closure.var2_startMd))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_if_exists.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box((string)(var3_if_exists.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_if_exists); var3_if_exists = null;
							current = Altova.CoreTypes.DoubleToString(closure.var1_cur);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_if_exists); var3_if_exists = null;
				}
			}
		}
		class seq8_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_startMd;

			public seq8_if_exists(
				System.Collections.IEnumerable var1_startMd
			)
			{
				this.var1_startMd = var1_startMd;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq8_if_exists closure;
				private IEnumerator var2_startMd;
				public Enumerator(seq8_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_startMd))) { state = 2; goto case 2;  }
							var2_startMd = (closure.var1_startMd).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = "ft";
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var2_startMd.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)(var2_startMd.Current))));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_startMd); var2_startMd = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_startMd); var2_startMd = null;
				}
			}
		}
		class seq9_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_endMd;

			public seq9_if_exists(
				System.Collections.IEnumerable var1_endMd
			)
			{
				this.var1_endMd = var1_endMd;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq9_if_exists closure;
				private IEnumerator var2_endMd;
				public Enumerator(seq9_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_endMd))) { state = 2; goto case 2;  }
							var2_endMd = (closure.var1_endMd).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DecimalToDouble(1m);
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var2_endMd.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_endMd.Current)));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_endMd); var2_endMd = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_endMd); var2_endMd = null;
				}
			}
		}
		class seq10_join : IEnumerable
		{
			private readonly double var1_cur;
			private readonly System.Collections.IEnumerable var2_endMd;

			public seq10_join(
				double var1_cur,
				System.Collections.IEnumerable var2_endMd
			)
			{
				this.var1_cur = var1_cur;
				this.var2_endMd = var2_endMd;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq10_join closure;
				private IEnumerator var3_if_exists;
				public Enumerator(seq10_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_if_exists = ((new seq11_if_exists(closure.var2_endMd))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_if_exists.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box((string)(var3_if_exists.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_if_exists); var3_if_exists = null;
							current = Altova.CoreTypes.DoubleToString(closure.var1_cur);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_if_exists); var3_if_exists = null;
				}
			}
		}
		class seq11_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_endMd;

			public seq11_if_exists(
				System.Collections.IEnumerable var1_endMd
			)
			{
				this.var1_endMd = var1_endMd;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq11_if_exists closure;
				private IEnumerator var2_endMd;
				public Enumerator(seq11_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_endMd))) { state = 2; goto case 2;  }
							var2_endMd = (closure.var1_endMd).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = "ft";
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var2_endMd.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)(var2_endMd.Current))));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_endMd); var2_endMd = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_endMd); var2_endMd = null;
				}
			}
		}
		class seq12_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;

			public seq12_seq_(
				Altova.Mapforce.IMFNode var1_cur,
				Altova.Mapforce.IMFNode var2_create_element_qname
			)
			{
				this.var1_cur = var1_cur;
				this.var2_create_element_qname = var2_create_element_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq12_seq_ closure;
				public Enumerator(seq12_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ContentType", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("obj_wellbore"));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nameWellbore", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 0;
							current = closure.var2_create_element_qname;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq13_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_create_attribute_qname;
			private readonly Altova.Mapforce.IMFNode var2_cur;
			private readonly Altova.Mapforce.IMFNode var3_create_element_qname;
			private readonly System.Collections.IEnumerable var4_box;
			private readonly System.Collections.IEnumerable var5_uid;

			public seq13_join(
				Altova.Mapforce.IMFNode var1_create_attribute_qname,
				Altova.Mapforce.IMFNode var2_cur,
				Altova.Mapforce.IMFNode var3_create_element_qname,
				System.Collections.IEnumerable var4_box,
				System.Collections.IEnumerable var5_uid
			)
			{
				this.var1_create_attribute_qname = var1_create_attribute_qname;
				this.var2_cur = var2_cur;
				this.var3_create_element_qname = var3_create_element_qname;
				this.var4_box = var4_box;
				this.var5_uid = var5_uid;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq13_join closure;
				private IEnumerator var6_uid;
				private IEnumerator var7_show;
				private System.Collections.IEnumerable var8_box;
				private IEnumerator var9_chromatograph;
				private IEnumerator var10_mudGas;
				private System.Collections.IEnumerable var11_box;
				public Enumerator(seq13_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var6_uid = (closure.var5_uid).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var6_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var6_uid); var6_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq14_seq_(closure.var1_create_attribute_qname, closure.var2_cur)));
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CuttingsGeologyInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq17_join(closure.var4_box, closure.var5_uid)));
							pos++;
							return true;
						case 6:
							state = 7;
							var7_show = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("show", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var7_show.MoveNext()) { state = 8; goto case 8; }
							var8_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box("ShowEvaluationInterval"));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ShowEvaluationInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq19_seq_(closure.var3_create_element_qname, var8_box)));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var7_show); var7_show = null;
							var9_chromatograph = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("chromatograph", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var9_chromatograph.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Chromatograph", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq20_join((Altova.Mapforce.IMFNode)(var9_chromatograph.Current))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var9_chromatograph); var9_chromatograph = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DrillingParameters", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq21_seq_(closure.var2_cur)));
							pos++;
							return true;
						case 13:
							state = 14;
							var10_mudGas = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mudGas", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 14;
						case 14:
							state = 14;
							if (!var10_mudGas.MoveNext()) { state = 15; goto case 15; }
							var11_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box("MudGas channel"));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MudGas", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq31_join((Altova.Mapforce.IMFNode)(var10_mudGas.Current), closure.var3_create_element_qname, var11_box)));
							pos++;
							return true;
						case 15:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var10_mudGas); var10_mudGas = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var6_uid); var6_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_show); var7_show = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_chromatograph); var9_chromatograph = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_mudGas); var10_mudGas = null;
				}
			}
		}
		class seq14_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_create_attribute_qname;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq14_seq_(
				Altova.Mapforce.IMFNode var1_create_attribute_qname,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_create_attribute_qname = var1_create_attribute_qname;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq14_seq_ closure;
				public Enumerator(seq14_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = closure.var1_create_attribute_qname;
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdTop", "http://www.energistics.org/energyml/data/commonv2"), (new seq15_join(closure.var2_cur)));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdBase", "http://www.energistics.org/energyml/data/commonv2"), (new seq16_join(closure.var2_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq15_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq15_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq15_join closure;
				private Altova.Mapforce.IMFNode var2_mdTop;
				public Enumerator(seq15_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_mdTop = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdTop", "http://www.witsml.org/schemas/1series"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_mdTop)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_mdTop)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq16_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq16_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq16_join closure;
				private Altova.Mapforce.IMFNode var2_mdBottom;
				public Enumerator(seq16_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_mdBottom = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdBottom", "http://www.witsml.org/schemas/1series"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_mdBottom)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_mdBottom)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq17_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_box;
			private readonly System.Collections.IEnumerable var2_uid;

			public seq17_join(
				System.Collections.IEnumerable var1_box,
				System.Collections.IEnumerable var2_uid
			)
			{
				this.var1_box = var1_box;
				this.var2_uid = var2_uid;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq17_join closure;
				private IEnumerator var3_uid;
				private string var4_cast;
				public Enumerator(seq17_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ContentType", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_box);
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_box);
							pos++;
							return true;
						case 3:
							state = 4;
							var3_uid = (closure.var2_uid).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var3_uid.MoveNext()) { state = 5; goto case 5; }
							var4_cast = (Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_uid.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Uuid", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq18_if_not_equal(var4_cast)))));
							pos++;
							return true;
						case 5:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_uid); var3_uid = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_uid); var3_uid = null;
				}
			}
		}
		class seq18_if_not_equal : IEnumerable
		{
			private readonly string var1_cast;

			public seq18_if_not_equal(
				string var1_cast
			)
			{
				this.var1_cast = var1_cast;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq18_if_not_equal closure;
				public Enumerator(seq18_if_not_equal closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Core.StringLength(closure.var1_cast)))) != (36m))) { state = 2; goto case 2;  }
							current = "00000000-0000-0000-0000-000000000000";
							pos++;
							return true;
						case 2:
							state = 0;
							current = closure.var1_cast;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq19_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_create_element_qname;
			private readonly System.Collections.IEnumerable var2_box;

			public seq19_seq_(
				Altova.Mapforce.IMFNode var1_create_element_qname,
				System.Collections.IEnumerable var2_box
			)
			{
				this.var1_create_element_qname = var1_create_element_qname;
				this.var2_box = var2_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq19_seq_ closure;
				public Enumerator(seq19_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ContentType", "http://www.energistics.org/energyml/data/commonv2"), closure.var2_box);
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), closure.var2_box);
							pos++;
							return true;
						case 3:
							state = 0;
							current = closure.var1_create_element_qname;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq20_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq20_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq20_join closure;
				private IEnumerator var2_eTimChromCycle;
				private IEnumerator var3_methAv;
				private IEnumerator var4_methMn;
				private IEnumerator var5_methMx;
				private IEnumerator var6_ethAv;
				private IEnumerator var7_ethMn;
				private IEnumerator var8_ethMx;
				private IEnumerator var9_propAv;
				private IEnumerator var10_propMn;
				private IEnumerator var11_propMx;
				private IEnumerator var12_ibutAv;
				private IEnumerator var13_ibutMn;
				private IEnumerator var14_ibutMx;
				private IEnumerator var15_nbutAv;
				private IEnumerator var16_nbutMn;
				private IEnumerator var17_nbutMx;
				private IEnumerator var18_ipentAv;
				private IEnumerator var19_ipentMn;
				private IEnumerator var20_ipentMx;
				private IEnumerator var21_npentAv;
				private IEnumerator var22_npentMn;
				private IEnumerator var23_npentMx;
				private IEnumerator var24_epentAv;
				private IEnumerator var25_epentMn;
				private IEnumerator var26_epentMx;
				private IEnumerator var27_ihexAv;
				private IEnumerator var28_ihexMn;
				private IEnumerator var29_ihexMx;
				private IEnumerator var30_nhexAv;
				private IEnumerator var31_nhexMn;
				private IEnumerator var32_nhexMx;
				private IEnumerator var33_co2Av;
				private IEnumerator var34_co2Mn;
				private IEnumerator var35_co2Mx;
				private IEnumerator var36_h2sAv;
				private IEnumerator var37_h2sMn;
				private IEnumerator var38_h2sMx;
				private IEnumerator var39_acetylene;
				public Enumerator(seq20_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_eTimChromCycle = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("eTimChromCycle", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_eTimChromCycle.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ETimChromCycle", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_TimeMeasure.Eval((Altova.Mapforce.IMFNode)(var2_eTimChromCycle.Current)));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_eTimChromCycle); var2_eTimChromCycle = null;
							var3_methAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("methAv", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_methAv.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MethAv", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var3_methAv.Current)));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var3_methAv); var3_methAv = null;
							var4_methMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("methMn", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var4_methMn.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MethMn", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var4_methMn.Current)));
							pos++;
							return true;
						case 9:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var4_methMn); var4_methMn = null;
							var5_methMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("methMx", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var5_methMx.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MethMx", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var5_methMx.Current)));
							pos++;
							return true;
						case 12:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var5_methMx); var5_methMx = null;
							var6_ethAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ethAv", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 14;
						case 14:
							state = 14;
							if (!var6_ethAv.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EthAv", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var6_ethAv.Current)));
							pos++;
							return true;
						case 15:
							state = 17;
							Altova.Mapforce.MFEnumerator.Dispose(var6_ethAv); var6_ethAv = null;
							var7_ethMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ethMn", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 17;
						case 17:
							state = 17;
							if (!var7_ethMn.MoveNext()) { state = 18; goto case 18; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EthMn", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var7_ethMn.Current)));
							pos++;
							return true;
						case 18:
							state = 20;
							Altova.Mapforce.MFEnumerator.Dispose(var7_ethMn); var7_ethMn = null;
							var8_ethMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ethMx", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 20;
						case 20:
							state = 20;
							if (!var8_ethMx.MoveNext()) { state = 21; goto case 21; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EthMx", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var8_ethMx.Current)));
							pos++;
							return true;
						case 21:
							state = 23;
							Altova.Mapforce.MFEnumerator.Dispose(var8_ethMx); var8_ethMx = null;
							var9_propAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("propAv", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 23;
						case 23:
							state = 23;
							if (!var9_propAv.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("PropAv", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var9_propAv.Current)));
							pos++;
							return true;
						case 24:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var9_propAv); var9_propAv = null;
							var10_propMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("propMn", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 26;
						case 26:
							state = 26;
							if (!var10_propMn.MoveNext()) { state = 27; goto case 27; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("PropMn", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var10_propMn.Current)));
							pos++;
							return true;
						case 27:
							state = 29;
							Altova.Mapforce.MFEnumerator.Dispose(var10_propMn); var10_propMn = null;
							var11_propMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("propMx", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 29;
						case 29:
							state = 29;
							if (!var11_propMx.MoveNext()) { state = 30; goto case 30; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("PropMx", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var11_propMx.Current)));
							pos++;
							return true;
						case 30:
							state = 32;
							Altova.Mapforce.MFEnumerator.Dispose(var11_propMx); var11_propMx = null;
							var12_ibutAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ibutAv", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 32;
						case 32:
							state = 32;
							if (!var12_ibutAv.MoveNext()) { state = 33; goto case 33; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("IbutAv", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var12_ibutAv.Current)));
							pos++;
							return true;
						case 33:
							state = 35;
							Altova.Mapforce.MFEnumerator.Dispose(var12_ibutAv); var12_ibutAv = null;
							var13_ibutMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ibutMn", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 35;
						case 35:
							state = 35;
							if (!var13_ibutMn.MoveNext()) { state = 36; goto case 36; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("IbutMn", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var13_ibutMn.Current)));
							pos++;
							return true;
						case 36:
							state = 38;
							Altova.Mapforce.MFEnumerator.Dispose(var13_ibutMn); var13_ibutMn = null;
							var14_ibutMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ibutMx", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 38;
						case 38:
							state = 38;
							if (!var14_ibutMx.MoveNext()) { state = 39; goto case 39; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("IbutMx", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var14_ibutMx.Current)));
							pos++;
							return true;
						case 39:
							state = 41;
							Altova.Mapforce.MFEnumerator.Dispose(var14_ibutMx); var14_ibutMx = null;
							var15_nbutAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nbutAv", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 41;
						case 41:
							state = 41;
							if (!var15_nbutAv.MoveNext()) { state = 42; goto case 42; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NbutAv", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var15_nbutAv.Current)));
							pos++;
							return true;
						case 42:
							state = 44;
							Altova.Mapforce.MFEnumerator.Dispose(var15_nbutAv); var15_nbutAv = null;
							var16_nbutMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nbutMn", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 44;
						case 44:
							state = 44;
							if (!var16_nbutMn.MoveNext()) { state = 45; goto case 45; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NbutMn", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var16_nbutMn.Current)));
							pos++;
							return true;
						case 45:
							state = 47;
							Altova.Mapforce.MFEnumerator.Dispose(var16_nbutMn); var16_nbutMn = null;
							var17_nbutMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nbutMx", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 47;
						case 47:
							state = 47;
							if (!var17_nbutMx.MoveNext()) { state = 48; goto case 48; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NbutMx", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var17_nbutMx.Current)));
							pos++;
							return true;
						case 48:
							state = 50;
							Altova.Mapforce.MFEnumerator.Dispose(var17_nbutMx); var17_nbutMx = null;
							var18_ipentAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ipentAv", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 50;
						case 50:
							state = 50;
							if (!var18_ipentAv.MoveNext()) { state = 51; goto case 51; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("IpentAv", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var18_ipentAv.Current)));
							pos++;
							return true;
						case 51:
							state = 53;
							Altova.Mapforce.MFEnumerator.Dispose(var18_ipentAv); var18_ipentAv = null;
							var19_ipentMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ipentMn", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 53;
						case 53:
							state = 53;
							if (!var19_ipentMn.MoveNext()) { state = 54; goto case 54; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("IpentMn", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var19_ipentMn.Current)));
							pos++;
							return true;
						case 54:
							state = 56;
							Altova.Mapforce.MFEnumerator.Dispose(var19_ipentMn); var19_ipentMn = null;
							var20_ipentMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ipentMx", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 56;
						case 56:
							state = 56;
							if (!var20_ipentMx.MoveNext()) { state = 57; goto case 57; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("IpentMx", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var20_ipentMx.Current)));
							pos++;
							return true;
						case 57:
							state = 59;
							Altova.Mapforce.MFEnumerator.Dispose(var20_ipentMx); var20_ipentMx = null;
							var21_npentAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("npentAv", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 59;
						case 59:
							state = 59;
							if (!var21_npentAv.MoveNext()) { state = 60; goto case 60; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NpentAv", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var21_npentAv.Current)));
							pos++;
							return true;
						case 60:
							state = 62;
							Altova.Mapforce.MFEnumerator.Dispose(var21_npentAv); var21_npentAv = null;
							var22_npentMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("npentMn", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 62;
						case 62:
							state = 62;
							if (!var22_npentMn.MoveNext()) { state = 63; goto case 63; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NpentMn", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var22_npentMn.Current)));
							pos++;
							return true;
						case 63:
							state = 65;
							Altova.Mapforce.MFEnumerator.Dispose(var22_npentMn); var22_npentMn = null;
							var23_npentMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("npentMx", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 65;
						case 65:
							state = 65;
							if (!var23_npentMx.MoveNext()) { state = 66; goto case 66; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NpentMx", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var23_npentMx.Current)));
							pos++;
							return true;
						case 66:
							state = 68;
							Altova.Mapforce.MFEnumerator.Dispose(var23_npentMx); var23_npentMx = null;
							var24_epentAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("epentAv", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 68;
						case 68:
							state = 68;
							if (!var24_epentAv.MoveNext()) { state = 69; goto case 69; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EpentAv", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var24_epentAv.Current)));
							pos++;
							return true;
						case 69:
							state = 71;
							Altova.Mapforce.MFEnumerator.Dispose(var24_epentAv); var24_epentAv = null;
							var25_epentMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("epentMn", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 71;
						case 71:
							state = 71;
							if (!var25_epentMn.MoveNext()) { state = 72; goto case 72; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EpentMn", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var25_epentMn.Current)));
							pos++;
							return true;
						case 72:
							state = 74;
							Altova.Mapforce.MFEnumerator.Dispose(var25_epentMn); var25_epentMn = null;
							var26_epentMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("epentMx", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 74;
						case 74:
							state = 74;
							if (!var26_epentMx.MoveNext()) { state = 75; goto case 75; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EpentMx", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var26_epentMx.Current)));
							pos++;
							return true;
						case 75:
							state = 77;
							Altova.Mapforce.MFEnumerator.Dispose(var26_epentMx); var26_epentMx = null;
							var27_ihexAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ihexAv", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 77;
						case 77:
							state = 77;
							if (!var27_ihexAv.MoveNext()) { state = 78; goto case 78; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("IhexAv", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var27_ihexAv.Current)));
							pos++;
							return true;
						case 78:
							state = 80;
							Altova.Mapforce.MFEnumerator.Dispose(var27_ihexAv); var27_ihexAv = null;
							var28_ihexMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ihexMn", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 80;
						case 80:
							state = 80;
							if (!var28_ihexMn.MoveNext()) { state = 81; goto case 81; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("IhexMn", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var28_ihexMn.Current)));
							pos++;
							return true;
						case 81:
							state = 83;
							Altova.Mapforce.MFEnumerator.Dispose(var28_ihexMn); var28_ihexMn = null;
							var29_ihexMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ihexMx", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 83;
						case 83:
							state = 83;
							if (!var29_ihexMx.MoveNext()) { state = 84; goto case 84; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("IhexMx", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var29_ihexMx.Current)));
							pos++;
							return true;
						case 84:
							state = 86;
							Altova.Mapforce.MFEnumerator.Dispose(var29_ihexMx); var29_ihexMx = null;
							var30_nhexAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nhexAv", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 86;
						case 86:
							state = 86;
							if (!var30_nhexAv.MoveNext()) { state = 87; goto case 87; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NhexAv", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var30_nhexAv.Current)));
							pos++;
							return true;
						case 87:
							state = 89;
							Altova.Mapforce.MFEnumerator.Dispose(var30_nhexAv); var30_nhexAv = null;
							var31_nhexMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nhexMn", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 89;
						case 89:
							state = 89;
							if (!var31_nhexMn.MoveNext()) { state = 90; goto case 90; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NhexMn", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var31_nhexMn.Current)));
							pos++;
							return true;
						case 90:
							state = 92;
							Altova.Mapforce.MFEnumerator.Dispose(var31_nhexMn); var31_nhexMn = null;
							var32_nhexMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nhexMx", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 92;
						case 92:
							state = 92;
							if (!var32_nhexMx.MoveNext()) { state = 93; goto case 93; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NhexMx", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var32_nhexMx.Current)));
							pos++;
							return true;
						case 93:
							state = 95;
							Altova.Mapforce.MFEnumerator.Dispose(var32_nhexMx); var32_nhexMx = null;
							var33_co2Av = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("co2Av", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 95;
						case 95:
							state = 95;
							if (!var33_co2Av.MoveNext()) { state = 96; goto case 96; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Co2Av", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var33_co2Av.Current)));
							pos++;
							return true;
						case 96:
							state = 98;
							Altova.Mapforce.MFEnumerator.Dispose(var33_co2Av); var33_co2Av = null;
							var34_co2Mn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("co2Mn", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 98;
						case 98:
							state = 98;
							if (!var34_co2Mn.MoveNext()) { state = 99; goto case 99; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Co2Mn", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var34_co2Mn.Current)));
							pos++;
							return true;
						case 99:
							state = 101;
							Altova.Mapforce.MFEnumerator.Dispose(var34_co2Mn); var34_co2Mn = null;
							var35_co2Mx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("co2Mx", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 101;
						case 101:
							state = 101;
							if (!var35_co2Mx.MoveNext()) { state = 102; goto case 102; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Co2Mx", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var35_co2Mx.Current)));
							pos++;
							return true;
						case 102:
							state = 104;
							Altova.Mapforce.MFEnumerator.Dispose(var35_co2Mx); var35_co2Mx = null;
							var36_h2sAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("h2sAv", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 104;
						case 104:
							state = 104;
							if (!var36_h2sAv.MoveNext()) { state = 105; goto case 105; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("H2sAv", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var36_h2sAv.Current)));
							pos++;
							return true;
						case 105:
							state = 107;
							Altova.Mapforce.MFEnumerator.Dispose(var36_h2sAv); var36_h2sAv = null;
							var37_h2sMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("h2sMn", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 107;
						case 107:
							state = 107;
							if (!var37_h2sMn.MoveNext()) { state = 108; goto case 108; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("H2sMn", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var37_h2sMn.Current)));
							pos++;
							return true;
						case 108:
							state = 110;
							Altova.Mapforce.MFEnumerator.Dispose(var37_h2sMn); var37_h2sMn = null;
							var38_h2sMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("h2sMx", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 110;
						case 110:
							state = 110;
							if (!var38_h2sMx.MoveNext()) { state = 111; goto case 111; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("H2sMx", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var38_h2sMx.Current)));
							pos++;
							return true;
						case 111:
							state = 113;
							Altova.Mapforce.MFEnumerator.Dispose(var38_h2sMx); var38_h2sMx = null;
							var39_acetylene = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("acetylene", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 113;
						case 113:
							state = 113;
							if (!var39_acetylene.MoveNext()) { state = 114; goto case 114; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Acetylene", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var39_acetylene.Current)));
							pos++;
							return true;
						case 114:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var39_acetylene); var39_acetylene = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_eTimChromCycle); var2_eTimChromCycle = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_methAv); var3_methAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_methMn); var4_methMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_methMx); var5_methMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_ethAv); var6_ethAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_ethMn); var7_ethMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_ethMx); var8_ethMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_propAv); var9_propAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_propMn); var10_propMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_propMx); var11_propMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_ibutAv); var12_ibutAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_ibutMn); var13_ibutMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_ibutMx); var14_ibutMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_nbutAv); var15_nbutAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_nbutMn); var16_nbutMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_nbutMx); var17_nbutMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_ipentAv); var18_ipentAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_ipentMn); var19_ipentMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_ipentMx); var20_ipentMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_npentAv); var21_npentAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_npentMn); var22_npentMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var23_npentMx); var23_npentMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var24_epentAv); var24_epentAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var25_epentMn); var25_epentMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var26_epentMx); var26_epentMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var27_ihexAv); var27_ihexAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var28_ihexMn); var28_ihexMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var29_ihexMx); var29_ihexMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var30_nhexAv); var30_nhexAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var31_nhexMn); var31_nhexMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var32_nhexMx); var32_nhexMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var33_co2Av); var33_co2Av = null;
					Altova.Mapforce.MFEnumerator.Dispose(var34_co2Mn); var34_co2Mn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var35_co2Mx); var35_co2Mx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var36_h2sAv); var36_h2sAv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var37_h2sMn); var37_h2sMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var38_h2sMx); var38_h2sMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var39_acetylene); var39_acetylene = null;
				}
			}
		}
		class seq21_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq21_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq21_seq_ closure;
				public Enumerator(seq21_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Rop", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq22_map(closure.var1_cur)));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("AverageWeightOnBit", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq23_map(closure.var1_cur)));
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("AverageTorque", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq24_map(closure.var1_cur)));
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("AverageTorqueCurrent", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq25_map(closure.var1_cur)));
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("AverageTurnRate", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq26_map(closure.var1_cur)));
							pos++;
							return true;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("AverageMudDensity", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq27_map(closure.var1_cur)));
							pos++;
							return true;
						case 7:
							state = 8;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("AverageEcdAtTd", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq28_map(closure.var1_cur)));
							pos++;
							return true;
						case 8:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("AverageDrillingCoefficient", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq29_map(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq22_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq22_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq22_map closure;
				private IEnumerator var2_ropAv;
				public Enumerator(seq22_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_ropAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ropAv", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_ropAv.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Average", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf4_LengthPerTimeMeasure.Eval((Altova.Mapforce.IMFNode)(var2_ropAv.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_ropAv); var2_ropAv = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_ropAv); var2_ropAv = null;
				}
			}
		}
		class seq23_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq23_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq23_map closure;
				private IEnumerator var2_wobAv;
				public Enumerator(seq23_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_wobAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wobAv", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_wobAv.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Average", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf5_ForceMeasure.Eval((Altova.Mapforce.IMFNode)(var2_wobAv.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_wobAv); var2_wobAv = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_wobAv); var2_wobAv = null;
				}
			}
		}
		class seq24_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq24_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq24_map closure;
				private IEnumerator var2_tqAv;
				public Enumerator(seq24_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_tqAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("tqAv", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_tqAv.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Average", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf6_MomentOfForceMeasure.Eval((Altova.Mapforce.IMFNode)(var2_tqAv.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_tqAv); var2_tqAv = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_tqAv); var2_tqAv = null;
				}
			}
		}
		class seq25_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq25_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq25_map closure;
				private IEnumerator var2_currentAv;
				public Enumerator(seq25_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_currentAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("currentAv", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_currentAv.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Average", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf7_ElectricCurrentMeasure.Eval((Altova.Mapforce.IMFNode)(var2_currentAv.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_currentAv); var2_currentAv = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_currentAv); var2_currentAv = null;
				}
			}
		}
		class seq26_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq26_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq26_map closure;
				private IEnumerator var2_rpmAv;
				public Enumerator(seq26_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_rpmAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("rpmAv", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_rpmAv.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Average", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf8_AngularVelocityMeasure.Eval((Altova.Mapforce.IMFNode)(var2_rpmAv.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_rpmAv); var2_rpmAv = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_rpmAv); var2_rpmAv = null;
				}
			}
		}
		class seq27_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq27_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq27_map closure;
				private IEnumerator var2_wtMudAv;
				public Enumerator(seq27_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_wtMudAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wtMudAv", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_wtMudAv.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Average", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf9_MassPerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var2_wtMudAv.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_wtMudAv); var2_wtMudAv = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_wtMudAv); var2_wtMudAv = null;
				}
			}
		}
		class seq28_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq28_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq28_map closure;
				private IEnumerator var2_ecdTdAv;
				public Enumerator(seq28_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_ecdTdAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ecdTdAv", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_ecdTdAv.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Average", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf9_MassPerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var2_ecdTdAv.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_ecdTdAv); var2_ecdTdAv = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_ecdTdAv); var2_ecdTdAv = null;
				}
			}
		}
		class seq29_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq29_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq29_map closure;
				private IEnumerator var2_dxcAv;
				public Enumerator(seq29_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_dxcAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dxcAv", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_dxcAv.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Average", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq30_seq_((Altova.Mapforce.IMFNode)(var2_dxcAv.Current))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_dxcAv); var2_dxcAv = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_dxcAv); var2_dxcAv = null;
				}
			}
		}
		class seq30_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq30_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq30_seq_ closure;
				public Enumerator(seq30_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box("%"));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq31_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;
			private readonly System.Collections.IEnumerable var3_box;

			public seq31_join(
				Altova.Mapforce.IMFNode var1_cur,
				Altova.Mapforce.IMFNode var2_create_element_qname,
				System.Collections.IEnumerable var3_box
			)
			{
				this.var1_cur = var1_cur;
				this.var2_create_element_qname = var2_create_element_qname;
				this.var3_box = var3_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq31_join closure;
				private IEnumerator var4_gasPeak;
				private System.Collections.IEnumerable var5_box;
				public Enumerator(seq31_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GasInMud", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq32_join(closure.var1_cur, closure.var2_create_element_qname, closure.var3_box)));
							pos++;
							return true;
						case 2:
							state = 3;
							var4_gasPeak = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("gasPeak", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var4_gasPeak.MoveNext()) { state = 4; goto case 4; }
							var5_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box("GasinMudChannel"));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GasPeak", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq34_join(closure.var1_cur, closure.var2_create_element_qname, var5_box)));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_gasPeak); var4_gasPeak = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_gasPeak); var4_gasPeak = null;
				}
			}
		}
		class seq32_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;
			private readonly System.Collections.IEnumerable var3_box;

			public seq32_join(
				Altova.Mapforce.IMFNode var1_cur,
				Altova.Mapforce.IMFNode var2_create_element_qname,
				System.Collections.IEnumerable var3_box
			)
			{
				this.var1_cur = var1_cur;
				this.var2_create_element_qname = var2_create_element_qname;
				this.var3_box = var3_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq32_join closure;
				private IEnumerator var4_gasAv;
				public Enumerator(seq32_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var4_gasAv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("gasAv", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var4_gasAv.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Average", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var4_gasAv.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_gasAv); var4_gasAv = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Channel", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq33_seq_(closure.var2_create_element_qname, closure.var3_box)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_gasAv); var4_gasAv = null;
				}
			}
		}
		class seq33_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_create_element_qname;
			private readonly System.Collections.IEnumerable var2_box;

			public seq33_seq_(
				Altova.Mapforce.IMFNode var1_create_element_qname,
				System.Collections.IEnumerable var2_box
			)
			{
				this.var1_create_element_qname = var1_create_element_qname;
				this.var2_box = var2_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq33_seq_ closure;
				public Enumerator(seq33_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ContentType", "http://www.energistics.org/energyml/data/commonv2"), closure.var2_box);
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), closure.var2_box);
							pos++;
							return true;
						case 3:
							state = 0;
							current = closure.var1_create_element_qname;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq34_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;
			private readonly System.Collections.IEnumerable var3_box;

			public seq34_join(
				Altova.Mapforce.IMFNode var1_cur,
				Altova.Mapforce.IMFNode var2_create_element_qname,
				System.Collections.IEnumerable var3_box
			)
			{
				this.var1_cur = var1_cur;
				this.var2_create_element_qname = var2_create_element_qname;
				this.var3_box = var3_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq34_join closure;
				private IEnumerator var4_gasPeakType;
				public Enumerator(seq34_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var4_gasPeakType = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("gasPeakType", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var4_gasPeakType.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("PeakType", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_gasPeakType.Current))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_gasPeakType); var4_gasPeakType = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Channel", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq35_seq_(closure.var2_create_element_qname, closure.var3_box)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_gasPeakType); var4_gasPeakType = null;
				}
			}
		}
		class seq35_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_create_element_qname;
			private readonly System.Collections.IEnumerable var2_box;

			public seq35_seq_(
				Altova.Mapforce.IMFNode var1_create_element_qname,
				System.Collections.IEnumerable var2_box
			)
			{
				this.var1_create_element_qname = var1_create_element_qname;
				this.var2_box = var2_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq35_seq_ closure;
				public Enumerator(seq35_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ContentType", "http://www.energistics.org/energyml/data/commonv2"), closure.var2_box);
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), closure.var2_box);
							pos++;
							return true;
						case 3:
							state = 0;
							current = closure.var1_create_element_qname;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq36_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_create_attribute_qname;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var3_create_element_qname;
			private readonly System.Collections.IEnumerable var4_force;
			private readonly Altova.Mapforce.IMFNode var5_cur;

			public seq36_join(
				Altova.Mapforce.IMFNode var1_create_attribute_qname,
				Altova.Mapforce.IMFNode var2_create_element_qname,
				Altova.Mapforce.IMFNode var3_create_element_qname,
				System.Collections.IEnumerable var4_force,
				Altova.Mapforce.IMFNode var5_cur
			)
			{
				this.var1_create_attribute_qname = var1_create_attribute_qname;
				this.var2_create_element_qname = var2_create_element_qname;
				this.var3_create_element_qname = var3_create_element_qname;
				this.var4_force = var4_force;
				this.var5_cur = var5_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq36_join closure;
				private IEnumerator var6_uid;
				private IEnumerator var7_text;
				private IEnumerator var8_if_exists;
				public Enumerator(seq36_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}MudLogForceParameter")));
							pos++;
							return true;
						case 2:
							state = 3;
							var6_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var5_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var6_uid.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_uid.Current))));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var6_uid); var6_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq37_seq_(closure.var1_create_attribute_qname, closure.var5_cur)));
							pos++;
							return true;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq40_join(closure.var2_create_element_qname, closure.var3_create_element_qname, closure.var5_cur)));
							pos++;
							return true;
						case 7:
							state = 8;
							var7_text = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("text", "http://www.witsml.org/schemas/1series"), closure.var5_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var7_text.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Comments", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_text.Current))));
							pos++;
							return true;
						case 9:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var7_text); var7_text = null;
							var8_if_exists = ((new seq41_if_exists(closure.var4_force))).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var8_if_exists.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Value", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq42_join((double)(var8_if_exists.Current), closure.var4_force)));
							pos++;
							return true;
						case 12:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var8_if_exists); var8_if_exists = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ForceParameterKind", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("overpull on connection"));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var6_uid); var6_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_text); var7_text = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_if_exists); var8_if_exists = null;
				}
			}
		}
		class seq37_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_create_attribute_qname;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq37_seq_(
				Altova.Mapforce.IMFNode var1_create_attribute_qname,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_create_attribute_qname = var1_create_attribute_qname;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq37_seq_ closure;
				public Enumerator(seq37_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = closure.var1_create_attribute_qname;
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdTop", "http://www.energistics.org/energyml/data/commonv2"), (new seq38_join(closure.var2_cur)));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdBase", "http://www.energistics.org/energyml/data/commonv2"), (new seq39_join(closure.var2_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq38_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq38_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq38_join closure;
				private Altova.Mapforce.IMFNode var2_mdTop;
				public Enumerator(seq38_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_mdTop = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdTop", "http://www.witsml.org/schemas/1series"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_mdTop)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_mdTop)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq39_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq39_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq39_join closure;
				private Altova.Mapforce.IMFNode var2_mdBottom;
				public Enumerator(seq39_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_mdBottom = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdBottom", "http://www.witsml.org/schemas/1series"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_mdBottom)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_mdBottom)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq40_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var3_cur;

			public seq40_join(
				Altova.Mapforce.IMFNode var1_create_element_qname,
				Altova.Mapforce.IMFNode var2_create_element_qname,
				Altova.Mapforce.IMFNode var3_cur
			)
			{
				this.var1_create_element_qname = var1_create_element_qname;
				this.var2_create_element_qname = var2_create_element_qname;
				this.var3_cur = var3_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq40_join closure;
				private IEnumerator var4_commonTime;
				private IEnumerator var5_dTimCreation;
				public Enumerator(seq40_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Mudlog parameter"));
							pos++;
							return true;
						case 2:
							state = 3;
							current = closure.var2_create_element_qname;
							pos++;
							return true;
						case 3:
							state = 4;
							var4_commonTime = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("commonTime", "http://www.witsml.org/schemas/1series"), closure.var3_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 6;
							if (!var4_commonTime.MoveNext()) { state = 5; goto case 5; }
							var5_dTimCreation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTimCreation", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_commonTime.Current))).GetEnumerator();
							goto case 6;
						case 5:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_commonTime); var4_commonTime = null;
							current = closure.var1_create_element_qname;
							pos++;
							return true;
						case 6:
							state = 6;
							if (!var5_dTimCreation.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Creation", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_dTimCreation.Current))))));
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var5_dTimCreation); var5_dTimCreation = null;
							goto case 4;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_dTimCreation); var5_dTimCreation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_commonTime); var4_commonTime = null;
				}
			}
		}
		class seq41_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_force;

			public seq41_if_exists(
				System.Collections.IEnumerable var1_force
			)
			{
				this.var1_force = var1_force;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq41_if_exists closure;
				private IEnumerator var2_force;
				public Enumerator(seq41_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_force))) { state = 2; goto case 2;  }
							var2_force = (closure.var1_force).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DecimalToDouble(0m);
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var2_force.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_force.Current)));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_force); var2_force = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_force); var2_force = null;
				}
			}
		}
		class seq42_join : IEnumerable
		{
			private readonly double var1_cur;
			private readonly System.Collections.IEnumerable var2_force;

			public seq42_join(
				double var1_cur,
				System.Collections.IEnumerable var2_force
			)
			{
				this.var1_cur = var1_cur;
				this.var2_force = var2_force;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq42_join closure;
				private IEnumerator var3_if_exists;
				public Enumerator(seq42_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_if_exists = ((new seq43_if_exists(closure.var2_force))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_if_exists.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box((string)(var3_if_exists.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_if_exists); var3_if_exists = null;
							current = Altova.CoreTypes.DoubleToString(closure.var1_cur);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_if_exists); var3_if_exists = null;
				}
			}
		}
		class seq43_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_force;

			public seq43_if_exists(
				System.Collections.IEnumerable var1_force
			)
			{
				this.var1_force = var1_force;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq43_if_exists closure;
				private IEnumerator var2_force;
				public Enumerator(seq43_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_force))) { state = 2; goto case 2;  }
							var2_force = (closure.var1_force).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = "klbf";
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var2_force.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)(var2_force.Current))));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_force); var2_force = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_force); var2_force = null;
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_mudLog_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_obj_mudLog_Instance
			)
			{
				this.var1_obj_mudLog_Instance = var1_obj_mudLog_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_first_items;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_first_items = ((new main(closure.var1_obj_mudLog_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_first_items.MoveNext()) { state = 3; goto case 3; }
							current = var2_first_items.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_first_items); var2_first_items = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_first_items); var2_first_items = null;
				}
			}
		}

	}
}
