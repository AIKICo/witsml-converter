////////////////////////////////////////////////////////////////////////
//
// Map14To20MapToToolErrorModel.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map14To20
{

	public class Map14To20MapToToolErrorModel : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_obj_toolErrorModel2Instance;
		// members
		#endregion //Members


		public void Run(String obj_toolErrorModel2SourceFilename, string ToolErrorModel2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input obj_toolErrorModel2Source = new Altova.IO.FileInput(obj_toolErrorModel2SourceFilename))
			// open target stream
			using (Altova.IO.Output ToolErrorModel2Target = new Altova.IO.FileOutput(ToolErrorModel2TargetFilename))
			{
				// run
				Run(obj_toolErrorModel2Source, ToolErrorModel2Target);
			}
		}

		public void Run(Altova.IO.Input obj_toolErrorModel2Source, Altova.IO.Output ToolErrorModel2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + obj_toolErrorModel2Source.Filename + "...\n");
			XmlDocument obj_toolErrorModel2DocSourceObject = XmlTreeOperations.LoadDocument(obj_toolErrorModel2Source);


			m_obj_toolErrorModel2Instance = obj_toolErrorModel2DocSourceObject;
			if (runDoesCloseAll)
				obj_toolErrorModel2Source.Close();
				// Create the target
				XmlDocument ToolErrorModel2Doc = (ToolErrorModel2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? ToolErrorModel2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_obj_toolErrorModel2Instance, obj_toolErrorModel2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, ToolErrorModel2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				ToolErrorModel2Doc,
				ToolErrorModel2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					obj_toolErrorModel2Source.Close();
					ToolErrorModel2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_toolErrorModel_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_obj_toolErrorModel_Instance
			)
			{
				this.var1_obj_toolErrorModel_Instance = var1_obj_toolErrorModel_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_toolErrorModels;
				private System.Collections.IEnumerable var3_first_items;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_toolErrorModels = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("toolErrorModels", "http://www.witsml.org/schemas/1series"), closure.var1_obj_toolErrorModel_Instance));
							var3_first_items = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FirstItems((new seq1_join(var2_toolErrorModels)), 1m));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ToolErrorModel", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq2_join(var2_toolErrorModels, var3_first_items)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_toolErrorModels;

			public seq1_join(
				System.Collections.IEnumerable var1_toolErrorModels
			)
			{
				this.var1_toolErrorModels = var1_toolErrorModels;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_toolErrorModels;
				private IEnumerator var3_toolErrorModel;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_toolErrorModels = (closure.var1_toolErrorModels).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_toolErrorModels.MoveNext()) { state = 3; goto case 3; }
							var3_toolErrorModel = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("toolErrorModel", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_toolErrorModels.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_toolErrorModels); var2_toolErrorModels = null;
							return false;
						case 4:
							state = 4;
							if (!var3_toolErrorModel.MoveNext()) { state = 5; goto case 5; }
							current = var3_toolErrorModel.Current;
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_toolErrorModel); var3_toolErrorModel = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_toolErrorModel); var3_toolErrorModel = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_toolErrorModels); var2_toolErrorModels = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_toolErrorModels;
			private readonly System.Collections.IEnumerable var2_first_items;

			public seq2_join(
				System.Collections.IEnumerable var1_toolErrorModels,
				System.Collections.IEnumerable var2_first_items
			)
			{
				this.var1_toolErrorModels = var1_toolErrorModels;
				this.var2_first_items = var2_first_items;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var3_first_items;
				private IEnumerator var4_first_items;
				private IEnumerator var5_customData;
				private IEnumerator var6_typeSurveyTool;
				private IEnumerator var7_useErrorTermSet;
				private IEnumerator var8_authorization;
				private IEnumerator var9_operatingCondition;
				private IEnumerator var10_operatingInterval;
				private IEnumerator var11_modelParameters;
				private IEnumerator var12_errorTermValue;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("eml", "http://www.energistics.org/energyml/data/commonv2");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateNamespace("gco", "http://www.isotc211.org/2005/gco");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateNamespace("gmd", "http://www.isotc211.org/2005/gmd");
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateNamespace("gsr", "http://www.isotc211.org/2005/gsr");
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateNamespace("gts", "http://www.isotc211.org/2005/gts");
							pos++;
							return true;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateNamespace("gml", "http://www.opengis.net/gml/3.2");
							pos++;
							return true;
						case 7:
							state = 8;
							current = Altova.Functions.Core.CreateNamespace("xlink", "http://www.w3.org/1999/xlink");
							pos++;
							return true;
						case 8:
							state = 9;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.energistics.org/energyml/data/witsmlv2 file:///D:/Repos/witsmlvalidation/witsml/energyml/2.0/data/witsml/v2.0/xsd_schemas/ToolErrorModel.xsd"));
							pos++;
							return true;
						case 9:
							state = 10;
							var3_first_items = (closure.var2_first_items).GetEnumerator();
							goto case 10;
						case 10:
							state = 12;
							if (!var3_first_items.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("schemaVersion", ""), Altova.Functions.Core.Box("2.0"));
							pos++;
							return true;
						case 11:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
							var4_first_items = (closure.var2_first_items).GetEnumerator();
							goto case 14;
						case 12:
							state = 10;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uuid", ""), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 14:
							state = 16;
							if (!var4_first_items.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Aliases", "http://www.energistics.org/energyml/data/commonv2"), (new seq3_join((Altova.Mapforce.IMFNode)(var4_first_items.Current), closure.var1_toolErrorModels)));
							pos++;
							return true;
						case 15:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
							return false;
						case 16:
							state = 17;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), (new seq4_seq_((Altova.Mapforce.IMFNode)(var4_first_items.Current))));
							pos++;
							return true;
						case 17:
							state = 18;
							var5_customData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var5_customData.MoveNext()) { state = 19; goto case 19; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:CustomData", "http://www.energistics.org/energyml/data/commonv2"), tbf.tbf1_CustomData.Eval((Altova.Mapforce.IMFNode)(var5_customData.Current)));
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var5_customData); var5_customData = null;
							var6_typeSurveyTool = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("typeSurveyTool", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 21;
						case 21:
							state = 21;
							if (!var6_typeSurveyTool.MoveNext()) { state = 22; goto case 22; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TypeSurveyTool", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_typeSurveyTool.Current))));
							pos++;
							return true;
						case 22:
							state = 24;
							Altova.Mapforce.MFEnumerator.Dispose(var6_typeSurveyTool); var6_typeSurveyTool = null;
							var7_useErrorTermSet = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("useErrorTermSet", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 24;
						case 24:
							state = 24;
							if (!var7_useErrorTermSet.MoveNext()) { state = 25; goto case 25; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("UseErrorTermSet", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_useErrorTermSet.Current))));
							pos++;
							return true;
						case 25:
							state = 27;
							Altova.Mapforce.MFEnumerator.Dispose(var7_useErrorTermSet); var7_useErrorTermSet = null;
							var8_authorization = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("authorization", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 27;
						case 27:
							state = 27;
							if (!var8_authorization.MoveNext()) { state = 28; goto case 28; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Authorization", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_join((Altova.Mapforce.IMFNode)(var8_authorization.Current))));
							pos++;
							return true;
						case 28:
							state = 30;
							Altova.Mapforce.MFEnumerator.Dispose(var8_authorization); var8_authorization = null;
							var9_operatingCondition = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("operatingCondition", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 30;
						case 30:
							state = 30;
							if (!var9_operatingCondition.MoveNext()) { state = 31; goto case 31; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("OperatingCondition", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq6_join((Altova.Mapforce.IMFNode)(var9_operatingCondition.Current))));
							pos++;
							return true;
						case 31:
							state = 33;
							Altova.Mapforce.MFEnumerator.Dispose(var9_operatingCondition); var9_operatingCondition = null;
							var10_operatingInterval = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("operatingInterval", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 33;
						case 33:
							state = 33;
							if (!var10_operatingInterval.MoveNext()) { state = 34; goto case 34; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("OperatingInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq9_join((Altova.Mapforce.IMFNode)(var10_operatingInterval.Current))));
							pos++;
							return true;
						case 34:
							state = 36;
							Altova.Mapforce.MFEnumerator.Dispose(var10_operatingInterval); var10_operatingInterval = null;
							var11_modelParameters = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("modelParameters", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 36;
						case 36:
							state = 36;
							if (!var11_modelParameters.MoveNext()) { state = 37; goto case 37; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ModelParameters", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq10_join((Altova.Mapforce.IMFNode)(var11_modelParameters.Current))));
							pos++;
							return true;
						case 37:
							state = 39;
							Altova.Mapforce.MFEnumerator.Dispose(var11_modelParameters); var11_modelParameters = null;
							var12_errorTermValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("errorTermValue", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 39;
						case 39:
							state = 39;
							if (!var12_errorTermValue.MoveNext()) { state = 40; goto case 40; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ErrorTermValue", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq11_join((Altova.Mapforce.IMFNode)(var12_errorTermValue.Current))));
							pos++;
							return true;
						case 40:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var12_errorTermValue); var12_errorTermValue = null;
							goto case 14;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_customData); var5_customData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_typeSurveyTool); var6_typeSurveyTool = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_useErrorTermSet); var7_useErrorTermSet = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_authorization); var8_authorization = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_operatingCondition); var9_operatingCondition = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_operatingInterval); var10_operatingInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_modelParameters); var11_modelParameters = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_errorTermValue); var12_errorTermValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
				}
			}
		}
		class seq3_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_toolErrorModels;

			public seq3_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_toolErrorModels
			)
			{
				this.var1_cur = var1_cur;
				this.var2_toolErrorModels = var2_toolErrorModels;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_join closure;
				private IEnumerator var3_toolErrorModels;
				private IEnumerator var4_uid;
				public Enumerator(seq3_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_toolErrorModels = (closure.var2_toolErrorModels).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_toolErrorModels.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("authority", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("version", ""), (Altova.Mapforce.IMFNode)(var3_toolErrorModels.Current))))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_toolErrorModels); var3_toolErrorModels = null;
							var4_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var4_uid.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Identifier", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_uid.Current))));
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Identifier is created from the uid of the input scheme"));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_toolErrorModels); var3_toolErrorModels = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
				}
			}
		}
		class seq4_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq4_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_seq_ closure;
				public Enumerator(seq4_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Originator", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("1411_input"));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Format", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Mapforce"));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq5_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq5_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_join closure;
				private IEnumerator var2_author;
				private IEnumerator var3_source;
				private IEnumerator var4_version;
				private IEnumerator var5_comment;
				public Enumerator(seq5_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_author = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("author", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_author.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Author", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_author.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_author); var2_author = null;
							var3_source = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("source", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_source.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Source", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_source.Current))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var3_source); var3_source = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Authority", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("authority", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 8:
							state = 9;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Status", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("status", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 9:
							state = 10;
							var4_version = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("version", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_version.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Version", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_version.Current))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_version); var4_version = null;
							var5_comment = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("comment", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_comment.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Comment", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_comment.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_comment); var5_comment = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_author); var2_author = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_source); var3_source = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_version); var4_version = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_comment); var5_comment = null;
				}
			}
		}
		class seq6_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq6_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_join closure;
				private IEnumerator var2_uid;
				private IEnumerator var3_parameter;
				private IEnumerator var4_min;
				private IEnumerator var5_max;
				private IEnumerator var6_value;
				private IEnumerator var7_extensionNameValue;
				public Enumerator(seq6_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
							var3_parameter = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("parameter", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_parameter.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Parameter", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_parameter.Current))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var3_parameter); var3_parameter = null;
							var4_min = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("min", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var4_min.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Min", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_GenericMeasure.Eval((Altova.Mapforce.IMFNode)(var4_min.Current)));
							pos++;
							return true;
						case 9:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var4_min); var4_min = null;
							var5_max = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("max", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var5_max.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Max", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_GenericMeasure.Eval((Altova.Mapforce.IMFNode)(var5_max.Current)));
							pos++;
							return true;
						case 12:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var5_max); var5_max = null;
							var6_value = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 14;
						case 14:
							state = 14;
							if (!var6_value.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Value", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_value.Current))));
							pos++;
							return true;
						case 15:
							state = 17;
							Altova.Mapforce.MFEnumerator.Dispose(var6_value); var6_value = null;
							var7_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 17;
						case 17:
							state = 17;
							if (!var7_extensionNameValue.MoveNext()) { state = 18; goto case 18; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq7_join((Altova.Mapforce.IMFNode)(var7_extensionNameValue.Current))));
							pos++;
							return true;
						case 18:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var7_extensionNameValue); var7_extensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_parameter); var3_parameter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_min); var4_min = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_max); var5_max = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_value); var6_value = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_extensionNameValue); var7_extensionNameValue = null;
				}
			}
		}
		class seq7_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq7_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_join closure;
				private IEnumerator var2_measureClass;
				private IEnumerator var3_dTim;
				private IEnumerator var4_index;
				private IEnumerator var5_description;
				public Enumerator(seq7_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Name", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Value", "http://www.energistics.org/energyml/data/commonv2"), (new seq8_join(closure.var1_cur)));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_measureClass = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var2_measureClass.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_measureClass.Current))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_measureClass); var2_measureClass = null;
							var3_dTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var3_dTim.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:DTim", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_dTim.Current))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var3_dTim); var3_dTim = null;
							var4_index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_index.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Index", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_index.Current))))))))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_index); var4_index = null;
							var5_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_description.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_description.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_description); var5_description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_measureClass); var2_measureClass = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_dTim); var3_dTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_index); var4_index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_description); var5_description = null;
				}
			}
		}
		class seq8_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq8_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq8_join closure;
				private Altova.Mapforce.IMFNode var2_value;
				private IEnumerator var3_uom;
				public Enumerator(seq8_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_value = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), closure.var1_cur)));
							var3_uom = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_value)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_uom.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_uom.Current))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_uom); var3_uom = null;
							current = Altova.CoreTypes.NodeToString(var2_value);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_uom); var3_uom = null;
				}
			}
		}
		class seq9_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq9_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq9_join closure;
				private IEnumerator var2_uid;
				private IEnumerator var3_speed;
				private IEnumerator var4_sampleRate;
				private IEnumerator var5_extensionNameValue;
				public Enumerator(seq9_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Mode", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.Functions.Lang.Lowercase(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mode", "http://www.witsml.org/schemas/1series"), closure.var1_cur))))));
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Start", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_PlaneAngleMeasure.Eval((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("start", "http://www.witsml.org/schemas/1series"), closure.var1_cur))));
							pos++;
							return true;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("End", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_PlaneAngleMeasure.Eval((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("end", "http://www.witsml.org/schemas/1series"), closure.var1_cur))));
							pos++;
							return true;
						case 7:
							state = 8;
							var3_speed = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("speed", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var3_speed.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Speed", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf4_LengthPerTimeMeasure.Eval((Altova.Mapforce.IMFNode)(var3_speed.Current)));
							pos++;
							return true;
						case 9:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var3_speed); var3_speed = null;
							var4_sampleRate = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("sampleRate", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var4_sampleRate.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SampleRate", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf5_TimeMeasure.Eval((Altova.Mapforce.IMFNode)(var4_sampleRate.Current)));
							pos++;
							return true;
						case 12:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var4_sampleRate); var4_sampleRate = null;
							var5_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 14;
						case 14:
							state = 14;
							if (!var5_extensionNameValue.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq7_join((Altova.Mapforce.IMFNode)(var5_extensionNameValue.Current))));
							pos++;
							return true;
						case 15:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_extensionNameValue); var5_extensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_speed); var3_speed = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_sampleRate); var4_sampleRate = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_extensionNameValue); var5_extensionNameValue = null;
				}
			}
		}
		class seq10_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq10_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq10_join closure;
				private IEnumerator var2_gyroInitialization;
				private IEnumerator var3_gyroReinitialization;
				private IEnumerator var4_switching;
				private IEnumerator var5_noiseReductionFactor;
				private IEnumerator var6_gyroRunningSpeed;
				public Enumerator(seq10_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MisalignmentMode", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("misalignmentMode", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							var2_gyroInitialization = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("gyroInitialization", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var2_gyroInitialization.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GyroInitialization", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_PlaneAngleMeasure.Eval((Altova.Mapforce.IMFNode)(var2_gyroInitialization.Current)));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var2_gyroInitialization); var2_gyroInitialization = null;
							var3_gyroReinitialization = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("gyroReinitializationDistance", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var3_gyroReinitialization.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GyroReinitializationDistance", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf6_LengthMeasure.Eval((Altova.Mapforce.IMFNode)(var3_gyroReinitialization.Current)));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var3_gyroReinitialization); var3_gyroReinitialization = null;
							var4_switching = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("switching", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var4_switching.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Switching", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_switching.Current))))));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var4_switching); var4_switching = null;
							var5_noiseReductionFactor = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("noiseReductionFactor", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var5_noiseReductionFactor.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NoiseReductionFactor", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_noiseReductionFactor.Current))))));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var5_noiseReductionFactor); var5_noiseReductionFactor = null;
							var6_gyroRunningSpeed = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("gyroRunningSpeed", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 15;
						case 15:
							state = 15;
							if (!var6_gyroRunningSpeed.MoveNext()) { state = 16; goto case 16; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GyroRunningSpeed", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf4_LengthPerTimeMeasure.Eval((Altova.Mapforce.IMFNode)(var6_gyroRunningSpeed.Current)));
							pos++;
							return true;
						case 16:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var6_gyroRunningSpeed); var6_gyroRunningSpeed = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_gyroInitialization); var2_gyroInitialization = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_gyroReinitialization); var3_gyroReinitialization = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_switching); var4_switching = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_noiseReductionFactor); var5_noiseReductionFactor = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_gyroRunningSpeed); var6_gyroRunningSpeed = null;
				}
			}
		}
		class seq11_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq11_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq11_join closure;
				private IEnumerator var2_uid;
				private IEnumerator var3_bias;
				private IEnumerator var4_comment;
				private IEnumerator var5_extensionNameValue;
				public Enumerator(seq11_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Term", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("term", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Prop", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("prop", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 6:
							state = 7;
							var3_bias = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("bias", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var3_bias.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Bias", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_bias.Current))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var3_bias); var3_bias = null;
							var4_comment = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("comment", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_comment.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Comment", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_comment.Current))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_comment); var4_comment = null;
							var5_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_extensionNameValue.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq7_join((Altova.Mapforce.IMFNode)(var5_extensionNameValue.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_extensionNameValue); var5_extensionNameValue = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Value", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq12_join(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_bias); var3_bias = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_comment); var4_comment = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_extensionNameValue); var5_extensionNameValue = null;
				}
			}
		}
		class seq12_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq12_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq12_join closure;
				private Altova.Mapforce.IMFNode var2_value;
				private System.Collections.IEnumerable var3_uom;
				private IEnumerator var4_if_exists;
				public Enumerator(seq12_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_value = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), closure.var1_cur)));
							var3_uom = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_value));
							var4_if_exists = ((new seq13_if_exists(var3_uom))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var4_if_exists.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box((string)(var4_if_exists.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_if_exists); var4_if_exists = null;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_value)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_if_exists); var4_if_exists = null;
				}
			}
		}
		class seq13_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_uom;

			public seq13_if_exists(
				System.Collections.IEnumerable var1_uom
			)
			{
				this.var1_uom = var1_uom;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq13_if_exists closure;
				private IEnumerator var2_uom;
				public Enumerator(seq13_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_uom))) { state = 2; goto case 2;  }
							var2_uom = (closure.var1_uom).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = "UnitofMeasureExt";
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var2_uom.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_uom.Current));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_uom); var2_uom = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_uom); var2_uom = null;
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_toolErrorModel_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_obj_toolErrorModel_Instance
			)
			{
				this.var1_obj_toolErrorModel_Instance = var1_obj_toolErrorModel_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_toolErrorModels;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_toolErrorModels = ((new main(closure.var1_obj_toolErrorModel_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_toolErrorModels.MoveNext()) { state = 3; goto case 3; }
							current = var2_toolErrorModels.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_toolErrorModels); var2_toolErrorModels = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_toolErrorModels); var2_toolErrorModels = null;
				}
			}
		}

	}
}
