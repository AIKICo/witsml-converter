////////////////////////////////////////////////////////////////////////
//
// Map14To20MapToRig.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map14To20
{

	public class Map14To20MapToRig : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_obj_rig2Instance;
		// members
		#endregion //Members


		public void Run(String obj_rig2SourceFilename, string Rig2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input obj_rig2Source = new Altova.IO.FileInput(obj_rig2SourceFilename))
			// open target stream
			using (Altova.IO.Output Rig2Target = new Altova.IO.FileOutput(Rig2TargetFilename))
			{
				// run
				Run(obj_rig2Source, Rig2Target);
			}
		}

		public void Run(Altova.IO.Input obj_rig2Source, Altova.IO.Output Rig2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + obj_rig2Source.Filename + "...\n");
			XmlDocument obj_rig2DocSourceObject = XmlTreeOperations.LoadDocument(obj_rig2Source);


			m_obj_rig2Instance = obj_rig2DocSourceObject;
			if (runDoesCloseAll)
				obj_rig2Source.Close();
				// Create the target
				XmlDocument Rig2Doc = (Rig2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? Rig2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_obj_rig2Instance, obj_rig2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, Rig2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				Rig2Doc,
				Rig2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					obj_rig2Source.Close();
					Rig2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_rig_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_obj_rig_Instance
			)
			{
				this.var1_obj_rig_Instance = var1_obj_rig_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_rigs;
				private System.Collections.IEnumerable var3_first_items;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_rigs = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("rigs", "http://www.witsml.org/schemas/1series"), closure.var1_obj_rig_Instance));
							var3_first_items = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FirstItems((new seq1_join(var2_rigs)), 1m));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Rig", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq2_join(var2_rigs, var3_first_items)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_rigs;

			public seq1_join(
				System.Collections.IEnumerable var1_rigs
			)
			{
				this.var1_rigs = var1_rigs;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_rigs;
				private IEnumerator var3_rig;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_rigs = (closure.var1_rigs).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_rigs.MoveNext()) { state = 3; goto case 3; }
							var3_rig = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("rig", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_rigs.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_rigs); var2_rigs = null;
							return false;
						case 4:
							state = 4;
							if (!var3_rig.MoveNext()) { state = 5; goto case 5; }
							current = var3_rig.Current;
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_rig); var3_rig = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_rig); var3_rig = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_rigs); var2_rigs = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_rigs;
			private readonly System.Collections.IEnumerable var2_first_items;

			public seq2_join(
				System.Collections.IEnumerable var1_rigs,
				System.Collections.IEnumerable var2_first_items
			)
			{
				this.var1_rigs = var1_rigs;
				this.var2_first_items = var2_first_items;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var3_first_items;
				private IEnumerator var4_first_items;
				private IEnumerator var5_customData;
				private IEnumerator var6_owner;
				private IEnumerator var7_typeRig;
				private IEnumerator var8_manufacturer;
				private IEnumerator var9_classRig;
				private IEnumerator var10_approvals;
				private IEnumerator var11_registration;
				private IEnumerator var12_telNumber;
				private IEnumerator var13_faxNumber;
				private IEnumerator var14_emailAddress;
				private IEnumerator var15_nameContact;
				private IEnumerator var16_ratingDrillDepth;
				private IEnumerator var17_ratingWaterDepth;
				private IEnumerator var18_isOffshore;
				private IEnumerator var19_typeDerrick;
				private IEnumerator var20_ratingDerrick;
				private IEnumerator var21_htDerrick;
				private IEnumerator var22_capWindDerrick;
				private IEnumerator var23_numCranes;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("eml", "http://www.energistics.org/energyml/data/commonv2");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateNamespace("gco", "http://www.isotc211.org/2005/gco");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateNamespace("gmd", "http://www.isotc211.org/2005/gmd");
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateNamespace("gsr", "http://www.isotc211.org/2005/gsr");
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateNamespace("gts", "http://www.isotc211.org/2005/gts");
							pos++;
							return true;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateNamespace("gml", "http://www.opengis.net/gml/3.2");
							pos++;
							return true;
						case 7:
							state = 8;
							current = Altova.Functions.Core.CreateNamespace("xlink", "http://www.w3.org/1999/xlink");
							pos++;
							return true;
						case 8:
							state = 9;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.energistics.org/energyml/data/witsmlv2 file:///D:/Repos/witsmlvalidation/witsml/energyml/2.0/data/witsml/v2.0/xsd_schemas/Rig.xsd"));
							pos++;
							return true;
						case 9:
							state = 10;
							var3_first_items = (closure.var2_first_items).GetEnumerator();
							goto case 10;
						case 10:
							state = 12;
							if (!var3_first_items.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("schemaVersion", ""), Altova.Functions.Core.Box("2.0"));
							pos++;
							return true;
						case 11:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
							var4_first_items = (closure.var2_first_items).GetEnumerator();
							goto case 14;
						case 12:
							state = 10;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uuid", ""), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 14:
							state = 16;
							if (!var4_first_items.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Aliases", "http://www.energistics.org/energyml/data/commonv2"), (new seq3_join(closure.var1_rigs, (Altova.Mapforce.IMFNode)(var4_first_items.Current))));
							pos++;
							return true;
						case 15:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
							return false;
						case 16:
							state = 17;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), (new seq4_seq_((Altova.Mapforce.IMFNode)(var4_first_items.Current))));
							pos++;
							return true;
						case 17:
							state = 18;
							var5_customData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var5_customData.MoveNext()) { state = 19; goto case 19; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:CustomData", "http://www.energistics.org/energyml/data/commonv2"), tbf.tbf1_CustomData.Eval((Altova.Mapforce.IMFNode)(var5_customData.Current)));
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var5_customData); var5_customData = null;
							var6_owner = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("owner", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 21;
						case 21:
							state = 21;
							if (!var6_owner.MoveNext()) { state = 22; goto case 22; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Owner", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_owner.Current))));
							pos++;
							return true;
						case 22:
							state = 24;
							Altova.Mapforce.MFEnumerator.Dispose(var6_owner); var6_owner = null;
							var7_typeRig = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("typeRig", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 24;
						case 24:
							state = 24;
							if (!var7_typeRig.MoveNext()) { state = 25; goto case 25; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TypeRig", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_typeRig.Current))));
							pos++;
							return true;
						case 25:
							state = 27;
							Altova.Mapforce.MFEnumerator.Dispose(var7_typeRig); var7_typeRig = null;
							var8_manufacturer = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("manufacturer", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 27;
						case 27:
							state = 27;
							if (!var8_manufacturer.MoveNext()) { state = 28; goto case 28; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Manufacturer", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_manufacturer.Current))));
							pos++;
							return true;
						case 28:
							state = 30;
							Altova.Mapforce.MFEnumerator.Dispose(var8_manufacturer); var8_manufacturer = null;
							var9_classRig = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("classRig", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 30;
						case 30:
							state = 30;
							if (!var9_classRig.MoveNext()) { state = 31; goto case 31; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ClassRig", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var9_classRig.Current))));
							pos++;
							return true;
						case 31:
							state = 33;
							Altova.Mapforce.MFEnumerator.Dispose(var9_classRig); var9_classRig = null;
							var10_approvals = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("approvals", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 33;
						case 33:
							state = 33;
							if (!var10_approvals.MoveNext()) { state = 34; goto case 34; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Approvals", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var10_approvals.Current))));
							pos++;
							return true;
						case 34:
							state = 36;
							Altova.Mapforce.MFEnumerator.Dispose(var10_approvals); var10_approvals = null;
							var11_registration = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("registration", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 36;
						case 36:
							state = 36;
							if (!var11_registration.MoveNext()) { state = 37; goto case 37; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Registration", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var11_registration.Current))));
							pos++;
							return true;
						case 37:
							state = 39;
							Altova.Mapforce.MFEnumerator.Dispose(var11_registration); var11_registration = null;
							var12_telNumber = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("telNumber", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 39;
						case 39:
							state = 39;
							if (!var12_telNumber.MoveNext()) { state = 40; goto case 40; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TelNumber", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var12_telNumber.Current))));
							pos++;
							return true;
						case 40:
							state = 42;
							Altova.Mapforce.MFEnumerator.Dispose(var12_telNumber); var12_telNumber = null;
							var13_faxNumber = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("faxNumber", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 42;
						case 42:
							state = 42;
							if (!var13_faxNumber.MoveNext()) { state = 43; goto case 43; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FaxNumber", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_faxNumber.Current))));
							pos++;
							return true;
						case 43:
							state = 45;
							Altova.Mapforce.MFEnumerator.Dispose(var13_faxNumber); var13_faxNumber = null;
							var14_emailAddress = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("emailAddress", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 45;
						case 45:
							state = 45;
							if (!var14_emailAddress.MoveNext()) { state = 46; goto case 46; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EmailAddress", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var14_emailAddress.Current))));
							pos++;
							return true;
						case 46:
							state = 48;
							Altova.Mapforce.MFEnumerator.Dispose(var14_emailAddress); var14_emailAddress = null;
							var15_nameContact = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nameContact", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 48;
						case 48:
							state = 48;
							if (!var15_nameContact.MoveNext()) { state = 49; goto case 49; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NameContact", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var15_nameContact.Current))));
							pos++;
							return true;
						case 49:
							state = 51;
							Altova.Mapforce.MFEnumerator.Dispose(var15_nameContact); var15_nameContact = null;
							var16_ratingDrillDepth = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ratingDrillDepth", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 51;
						case 51:
							state = 51;
							if (!var16_ratingDrillDepth.MoveNext()) { state = 52; goto case 52; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("RatingDrillDepth", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_LengthMeasure.Eval((Altova.Mapforce.IMFNode)(var16_ratingDrillDepth.Current)));
							pos++;
							return true;
						case 52:
							state = 54;
							Altova.Mapforce.MFEnumerator.Dispose(var16_ratingDrillDepth); var16_ratingDrillDepth = null;
							var17_ratingWaterDepth = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ratingWaterDepth", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 54;
						case 54:
							state = 54;
							if (!var17_ratingWaterDepth.MoveNext()) { state = 55; goto case 55; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("RatingWaterDepth", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_LengthMeasure.Eval((Altova.Mapforce.IMFNode)(var17_ratingWaterDepth.Current)));
							pos++;
							return true;
						case 55:
							state = 57;
							Altova.Mapforce.MFEnumerator.Dispose(var17_ratingWaterDepth); var17_ratingWaterDepth = null;
							var18_isOffshore = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("isOffshore", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 57;
						case 57:
							state = 57;
							if (!var18_isOffshore.MoveNext()) { state = 58; goto case 58; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("IsOffshore", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var18_isOffshore.Current))))));
							pos++;
							return true;
						case 58:
							state = 60;
							Altova.Mapforce.MFEnumerator.Dispose(var18_isOffshore); var18_isOffshore = null;
							var19_typeDerrick = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("typeDerrick", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 60;
						case 60:
							state = 60;
							if (!var19_typeDerrick.MoveNext()) { state = 61; goto case 61; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TypeDerrick", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var19_typeDerrick.Current))));
							pos++;
							return true;
						case 61:
							state = 63;
							Altova.Mapforce.MFEnumerator.Dispose(var19_typeDerrick); var19_typeDerrick = null;
							var20_ratingDerrick = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ratingDerrick", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 63;
						case 63:
							state = 63;
							if (!var20_ratingDerrick.MoveNext()) { state = 64; goto case 64; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("RatingDerrick", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_ForceMeasure.Eval((Altova.Mapforce.IMFNode)(var20_ratingDerrick.Current)));
							pos++;
							return true;
						case 64:
							state = 66;
							Altova.Mapforce.MFEnumerator.Dispose(var20_ratingDerrick); var20_ratingDerrick = null;
							var21_htDerrick = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("htDerrick", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 66;
						case 66:
							state = 66;
							if (!var21_htDerrick.MoveNext()) { state = 67; goto case 67; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("HtDerrick", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_LengthMeasure.Eval((Altova.Mapforce.IMFNode)(var21_htDerrick.Current)));
							pos++;
							return true;
						case 67:
							state = 69;
							Altova.Mapforce.MFEnumerator.Dispose(var21_htDerrick); var21_htDerrick = null;
							var22_capWindDerrick = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("capWindDerrick", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 69;
						case 69:
							state = 69;
							if (!var22_capWindDerrick.MoveNext()) { state = 70; goto case 70; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CapWindDerrick", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf4_LengthPerTimeMeasure.Eval((Altova.Mapforce.IMFNode)(var22_capWindDerrick.Current)));
							pos++;
							return true;
						case 70:
							state = 72;
							Altova.Mapforce.MFEnumerator.Dispose(var22_capWindDerrick); var22_capWindDerrick = null;
							var23_numCranes = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("numCranes", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 72;
						case 72:
							state = 72;
							if (!var23_numCranes.MoveNext()) { state = 73; goto case 73; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NumCranes", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var23_numCranes.Current))))))))));
							pos++;
							return true;
						case 73:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var23_numCranes); var23_numCranes = null;
							goto case 14;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_customData); var5_customData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_owner); var6_owner = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_typeRig); var7_typeRig = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_manufacturer); var8_manufacturer = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_classRig); var9_classRig = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_approvals); var10_approvals = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_registration); var11_registration = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_telNumber); var12_telNumber = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_faxNumber); var13_faxNumber = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_emailAddress); var14_emailAddress = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_nameContact); var15_nameContact = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_ratingDrillDepth); var16_ratingDrillDepth = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_ratingWaterDepth); var17_ratingWaterDepth = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_isOffshore); var18_isOffshore = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_typeDerrick); var19_typeDerrick = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_ratingDerrick); var20_ratingDerrick = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_htDerrick); var21_htDerrick = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_capWindDerrick); var22_capWindDerrick = null;
					Altova.Mapforce.MFEnumerator.Dispose(var23_numCranes); var23_numCranes = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
				}
			}
		}
		class seq3_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_rigs;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq3_join(
				System.Collections.IEnumerable var1_rigs,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_rigs = var1_rigs;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_join closure;
				private IEnumerator var3_rigs;
				private IEnumerator var4_uid;
				public Enumerator(seq3_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_rigs = (closure.var1_rigs).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_rigs.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("authority", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("version", ""), (Altova.Mapforce.IMFNode)(var3_rigs.Current))))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_rigs); var3_rigs = null;
							var4_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var2_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var4_uid.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Identifier", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_uid.Current))));
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Identifier is created from the uid of the input scheme"));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_rigs); var3_rigs = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
				}
			}
		}
		class seq4_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq4_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_seq_ closure;
				public Enumerator(seq4_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Originator", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("1411_input"));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Format", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Mapforce"));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_rig_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_obj_rig_Instance
			)
			{
				this.var1_obj_rig_Instance = var1_obj_rig_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_rigs;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_rigs = ((new main(closure.var1_obj_rig_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_rigs.MoveNext()) { state = 3; goto case 3; }
							current = var2_rigs.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_rigs); var2_rigs = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_rigs); var2_rigs = null;
				}
			}
		}

	}
}
