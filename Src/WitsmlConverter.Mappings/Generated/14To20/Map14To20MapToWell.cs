////////////////////////////////////////////////////////////////////////
//
// Map14To20MapToWell.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map14To20
{

	public class Map14To20MapToWell : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_obj_well2Instance;
		// members
		#endregion //Members


		public void Run(String obj_well2SourceFilename, string Well2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input obj_well2Source = new Altova.IO.FileInput(obj_well2SourceFilename))
			// open target stream
			using (Altova.IO.Output Well2Target = new Altova.IO.FileOutput(Well2TargetFilename))
			{
				// run
				Run(obj_well2Source, Well2Target);
			}
		}

		public void Run(Altova.IO.Input obj_well2Source, Altova.IO.Output Well2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + obj_well2Source.Filename + "...\n");
			XmlDocument obj_well2DocSourceObject = XmlTreeOperations.LoadDocument(obj_well2Source);


			m_obj_well2Instance = obj_well2DocSourceObject;
			if (runDoesCloseAll)
				obj_well2Source.Close();
				// Create the target
				XmlDocument Well2Doc = (Well2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? Well2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_obj_well2Instance, obj_well2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, Well2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				Well2Doc,
				Well2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					obj_well2Source.Close();
					Well2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_well_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_obj_well_Instance
			)
			{
				this.var1_obj_well_Instance = var1_obj_well_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_wells;
				private System.Collections.IEnumerable var3_first_items;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_wells = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wells", "http://www.witsml.org/schemas/1series"), closure.var1_obj_well_Instance));
							var3_first_items = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FirstItems((new seq1_join(var2_wells)), 1m));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Well", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq2_join(var2_wells, var3_first_items)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wells;

			public seq1_join(
				System.Collections.IEnumerable var1_wells
			)
			{
				this.var1_wells = var1_wells;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_wells;
				private IEnumerator var3_well;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_wells = (closure.var1_wells).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_wells.MoveNext()) { state = 3; goto case 3; }
							var3_well = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("well", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_wells.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_wells); var2_wells = null;
							return false;
						case 4:
							state = 4;
							if (!var3_well.MoveNext()) { state = 5; goto case 5; }
							current = var3_well.Current;
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_well); var3_well = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_well); var3_well = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_wells); var2_wells = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wells;
			private readonly System.Collections.IEnumerable var2_first_items;

			public seq2_join(
				System.Collections.IEnumerable var1_wells,
				System.Collections.IEnumerable var2_first_items
			)
			{
				this.var1_wells = var1_wells;
				this.var2_first_items = var2_first_items;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var3_first_items;
				private IEnumerator var4_first_items;
				private System.Collections.IEnumerable var5_commonData;
				private System.Collections.IEnumerable var6_wellLocation;
				private System.Collections.IEnumerable var7_referencePoint;
				private System.Collections.IEnumerable var8_wellDatum;
				private System.Collections.IEnumerable var9_wellCRS;
				private IEnumerator var10_customData;
				private IEnumerator var11_commonData;
				private IEnumerator var12_extensionNameValue;
				private IEnumerator var13_nameLegal;
				private IEnumerator var14_numLicense;
				private IEnumerator var15_numGovt;
				private IEnumerator var16_dTimLicense;
				private IEnumerator var17_field;
				private IEnumerator var18_country;
				private IEnumerator var19_state;
				private IEnumerator var20_county;
				private IEnumerator var21_region;
				private IEnumerator var22_district;
				private IEnumerator var23_block;
				private IEnumerator var24_timeZone;
				private IEnumerator var25_operator;
				private IEnumerator var26_operatorDiv;
				private IEnumerator var27_pcInterest;
				private IEnumerator var28_numAPI;
				private IEnumerator var29_statusWell;
				private IEnumerator var30_purposeWell;
				private IEnumerator var31_fluidWell;
				private IEnumerator var32_directionWell;
				private IEnumerator var33_dTimSpud;
				private IEnumerator var34_dTimPa;
				private IEnumerator var35_waterDepth;
				private IEnumerator var36_filter;
				private System.Collections.IEnumerable var37_latitude;
				private IEnumerator var39_wellLocation;
				private System.Collections.IEnumerable var38_longitude;
				private IEnumerator var40_latitude;
				private IEnumerator var41_wellCRS;
				private IEnumerator var42_mapProjection;
				private IEnumerator var44_wellPublicLandSurvey;
				private System.Collections.IEnumerable var43_nameCRS;
				private IEnumerator var45_referencePoint;
				private IEnumerator var46_wellheadElevation;
				private System.Collections.IEnumerable var47_datum;
				private IEnumerator var48_wellDatum;
				private System.Collections.IEnumerable var49_horizontalLocation;
				private IEnumerator var50_groundElevation;
				private System.Collections.IEnumerable var51_datum;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("eml", "http://www.energistics.org/energyml/data/commonv2");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateNamespace("gco", "http://www.isotc211.org/2005/gco");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateNamespace("gmd", "http://www.isotc211.org/2005/gmd");
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateNamespace("gsr", "http://www.isotc211.org/2005/gsr");
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateNamespace("gts", "http://www.isotc211.org/2005/gts");
							pos++;
							return true;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateNamespace("gml", "http://www.opengis.net/gml/3.2");
							pos++;
							return true;
						case 7:
							state = 8;
							current = Altova.Functions.Core.CreateNamespace("xlink", "http://www.w3.org/1999/xlink");
							pos++;
							return true;
						case 8:
							state = 9;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.energistics.org/energyml/data/witsmlv2 file:///D:/Repos/witsmlvalidation/witsml/energyml/2.0/data/witsml/v2.0/xsd_schemas/Well.xsd"));
							pos++;
							return true;
						case 9:
							state = 10;
							var3_first_items = (closure.var2_first_items).GetEnumerator();
							goto case 10;
						case 10:
							state = 12;
							if (!var3_first_items.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("schemaVersion", ""), Altova.Functions.Core.Box("2.0"));
							pos++;
							return true;
						case 11:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
							var4_first_items = (closure.var2_first_items).GetEnumerator();
							goto case 14;
						case 12:
							state = 10;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uuid", ""), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 14:
							state = 16;
							if (!var4_first_items.MoveNext()) { state = 15; goto case 15; }
							var5_commonData = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("commonData", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current)));
							var6_wellLocation = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wellLocation", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current)));
							var7_referencePoint = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("referencePoint", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current)));
							var8_wellDatum = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wellDatum", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current)));
							var9_wellCRS = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wellCRS", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Aliases", "http://www.energistics.org/energyml/data/commonv2"), (new seq3_join((Altova.Mapforce.IMFNode)(var4_first_items.Current), closure.var1_wells)));
							pos++;
							return true;
						case 15:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
							return false;
						case 16:
							state = 17;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), (new seq4_join((Altova.Mapforce.IMFNode)(var4_first_items.Current), var5_commonData)));
							pos++;
							return true;
						case 17:
							state = 18;
							var10_customData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var10_customData.MoveNext()) { state = 19; goto case 19; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:CustomData", "http://www.energistics.org/energyml/data/commonv2"), tbf.tbf1_CustomData.Eval((Altova.Mapforce.IMFNode)(var10_customData.Current)));
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var10_customData); var10_customData = null;
							var11_commonData = (var5_commonData).GetEnumerator();
							goto case 21;
						case 21:
							state = 23;
							if (!var11_commonData.MoveNext()) { state = 22; goto case 22; }
							var12_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var11_commonData.Current))).GetEnumerator();
							goto case 23;
						case 22:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var11_commonData); var11_commonData = null;
							var13_nameLegal = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nameLegal", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 26;
						case 23:
							state = 23;
							if (!var12_extensionNameValue.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ExtensionNameValue", "http://www.energistics.org/energyml/data/commonv2"), (new seq5_join((Altova.Mapforce.IMFNode)(var12_extensionNameValue.Current))));
							pos++;
							return true;
						case 24:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var12_extensionNameValue); var12_extensionNameValue = null;
							goto case 21;
						case 26:
							state = 26;
							if (!var13_nameLegal.MoveNext()) { state = 27; goto case 27; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NameLegal", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_nameLegal.Current))));
							pos++;
							return true;
						case 27:
							state = 29;
							Altova.Mapforce.MFEnumerator.Dispose(var13_nameLegal); var13_nameLegal = null;
							var14_numLicense = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("numLicense", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 29;
						case 29:
							state = 29;
							if (!var14_numLicense.MoveNext()) { state = 30; goto case 30; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NumLicense", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var14_numLicense.Current))));
							pos++;
							return true;
						case 30:
							state = 32;
							Altova.Mapforce.MFEnumerator.Dispose(var14_numLicense); var14_numLicense = null;
							var15_numGovt = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("numGovt", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 32;
						case 32:
							state = 32;
							if (!var15_numGovt.MoveNext()) { state = 33; goto case 33; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NumGovt", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var15_numGovt.Current))));
							pos++;
							return true;
						case 33:
							state = 35;
							Altova.Mapforce.MFEnumerator.Dispose(var15_numGovt); var15_numGovt = null;
							var16_dTimLicense = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTimLicense", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 35;
						case 35:
							state = 35;
							if (!var16_dTimLicense.MoveNext()) { state = 36; goto case 36; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DTimLicense", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var16_dTimLicense.Current))))));
							pos++;
							return true;
						case 36:
							state = 38;
							Altova.Mapforce.MFEnumerator.Dispose(var16_dTimLicense); var16_dTimLicense = null;
							var17_field = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("field", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 38;
						case 38:
							state = 38;
							if (!var17_field.MoveNext()) { state = 39; goto case 39; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Field", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var17_field.Current))));
							pos++;
							return true;
						case 39:
							state = 41;
							Altova.Mapforce.MFEnumerator.Dispose(var17_field); var17_field = null;
							var18_country = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("country", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 41;
						case 41:
							state = 41;
							if (!var18_country.MoveNext()) { state = 42; goto case 42; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Country", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var18_country.Current))));
							pos++;
							return true;
						case 42:
							state = 44;
							Altova.Mapforce.MFEnumerator.Dispose(var18_country); var18_country = null;
							var19_state = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("state", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 44;
						case 44:
							state = 44;
							if (!var19_state.MoveNext()) { state = 45; goto case 45; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("State", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var19_state.Current))));
							pos++;
							return true;
						case 45:
							state = 47;
							Altova.Mapforce.MFEnumerator.Dispose(var19_state); var19_state = null;
							var20_county = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("county", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 47;
						case 47:
							state = 47;
							if (!var20_county.MoveNext()) { state = 48; goto case 48; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("County", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var20_county.Current))));
							pos++;
							return true;
						case 48:
							state = 50;
							Altova.Mapforce.MFEnumerator.Dispose(var20_county); var20_county = null;
							var21_region = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("region", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 50;
						case 50:
							state = 50;
							if (!var21_region.MoveNext()) { state = 51; goto case 51; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Region", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var21_region.Current))));
							pos++;
							return true;
						case 51:
							state = 53;
							Altova.Mapforce.MFEnumerator.Dispose(var21_region); var21_region = null;
							var22_district = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("district", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 53;
						case 53:
							state = 53;
							if (!var22_district.MoveNext()) { state = 54; goto case 54; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("District", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var22_district.Current))));
							pos++;
							return true;
						case 54:
							state = 56;
							Altova.Mapforce.MFEnumerator.Dispose(var22_district); var22_district = null;
							var23_block = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("block", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 56;
						case 56:
							state = 56;
							if (!var23_block.MoveNext()) { state = 57; goto case 57; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Block", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var23_block.Current))));
							pos++;
							return true;
						case 57:
							state = 59;
							Altova.Mapforce.MFEnumerator.Dispose(var23_block); var23_block = null;
							var24_timeZone = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("timeZone", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 59;
						case 59:
							state = 59;
							if (!var24_timeZone.MoveNext()) { state = 60; goto case 60; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TimeZone", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var24_timeZone.Current))));
							pos++;
							return true;
						case 60:
							state = 62;
							Altova.Mapforce.MFEnumerator.Dispose(var24_timeZone); var24_timeZone = null;
							var25_operator = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("operator", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 62;
						case 62:
							state = 62;
							if (!var25_operator.MoveNext()) { state = 63; goto case 63; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Operator", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var25_operator.Current))));
							pos++;
							return true;
						case 63:
							state = 65;
							Altova.Mapforce.MFEnumerator.Dispose(var25_operator); var25_operator = null;
							var26_operatorDiv = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("operatorDiv", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 65;
						case 65:
							state = 65;
							if (!var26_operatorDiv.MoveNext()) { state = 66; goto case 66; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("OperatorDiv", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var26_operatorDiv.Current))));
							pos++;
							return true;
						case 66:
							state = 68;
							Altova.Mapforce.MFEnumerator.Dispose(var26_operatorDiv); var26_operatorDiv = null;
							var27_pcInterest = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("pcInterest", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 68;
						case 68:
							state = 68;
							if (!var27_pcInterest.MoveNext()) { state = 69; goto case 69; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("PcInterest", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_DimensionlessMeasure.Eval((Altova.Mapforce.IMFNode)(var27_pcInterest.Current)));
							pos++;
							return true;
						case 69:
							state = 71;
							Altova.Mapforce.MFEnumerator.Dispose(var27_pcInterest); var27_pcInterest = null;
							var28_numAPI = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("numAPI", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 71;
						case 71:
							state = 71;
							if (!var28_numAPI.MoveNext()) { state = 72; goto case 72; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NumAPI", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var28_numAPI.Current))));
							pos++;
							return true;
						case 72:
							state = 74;
							Altova.Mapforce.MFEnumerator.Dispose(var28_numAPI); var28_numAPI = null;
							var29_statusWell = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("statusWell", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 74;
						case 74:
							state = 74;
							if (!var29_statusWell.MoveNext()) { state = 75; goto case 75; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("StatusWell", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var29_statusWell.Current))));
							pos++;
							return true;
						case 75:
							state = 77;
							Altova.Mapforce.MFEnumerator.Dispose(var29_statusWell); var29_statusWell = null;
							var30_purposeWell = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("purposeWell", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 77;
						case 77:
							state = 77;
							if (!var30_purposeWell.MoveNext()) { state = 78; goto case 78; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("PurposeWell", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var30_purposeWell.Current))));
							pos++;
							return true;
						case 78:
							state = 80;
							Altova.Mapforce.MFEnumerator.Dispose(var30_purposeWell); var30_purposeWell = null;
							var31_fluidWell = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("fluidWell", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 80;
						case 80:
							state = 80;
							if (!var31_fluidWell.MoveNext()) { state = 81; goto case 81; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FluidWell", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var31_fluidWell.Current))));
							pos++;
							return true;
						case 81:
							state = 83;
							Altova.Mapforce.MFEnumerator.Dispose(var31_fluidWell); var31_fluidWell = null;
							var32_directionWell = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("directionWell", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 83;
						case 83:
							state = 83;
							if (!var32_directionWell.MoveNext()) { state = 84; goto case 84; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DirectionWell", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var32_directionWell.Current))));
							pos++;
							return true;
						case 84:
							state = 86;
							Altova.Mapforce.MFEnumerator.Dispose(var32_directionWell); var32_directionWell = null;
							var33_dTimSpud = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTimSpud", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 86;
						case 86:
							state = 86;
							if (!var33_dTimSpud.MoveNext()) { state = 87; goto case 87; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DTimSpud", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var33_dTimSpud.Current))))));
							pos++;
							return true;
						case 87:
							state = 89;
							Altova.Mapforce.MFEnumerator.Dispose(var33_dTimSpud); var33_dTimSpud = null;
							var34_dTimPa = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTimPa", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 89;
						case 89:
							state = 89;
							if (!var34_dTimPa.MoveNext()) { state = 90; goto case 90; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DTimPa", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var34_dTimPa.Current))))));
							pos++;
							return true;
						case 90:
							state = 92;
							Altova.Mapforce.MFEnumerator.Dispose(var34_dTimPa); var34_dTimPa = null;
							var35_waterDepth = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("waterDepth", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 92;
						case 92:
							state = 92;
							if (!var35_waterDepth.MoveNext()) { state = 93; goto case 93; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("WaterDepth", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_LengthMeasure.Eval((Altova.Mapforce.IMFNode)(var35_waterDepth.Current)));
							pos++;
							return true;
						case 93:
							state = 95;
							Altova.Mapforce.MFEnumerator.Dispose(var35_waterDepth); var35_waterDepth = null;
							var36_filter = (var6_wellLocation).GetEnumerator();
							goto case 95;
						case 95:
							state = 95;
							if (!var36_filter.MoveNext()) { state = 96; goto case 96; }
							if (!(Altova.Functions.Core.LogicalNot((bool)Altova.Functions.Core.First((new seq7_CoreAny((new seq6_map((Altova.Mapforce.IMFNode)(var36_filter.Current))))))))) { state = 95; goto case 95;  }
							var37_latitude = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("latitude", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var36_filter.Current)));
							var38_longitude = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("longitude", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var36_filter.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GeographicLocationWGS84", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq8_join((Altova.Mapforce.IMFNode)(var36_filter.Current), var8_wellDatum, var38_longitude, var37_latitude)));
							pos++;
							return true;
						case 96:
							state = 98;
							Altova.Mapforce.MFEnumerator.Dispose(var36_filter); var36_filter = null;
							var39_wellLocation = (var6_wellLocation).GetEnumerator();
							goto case 98;
						case 98:
							state = 100;
							if (!var39_wellLocation.MoveNext()) { state = 99; goto case 99; }
							var40_latitude = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("latitude", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var39_wellLocation.Current))).GetEnumerator();
							goto case 100;
						case 99:
							state = 103;
							Altova.Mapforce.MFEnumerator.Dispose(var39_wellLocation); var39_wellLocation = null;
							var41_wellCRS = (var9_wellCRS).GetEnumerator();
							goto case 103;
						case 100:
							state = 100;
							if (!var40_latitude.MoveNext()) { state = 101; goto case 101; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("WellLocation", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq23_join((Altova.Mapforce.IMFNode)(var40_latitude.Current), (Altova.Mapforce.IMFNode)(var39_wellLocation.Current), var7_referencePoint)));
							pos++;
							return true;
						case 101:
							state = 98;
							Altova.Mapforce.MFEnumerator.Dispose(var40_latitude); var40_latitude = null;
							goto case 98;
						case 103:
							state = 105;
							if (!var41_wellCRS.MoveNext()) { state = 104; goto case 104; }
							var42_mapProjection = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mapProjection", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var41_wellCRS.Current))).GetEnumerator();
							goto case 105;
						case 104:
							state = 108;
							Altova.Mapforce.MFEnumerator.Dispose(var41_wellCRS); var41_wellCRS = null;
							var44_wellPublicLandSurvey = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wellPublicLandSurveySystemLocation", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 108;
						case 105:
							state = 105;
							if (!var42_mapProjection.MoveNext()) { state = 106; goto case 106; }
							var43_nameCRS = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nameCRS", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var42_mapProjection.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("WellLocation", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq28_join(var7_referencePoint, var6_wellLocation, var43_nameCRS)));
							pos++;
							return true;
						case 106:
							state = 103;
							Altova.Mapforce.MFEnumerator.Dispose(var42_mapProjection); var42_mapProjection = null;
							goto case 103;
						case 108:
							state = 108;
							if (!var44_wellPublicLandSurvey.MoveNext()) { state = 109; goto case 109; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("WellPublicLandSurveySystemLocation", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq32_join((Altova.Mapforce.IMFNode)(var44_wellPublicLandSurvey.Current))));
							pos++;
							return true;
						case 109:
							state = 111;
							Altova.Mapforce.MFEnumerator.Dispose(var44_wellPublicLandSurvey); var44_wellPublicLandSurvey = null;
							var45_referencePoint = (var7_referencePoint).GetEnumerator();
							goto case 111;
						case 111:
							state = 111;
							if (!var45_referencePoint.MoveNext()) { state = 112; goto case 112; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ReferencePoint", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq33_join((Altova.Mapforce.IMFNode)(var45_referencePoint.Current), var9_wellCRS, var8_wellDatum, var6_wellLocation)));
							pos++;
							return true;
						case 112:
							state = 114;
							Altova.Mapforce.MFEnumerator.Dispose(var45_referencePoint); var45_referencePoint = null;
							var46_wellheadElevation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wellheadElevation", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 114;
						case 114:
							state = 114;
							if (!var46_wellheadElevation.MoveNext()) { state = 115; goto case 115; }
							var47_datum = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("datum", ""), (Altova.Mapforce.IMFNode)(var46_wellheadElevation.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("WellheadElevation", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq42_join(var47_datum, (Altova.Mapforce.IMFNode)(var46_wellheadElevation.Current))));
							pos++;
							return true;
						case 115:
							state = 117;
							Altova.Mapforce.MFEnumerator.Dispose(var46_wellheadElevation); var46_wellheadElevation = null;
							var48_wellDatum = (var8_wellDatum).GetEnumerator();
							goto case 117;
						case 117:
							state = 117;
							if (!var48_wellDatum.MoveNext()) { state = 118; goto case 118; }
							var49_horizontalLocation = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("horizontalLocation", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var48_wellDatum.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("WellDatum", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq44_join((Altova.Mapforce.IMFNode)(var48_wellDatum.Current), var6_wellLocation, var49_horizontalLocation)));
							pos++;
							return true;
						case 118:
							state = 120;
							Altova.Mapforce.MFEnumerator.Dispose(var48_wellDatum); var48_wellDatum = null;
							var50_groundElevation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("groundElevation", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 120;
						case 120:
							state = 120;
							if (!var50_groundElevation.MoveNext()) { state = 121; goto case 121; }
							var51_datum = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("datum", ""), (Altova.Mapforce.IMFNode)(var50_groundElevation.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GroundElevation", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq42_join(var51_datum, (Altova.Mapforce.IMFNode)(var50_groundElevation.Current))));
							pos++;
							return true;
						case 121:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var50_groundElevation); var50_groundElevation = null;
							goto case 14;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_customData); var10_customData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_extensionNameValue); var12_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_commonData); var11_commonData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_nameLegal); var13_nameLegal = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_numLicense); var14_numLicense = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_numGovt); var15_numGovt = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_dTimLicense); var16_dTimLicense = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_field); var17_field = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_country); var18_country = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_state); var19_state = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_county); var20_county = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_region); var21_region = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_district); var22_district = null;
					Altova.Mapforce.MFEnumerator.Dispose(var23_block); var23_block = null;
					Altova.Mapforce.MFEnumerator.Dispose(var24_timeZone); var24_timeZone = null;
					Altova.Mapforce.MFEnumerator.Dispose(var25_operator); var25_operator = null;
					Altova.Mapforce.MFEnumerator.Dispose(var26_operatorDiv); var26_operatorDiv = null;
					Altova.Mapforce.MFEnumerator.Dispose(var27_pcInterest); var27_pcInterest = null;
					Altova.Mapforce.MFEnumerator.Dispose(var28_numAPI); var28_numAPI = null;
					Altova.Mapforce.MFEnumerator.Dispose(var29_statusWell); var29_statusWell = null;
					Altova.Mapforce.MFEnumerator.Dispose(var30_purposeWell); var30_purposeWell = null;
					Altova.Mapforce.MFEnumerator.Dispose(var31_fluidWell); var31_fluidWell = null;
					Altova.Mapforce.MFEnumerator.Dispose(var32_directionWell); var32_directionWell = null;
					Altova.Mapforce.MFEnumerator.Dispose(var33_dTimSpud); var33_dTimSpud = null;
					Altova.Mapforce.MFEnumerator.Dispose(var34_dTimPa); var34_dTimPa = null;
					Altova.Mapforce.MFEnumerator.Dispose(var35_waterDepth); var35_waterDepth = null;
					Altova.Mapforce.MFEnumerator.Dispose(var36_filter); var36_filter = null;
					Altova.Mapforce.MFEnumerator.Dispose(var40_latitude); var40_latitude = null;
					Altova.Mapforce.MFEnumerator.Dispose(var39_wellLocation); var39_wellLocation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var42_mapProjection); var42_mapProjection = null;
					Altova.Mapforce.MFEnumerator.Dispose(var41_wellCRS); var41_wellCRS = null;
					Altova.Mapforce.MFEnumerator.Dispose(var44_wellPublicLandSurvey); var44_wellPublicLandSurvey = null;
					Altova.Mapforce.MFEnumerator.Dispose(var45_referencePoint); var45_referencePoint = null;
					Altova.Mapforce.MFEnumerator.Dispose(var46_wellheadElevation); var46_wellheadElevation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var48_wellDatum); var48_wellDatum = null;
					Altova.Mapforce.MFEnumerator.Dispose(var50_groundElevation); var50_groundElevation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
				}
			}
		}
		class seq3_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_wells;

			public seq3_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_wells
			)
			{
				this.var1_cur = var1_cur;
				this.var2_wells = var2_wells;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_join closure;
				private IEnumerator var3_wells;
				private IEnumerator var4_uid;
				public Enumerator(seq3_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_wells = (closure.var2_wells).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_wells.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("authority", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("version", ""), (Altova.Mapforce.IMFNode)(var3_wells.Current))))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_wells); var3_wells = null;
							var4_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var4_uid.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Identifier", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_uid.Current))));
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Identifier is created from the uid of the input scheme"));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_wells); var3_wells = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
				}
			}
		}
		class seq4_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_commonData;

			public seq4_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_commonData
			)
			{
				this.var1_cur = var1_cur;
				this.var2_commonData = var2_commonData;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_join closure;
				private IEnumerator var3_commonData;
				private IEnumerator var4_dTimLastChange;
				public Enumerator(seq4_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Originator", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("1411_input"));
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Format", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Mapforce"));
							pos++;
							return true;
						case 4:
							state = 5;
							var3_commonData = (closure.var2_commonData).GetEnumerator();
							goto case 5;
						case 5:
							state = 7;
							if (!var3_commonData.MoveNext()) { state = 6; goto case 6; }
							var4_dTimLastChange = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTimLastChange", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_commonData.Current))).GetEnumerator();
							goto case 7;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_commonData); var3_commonData = null;
							return false;
						case 7:
							state = 7;
							if (!var4_dTimLastChange.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_dTimLastChange.Current))))));
							pos++;
							return true;
						case 8:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var4_dTimLastChange); var4_dTimLastChange = null;
							goto case 5;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_dTimLastChange); var4_dTimLastChange = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_commonData); var3_commonData = null;
				}
			}
		}
		class seq5_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq5_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_join closure;
				private IEnumerator var2_measureClass;
				private IEnumerator var3_dTim;
				private IEnumerator var4_index;
				private IEnumerator var5_description;
				public Enumerator(seq5_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Name", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Value", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_measureClass = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var2_measureClass.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_measureClass.Current))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_measureClass); var2_measureClass = null;
							var3_dTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var3_dTim.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:DTim", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_dTim.Current))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var3_dTim); var3_dTim = null;
							var4_index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_index.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Index", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_index.Current))))))))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_index); var4_index = null;
							var5_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_description.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_description.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_description); var5_description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_measureClass); var2_measureClass = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_dTim); var3_dTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_index); var4_index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_description); var5_description = null;
				}
			}
		}
		class seq6_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq6_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_map closure;
				private IEnumerator var2_filter;
				public Enumerator(seq6_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_filter = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("latitude", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_filter.MoveNext()) { state = 3; goto case 3; }
							if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"), (Altova.Mapforce.IMFNode)(var2_filter.Current))))) { state = 2; goto case 2;  }
							current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"), (Altova.Mapforce.IMFNode)(var2_filter.Current)))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_filter); var2_filter = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_filter); var2_filter = null;
				}
			}
		}
		class seq7_CoreAny : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_sequence;

			public seq7_CoreAny(
				System.Collections.IEnumerable var1_sequence
			)
			{
				this.var1_sequence = var1_sequence;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_CoreAny closure;
				private IEnumerator var2_enum;
				public Enumerator(seq7_CoreAny closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_enum = (closure.var1_sequence).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_enum.MoveNext()) { state = 3; goto case 3; }
							if (!((bool)(var2_enum.Current))) { state = 2; goto case 2;  }
							current = Altova.CoreTypes.ParseBoolean("true");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.CoreTypes.ParseBoolean("false");
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_enum); var2_enum = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_enum); var2_enum = null;
				}
			}
		}
		class seq8_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_wellDatum;
			private readonly System.Collections.IEnumerable var3_longitude;
			private readonly System.Collections.IEnumerable var4_latitude;

			public seq8_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_wellDatum,
				System.Collections.IEnumerable var3_longitude,
				System.Collections.IEnumerable var4_latitude
			)
			{
				this.var1_cur = var1_cur;
				this.var2_wellDatum = var2_wellDatum;
				this.var3_longitude = var3_longitude;
				this.var4_latitude = var4_latitude;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq8_join closure;
				private IEnumerator var5_uid;
				private IEnumerator var6_original;
				private IEnumerator var7_description;
				private IEnumerator var8_extensionNameValue;
				public Enumerator(seq8_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var5_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var5_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var5_uid); var5_uid = null;
							var6_original = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("original", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var6_original.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Original", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_original.Current))))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var6_original); var6_original = null;
							var7_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var7_description.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_description.Current))));
							pos++;
							return true;
						case 9:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var7_description); var7_description = null;
							var8_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var8_extensionNameValue.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_join((Altova.Mapforce.IMFNode)(var8_extensionNameValue.Current))));
							pos++;
							return true;
						case 12:
							state = 16;
							Altova.Mapforce.MFEnumerator.Dispose(var8_extensionNameValue); var8_extensionNameValue = null;
							if (!((bool)Altova.Functions.Core.First((new seq9_if_exists(closure.var2_wellDatum, closure.var4_latitude))))) { state = 16; goto case 16;  }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Latitude", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq12_seq_(closure.var2_wellDatum, closure.var4_latitude)));
							pos++;
							return true;
						case 16:
							state = 19;
							if (!((bool)Altova.Functions.Core.First((new seq15_if_exists(closure.var2_wellDatum, closure.var3_longitude))))) { state = 19; goto case 19;  }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Longitude", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq18_join(closure.var2_wellDatum, closure.var3_longitude, closure.var4_latitude)));
							pos++;
							return true;
						case 19:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Crs", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq22_seq_()));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_uid); var5_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_original); var6_original = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_description); var7_description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_extensionNameValue); var8_extensionNameValue = null;
				}
			}
		}
		class seq9_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellDatum;
			private readonly System.Collections.IEnumerable var2_latitude;

			public seq9_if_exists(
				System.Collections.IEnumerable var1_wellDatum,
				System.Collections.IEnumerable var2_latitude
			)
			{
				this.var1_wellDatum = var1_wellDatum;
				this.var2_latitude = var2_latitude;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq9_if_exists closure;
				public Enumerator(seq9_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							if (!(Altova.Functions.Core.Exists(closure.var2_latitude))) { state = 2; goto case 2;  }
							current = (bool)Altova.Functions.Core.First((new seq7_CoreAny((new seq10_map(closure.var1_wellDatum)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.ParseBoolean("true");
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq10_map : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellDatum;

			public seq10_map(
				System.Collections.IEnumerable var1_wellDatum
			)
			{
				this.var1_wellDatum = var1_wellDatum;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq10_map closure;
				private IEnumerator var2_wellDatum;
				public Enumerator(seq10_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_wellDatum = (closure.var1_wellDatum).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_wellDatum.MoveNext()) { state = 3; goto case 3; }
							current = (bool)Altova.Functions.Core.First((new seq7_CoreAny((new seq11_map((Altova.Mapforce.IMFNode)(var2_wellDatum.Current))))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_wellDatum); var2_wellDatum = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_wellDatum); var2_wellDatum = null;
				}
			}
		}
		class seq11_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq11_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq11_map closure;
				private IEnumerator var2_horizontalLocation;
				public Enumerator(seq11_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_horizontalLocation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("horizontalLocation", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_horizontalLocation.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("latitude", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_horizontalLocation.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_horizontalLocation); var2_horizontalLocation = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_horizontalLocation); var2_horizontalLocation = null;
				}
			}
		}
		class seq12_seq_ : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellDatum;
			private readonly System.Collections.IEnumerable var2_latitude;

			public seq12_seq_(
				System.Collections.IEnumerable var1_wellDatum,
				System.Collections.IEnumerable var2_latitude
			)
			{
				this.var1_wellDatum = var1_wellDatum;
				this.var2_latitude = var2_latitude;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq12_seq_ closure;
				public Enumerator(seq12_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.Last((new seq13_if_exists(closure.var1_wellDatum, closure.var2_latitude)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString((double)Altova.Functions.Core.Last((new seq14_if_exists(closure.var1_wellDatum, closure.var2_latitude))));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq13_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellDatum;
			private readonly System.Collections.IEnumerable var2_latitude;

			public seq13_if_exists(
				System.Collections.IEnumerable var1_wellDatum,
				System.Collections.IEnumerable var2_latitude
			)
			{
				this.var1_wellDatum = var1_wellDatum;
				this.var2_latitude = var2_latitude;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq13_if_exists closure;
				private IEnumerator var3_wellDatum;
				private IEnumerator var4_horizontalLocation;
				private IEnumerator var5_latitude;
				public Enumerator(seq13_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var2_latitude))) { state = 2; goto case 2;  }
							var3_wellDatum = (closure.var1_wellDatum).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = "dega";
							pos++;
							return true;
						case 3:
							state = 5;
							if (!var3_wellDatum.MoveNext()) { state = 4; goto case 4; }
							var4_horizontalLocation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("horizontalLocation", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_wellDatum.Current))).GetEnumerator();
							goto case 5;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_wellDatum); var3_wellDatum = null;
							return false;
						case 5:
							state = 7;
							if (!var4_horizontalLocation.MoveNext()) { state = 6; goto case 6; }
							var5_latitude = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("latitude", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_horizontalLocation.Current))).GetEnumerator();
							goto case 7;
						case 6:
							state = 3;
							Altova.Mapforce.MFEnumerator.Dispose(var4_horizontalLocation); var4_horizontalLocation = null;
							goto case 3;
						case 7:
							state = 7;
							if (!var5_latitude.MoveNext()) { state = 8; goto case 8; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)(var5_latitude.Current))));
							pos++;
							return true;
						case 8:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var5_latitude); var5_latitude = null;
							goto case 5;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_latitude); var5_latitude = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_horizontalLocation); var4_horizontalLocation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_wellDatum); var3_wellDatum = null;
				}
			}
		}
		class seq14_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellDatum;
			private readonly System.Collections.IEnumerable var2_latitude;

			public seq14_if_exists(
				System.Collections.IEnumerable var1_wellDatum,
				System.Collections.IEnumerable var2_latitude
			)
			{
				this.var1_wellDatum = var1_wellDatum;
				this.var2_latitude = var2_latitude;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq14_if_exists closure;
				private IEnumerator var3_wellDatum;
				private IEnumerator var4_horizontalLocation;
				private IEnumerator var5_latitude;
				public Enumerator(seq14_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var2_latitude))) { state = 2; goto case 2;  }
							var3_wellDatum = (closure.var1_wellDatum).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DecimalToDouble(0m);
							pos++;
							return true;
						case 3:
							state = 5;
							if (!var3_wellDatum.MoveNext()) { state = 4; goto case 4; }
							var4_horizontalLocation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("horizontalLocation", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_wellDatum.Current))).GetEnumerator();
							goto case 5;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_wellDatum); var3_wellDatum = null;
							return false;
						case 5:
							state = 7;
							if (!var4_horizontalLocation.MoveNext()) { state = 6; goto case 6; }
							var5_latitude = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("latitude", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_horizontalLocation.Current))).GetEnumerator();
							goto case 7;
						case 6:
							state = 3;
							Altova.Mapforce.MFEnumerator.Dispose(var4_horizontalLocation); var4_horizontalLocation = null;
							goto case 3;
						case 7:
							state = 7;
							if (!var5_latitude.MoveNext()) { state = 8; goto case 8; }
							current = Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_latitude.Current)));
							pos++;
							return true;
						case 8:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var5_latitude); var5_latitude = null;
							goto case 5;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_latitude); var5_latitude = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_horizontalLocation); var4_horizontalLocation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_wellDatum); var3_wellDatum = null;
				}
			}
		}
		class seq15_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellDatum;
			private readonly System.Collections.IEnumerable var2_longitude;

			public seq15_if_exists(
				System.Collections.IEnumerable var1_wellDatum,
				System.Collections.IEnumerable var2_longitude
			)
			{
				this.var1_wellDatum = var1_wellDatum;
				this.var2_longitude = var2_longitude;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq15_if_exists closure;
				public Enumerator(seq15_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							if (!(Altova.Functions.Core.Exists(closure.var2_longitude))) { state = 2; goto case 2;  }
							current = (bool)Altova.Functions.Core.First((new seq7_CoreAny((new seq16_map(closure.var1_wellDatum)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.ParseBoolean("true");
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq16_map : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellDatum;

			public seq16_map(
				System.Collections.IEnumerable var1_wellDatum
			)
			{
				this.var1_wellDatum = var1_wellDatum;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq16_map closure;
				private IEnumerator var2_wellDatum;
				public Enumerator(seq16_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_wellDatum = (closure.var1_wellDatum).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_wellDatum.MoveNext()) { state = 3; goto case 3; }
							current = (bool)Altova.Functions.Core.First((new seq7_CoreAny((new seq17_map((Altova.Mapforce.IMFNode)(var2_wellDatum.Current))))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_wellDatum); var2_wellDatum = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_wellDatum); var2_wellDatum = null;
				}
			}
		}
		class seq17_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq17_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq17_map closure;
				private IEnumerator var2_horizontalLocation;
				public Enumerator(seq17_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_horizontalLocation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("horizontalLocation", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_horizontalLocation.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("longitude", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_horizontalLocation.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_horizontalLocation); var2_horizontalLocation = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_horizontalLocation); var2_horizontalLocation = null;
				}
			}
		}
		class seq18_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellDatum;
			private readonly System.Collections.IEnumerable var2_longitude;
			private readonly System.Collections.IEnumerable var3_latitude;

			public seq18_join(
				System.Collections.IEnumerable var1_wellDatum,
				System.Collections.IEnumerable var2_longitude,
				System.Collections.IEnumerable var3_latitude
			)
			{
				this.var1_wellDatum = var1_wellDatum;
				this.var2_longitude = var2_longitude;
				this.var3_latitude = var3_latitude;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq18_join closure;
				public Enumerator(seq18_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 4;
							if (!((bool)Altova.Functions.Core.First((new seq19_if_exists(closure.var1_wellDatum, closure.var3_latitude))))) { state = 4; goto case 4;  }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.Last((new seq20_if_exists(closure.var1_wellDatum, closure.var3_latitude)))));
							pos++;
							return true;
						case 4:
							state = 0;
							current = Altova.CoreTypes.DoubleToString((double)Altova.Functions.Core.Last((new seq21_if_exists(closure.var1_wellDatum, closure.var2_longitude))));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq19_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellDatum;
			private readonly System.Collections.IEnumerable var2_latitude;

			public seq19_if_exists(
				System.Collections.IEnumerable var1_wellDatum,
				System.Collections.IEnumerable var2_latitude
			)
			{
				this.var1_wellDatum = var1_wellDatum;
				this.var2_latitude = var2_latitude;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq19_if_exists closure;
				public Enumerator(seq19_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							if (!(Altova.Functions.Core.Exists(closure.var2_latitude))) { state = 2; goto case 2;  }
							current = (bool)Altova.Functions.Core.First((new seq7_CoreAny((new seq16_map(closure.var1_wellDatum)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.ParseBoolean("true");
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq20_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellDatum;
			private readonly System.Collections.IEnumerable var2_latitude;

			public seq20_if_exists(
				System.Collections.IEnumerable var1_wellDatum,
				System.Collections.IEnumerable var2_latitude
			)
			{
				this.var1_wellDatum = var1_wellDatum;
				this.var2_latitude = var2_latitude;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq20_if_exists closure;
				private IEnumerator var3_wellDatum;
				private IEnumerator var4_horizontalLocation;
				private IEnumerator var5_longitude;
				public Enumerator(seq20_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var2_latitude))) { state = 2; goto case 2;  }
							var3_wellDatum = (closure.var1_wellDatum).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = "dega";
							pos++;
							return true;
						case 3:
							state = 5;
							if (!var3_wellDatum.MoveNext()) { state = 4; goto case 4; }
							var4_horizontalLocation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("horizontalLocation", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_wellDatum.Current))).GetEnumerator();
							goto case 5;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_wellDatum); var3_wellDatum = null;
							return false;
						case 5:
							state = 7;
							if (!var4_horizontalLocation.MoveNext()) { state = 6; goto case 6; }
							var5_longitude = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("longitude", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_horizontalLocation.Current))).GetEnumerator();
							goto case 7;
						case 6:
							state = 3;
							Altova.Mapforce.MFEnumerator.Dispose(var4_horizontalLocation); var4_horizontalLocation = null;
							goto case 3;
						case 7:
							state = 7;
							if (!var5_longitude.MoveNext()) { state = 8; goto case 8; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)(var5_longitude.Current))));
							pos++;
							return true;
						case 8:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var5_longitude); var5_longitude = null;
							goto case 5;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_longitude); var5_longitude = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_horizontalLocation); var4_horizontalLocation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_wellDatum); var3_wellDatum = null;
				}
			}
		}
		class seq21_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellDatum;
			private readonly System.Collections.IEnumerable var2_longitude;

			public seq21_if_exists(
				System.Collections.IEnumerable var1_wellDatum,
				System.Collections.IEnumerable var2_longitude
			)
			{
				this.var1_wellDatum = var1_wellDatum;
				this.var2_longitude = var2_longitude;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq21_if_exists closure;
				private IEnumerator var3_wellDatum;
				private IEnumerator var4_horizontalLocation;
				private IEnumerator var5_longitude;
				public Enumerator(seq21_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var2_longitude))) { state = 2; goto case 2;  }
							var3_wellDatum = (closure.var1_wellDatum).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DecimalToDouble(0m);
							pos++;
							return true;
						case 3:
							state = 5;
							if (!var3_wellDatum.MoveNext()) { state = 4; goto case 4; }
							var4_horizontalLocation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("horizontalLocation", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_wellDatum.Current))).GetEnumerator();
							goto case 5;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_wellDatum); var3_wellDatum = null;
							return false;
						case 5:
							state = 7;
							if (!var4_horizontalLocation.MoveNext()) { state = 6; goto case 6; }
							var5_longitude = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("longitude", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_horizontalLocation.Current))).GetEnumerator();
							goto case 7;
						case 6:
							state = 3;
							Altova.Mapforce.MFEnumerator.Dispose(var4_horizontalLocation); var4_horizontalLocation = null;
							goto case 3;
						case 7:
							state = 7;
							if (!var5_longitude.MoveNext()) { state = 8; goto case 8; }
							current = Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_longitude.Current)));
							pos++;
							return true;
						case 8:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var5_longitude); var5_longitude = null;
							goto case 5;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_longitude); var5_longitude = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_horizontalLocation); var4_horizontalLocation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_wellDatum); var3_wellDatum = null;
				}
			}
		}
		class seq22_seq_ : IEnumerable
		{

			public seq22_seq_(
			)
			{
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq22_seq_ closure;
				public Enumerator(seq22_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/commonv2}GeodeticEpsgCrs")));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:EpsgCode", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal("4326"))))));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq23_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly Altova.Mapforce.IMFNode var2_cur;
			private readonly System.Collections.IEnumerable var3_referencePoint;

			public seq23_join(
				Altova.Mapforce.IMFNode var1_cur,
				Altova.Mapforce.IMFNode var2_cur,
				System.Collections.IEnumerable var3_referencePoint
			)
			{
				this.var1_cur = var1_cur;
				this.var2_cur = var2_cur;
				this.var3_referencePoint = var3_referencePoint;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq23_join closure;
				private IEnumerator var4_uid;
				private IEnumerator var5_original;
				private IEnumerator var6_description;
				private IEnumerator var7_extensionNameValue;
				private IEnumerator var8_longitude;
				public Enumerator(seq23_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}GeodeticWellLocation")));
							pos++;
							return true;
						case 2:
							state = 3;
							var4_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var2_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var4_uid.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_uid.Current))));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
							var5_original = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("original", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var5_original.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Original", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_original.Current))))));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var5_original); var5_original = null;
							var6_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var6_description.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_description.Current))));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var6_description); var6_description = null;
							var7_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var7_extensionNameValue.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_join((Altova.Mapforce.IMFNode)(var7_extensionNameValue.Current))));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var7_extensionNameValue); var7_extensionNameValue = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Latitude", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq24_seq_(closure.var1_cur)));
							pos++;
							return true;
						case 15:
							state = 16;
							var8_longitude = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("longitude", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 16;
						case 16:
							state = 16;
							if (!var8_longitude.MoveNext()) { state = 17; goto case 17; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Longitude", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq25_seq_((Altova.Mapforce.IMFNode)(var8_longitude.Current))));
							pos++;
							return true;
						case 17:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var8_longitude); var8_longitude = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Crs", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq26_join(closure.var2_cur, closure.var3_referencePoint)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_original); var5_original = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_description); var6_description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_extensionNameValue); var7_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_longitude); var8_longitude = null;
				}
			}
		}
		class seq24_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq24_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq24_seq_ closure;
				public Enumerator(seq24_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq25_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq25_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq25_seq_ closure;
				public Enumerator(seq25_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq26_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_referencePoint;

			public seq26_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_referencePoint
			)
			{
				this.var1_cur = var1_cur;
				this.var2_referencePoint = var2_referencePoint;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq26_join closure;
				private IEnumerator var3_wellCRS;
				public Enumerator(seq26_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/commonv2}GeodeticLocalAuthorityCrs")));
							pos++;
							return true;
						case 2:
							state = 3;
							var3_wellCRS = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wellCRS", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var3_wellCRS.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:LocalAuthorityCrsName", "http://www.energistics.org/energyml/data/commonv2"), (new seq27_join((Altova.Mapforce.IMFNode)(var3_wellCRS.Current), closure.var2_referencePoint)));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_wellCRS); var3_wellCRS = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_wellCRS); var3_wellCRS = null;
				}
			}
		}
		class seq27_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_referencePoint;

			public seq27_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_referencePoint
			)
			{
				this.var1_cur = var1_cur;
				this.var2_referencePoint = var2_referencePoint;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq27_join closure;
				private IEnumerator var3_referencePoint;
				private IEnumerator var4_location;
				private IEnumerator var5_uid;
				public Enumerator(seq27_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_referencePoint = (closure.var2_referencePoint).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var3_referencePoint.MoveNext()) { state = 3; goto case 3; }
							var4_location = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("location", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_referencePoint.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_referencePoint); var3_referencePoint = null;
							current = Altova.CoreTypes.NodeToString(closure.var1_cur);
							pos++;
							return true;
						case 4:
							state = 6;
							if (!var4_location.MoveNext()) { state = 5; goto case 5; }
							var5_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), (Altova.Mapforce.IMFNode)(var4_location.Current))).GetEnumerator();
							goto case 6;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var4_location); var4_location = null;
							goto case 2;
						case 6:
							state = 6;
							if (!var5_uid.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("authority", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_uid.Current))));
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var5_uid); var5_uid = null;
							goto case 4;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_uid); var5_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_location); var4_location = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_referencePoint); var3_referencePoint = null;
				}
			}
		}
		class seq28_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_referencePoint;
			private readonly System.Collections.IEnumerable var2_wellLocation;
			private readonly System.Collections.IEnumerable var3_nameCRS;

			public seq28_join(
				System.Collections.IEnumerable var1_referencePoint,
				System.Collections.IEnumerable var2_wellLocation,
				System.Collections.IEnumerable var3_nameCRS
			)
			{
				this.var1_referencePoint = var1_referencePoint;
				this.var2_wellLocation = var2_wellLocation;
				this.var3_nameCRS = var3_nameCRS;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq28_join closure;
				private IEnumerator var4_nameCRS;
				private IEnumerator var5_referencePoint;
				private IEnumerator var6_location;
				private IEnumerator var8_referencePoint;
				private IEnumerator var7_description;
				private IEnumerator var9_location;
				private IEnumerator var11_nameCRS;
				private IEnumerator var10_extensionNameValue;
				public Enumerator(seq28_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}ProjectedWellLocation")));
							pos++;
							return true;
						case 2:
							state = 3;
							var4_nameCRS = (closure.var3_nameCRS).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var4_nameCRS.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_nameCRS.Current))));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var4_nameCRS); var4_nameCRS = null;
							var5_referencePoint = (closure.var1_referencePoint).GetEnumerator();
							goto case 6;
						case 6:
							state = 8;
							if (!var5_referencePoint.MoveNext()) { state = 7; goto case 7; }
							var6_location = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("location", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var5_referencePoint.Current))).GetEnumerator();
							goto case 8;
						case 7:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var5_referencePoint); var5_referencePoint = null;
							var8_referencePoint = (closure.var1_referencePoint).GetEnumerator();
							goto case 13;
						case 8:
							state = 10;
							if (!var6_location.MoveNext()) { state = 9; goto case 9; }
							var7_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var6_location.Current))).GetEnumerator();
							goto case 10;
						case 9:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var6_location); var6_location = null;
							goto case 6;
						case 10:
							state = 10;
							if (!var7_description.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_description.Current))));
							pos++;
							return true;
						case 11:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var7_description); var7_description = null;
							goto case 8;
						case 13:
							state = 15;
							if (!var8_referencePoint.MoveNext()) { state = 14; goto case 14; }
							var9_location = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("location", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var8_referencePoint.Current))).GetEnumerator();
							goto case 15;
						case 14:
							state = 20;
							Altova.Mapforce.MFEnumerator.Dispose(var8_referencePoint); var8_referencePoint = null;
							var11_nameCRS = (closure.var3_nameCRS).GetEnumerator();
							goto case 20;
						case 15:
							state = 17;
							if (!var9_location.MoveNext()) { state = 16; goto case 16; }
							var10_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var9_location.Current))).GetEnumerator();
							goto case 17;
						case 16:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var9_location); var9_location = null;
							goto case 13;
						case 17:
							state = 17;
							if (!var10_extensionNameValue.MoveNext()) { state = 18; goto case 18; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq29_join(closure.var2_wellLocation)));
							pos++;
							return true;
						case 18:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var10_extensionNameValue); var10_extensionNameValue = null;
							goto case 15;
						case 20:
							state = 20;
							if (!var11_nameCRS.MoveNext()) { state = 21; goto case 21; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Crs", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq30_seq_((Altova.Mapforce.IMFNode)(var11_nameCRS.Current))));
							pos++;
							return true;
						case 21:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var11_nameCRS); var11_nameCRS = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_nameCRS); var4_nameCRS = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_description); var7_description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_location); var6_location = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_referencePoint); var5_referencePoint = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_extensionNameValue); var10_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_location); var9_location = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_referencePoint); var8_referencePoint = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_nameCRS); var11_nameCRS = null;
				}
			}
		}
		class seq29_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellLocation;

			public seq29_join(
				System.Collections.IEnumerable var1_wellLocation
			)
			{
				this.var1_wellLocation = var1_wellLocation;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq29_join closure;
				private IEnumerator var2_wellLocation;
				private IEnumerator var3_extensionNameValue;
				private IEnumerator var4_wellLocation;
				private IEnumerator var5_extensionNameValue;
				private IEnumerator var6_wellLocation;
				private IEnumerator var7_extensionNameValue;
				private IEnumerator var9_wellLocation;
				private IEnumerator var8_measureClass;
				private IEnumerator var10_extensionNameValue;
				private IEnumerator var12_wellLocation;
				private IEnumerator var11_dTim;
				private IEnumerator var13_extensionNameValue;
				private IEnumerator var15_wellLocation;
				private IEnumerator var14_index;
				private IEnumerator var16_extensionNameValue;
				private IEnumerator var17_description;
				public Enumerator(seq29_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_wellLocation = (closure.var1_wellLocation).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_wellLocation.MoveNext()) { state = 3; goto case 3; }
							var3_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_wellLocation.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_wellLocation); var2_wellLocation = null;
							var4_wellLocation = (closure.var1_wellLocation).GetEnumerator();
							goto case 7;
						case 4:
							state = 4;
							if (!var3_extensionNameValue.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Name", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_extensionNameValue.Current))))));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_extensionNameValue); var3_extensionNameValue = null;
							goto case 2;
						case 7:
							state = 9;
							if (!var4_wellLocation.MoveNext()) { state = 8; goto case 8; }
							var5_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_wellLocation.Current))).GetEnumerator();
							goto case 9;
						case 8:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var4_wellLocation); var4_wellLocation = null;
							var6_wellLocation = (closure.var1_wellLocation).GetEnumerator();
							goto case 12;
						case 9:
							state = 9;
							if (!var5_extensionNameValue.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Value", "http://www.energistics.org/energyml/data/commonv2"), tbf.tbf4_StringMeasure.Eval((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var5_extensionNameValue.Current)))));
							pos++;
							return true;
						case 10:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var5_extensionNameValue); var5_extensionNameValue = null;
							goto case 7;
						case 12:
							state = 14;
							if (!var6_wellLocation.MoveNext()) { state = 13; goto case 13; }
							var7_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var6_wellLocation.Current))).GetEnumerator();
							goto case 14;
						case 13:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var6_wellLocation); var6_wellLocation = null;
							var9_wellLocation = (closure.var1_wellLocation).GetEnumerator();
							goto case 19;
						case 14:
							state = 16;
							if (!var7_extensionNameValue.MoveNext()) { state = 15; goto case 15; }
							var8_measureClass = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var7_extensionNameValue.Current))).GetEnumerator();
							goto case 16;
						case 15:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var7_extensionNameValue); var7_extensionNameValue = null;
							goto case 12;
						case 16:
							state = 16;
							if (!var8_measureClass.MoveNext()) { state = 17; goto case 17; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_measureClass.Current))));
							pos++;
							return true;
						case 17:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var8_measureClass); var8_measureClass = null;
							goto case 14;
						case 19:
							state = 21;
							if (!var9_wellLocation.MoveNext()) { state = 20; goto case 20; }
							var10_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var9_wellLocation.Current))).GetEnumerator();
							goto case 21;
						case 20:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var9_wellLocation); var9_wellLocation = null;
							var12_wellLocation = (closure.var1_wellLocation).GetEnumerator();
							goto case 26;
						case 21:
							state = 23;
							if (!var10_extensionNameValue.MoveNext()) { state = 22; goto case 22; }
							var11_dTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var10_extensionNameValue.Current))).GetEnumerator();
							goto case 23;
						case 22:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var10_extensionNameValue); var10_extensionNameValue = null;
							goto case 19;
						case 23:
							state = 23;
							if (!var11_dTim.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:DTim", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var11_dTim.Current))))));
							pos++;
							return true;
						case 24:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var11_dTim); var11_dTim = null;
							goto case 21;
						case 26:
							state = 28;
							if (!var12_wellLocation.MoveNext()) { state = 27; goto case 27; }
							var13_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var12_wellLocation.Current))).GetEnumerator();
							goto case 28;
						case 27:
							state = 33;
							Altova.Mapforce.MFEnumerator.Dispose(var12_wellLocation); var12_wellLocation = null;
							var15_wellLocation = (closure.var1_wellLocation).GetEnumerator();
							goto case 33;
						case 28:
							state = 30;
							if (!var13_extensionNameValue.MoveNext()) { state = 29; goto case 29; }
							var14_index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var13_extensionNameValue.Current))).GetEnumerator();
							goto case 30;
						case 29:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var13_extensionNameValue); var13_extensionNameValue = null;
							goto case 26;
						case 30:
							state = 30;
							if (!var14_index.MoveNext()) { state = 31; goto case 31; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Index", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var14_index.Current))))))))));
							pos++;
							return true;
						case 31:
							state = 28;
							Altova.Mapforce.MFEnumerator.Dispose(var14_index); var14_index = null;
							goto case 28;
						case 33:
							state = 35;
							if (!var15_wellLocation.MoveNext()) { state = 34; goto case 34; }
							var16_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var15_wellLocation.Current))).GetEnumerator();
							goto case 35;
						case 34:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var15_wellLocation); var15_wellLocation = null;
							return false;
						case 35:
							state = 37;
							if (!var16_extensionNameValue.MoveNext()) { state = 36; goto case 36; }
							var17_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var16_extensionNameValue.Current))).GetEnumerator();
							goto case 37;
						case 36:
							state = 33;
							Altova.Mapforce.MFEnumerator.Dispose(var16_extensionNameValue); var16_extensionNameValue = null;
							goto case 33;
						case 37:
							state = 37;
							if (!var17_description.MoveNext()) { state = 38; goto case 38; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var17_description.Current))));
							pos++;
							return true;
						case 38:
							state = 35;
							Altova.Mapforce.MFEnumerator.Dispose(var17_description); var17_description = null;
							goto case 35;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_extensionNameValue); var3_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_wellLocation); var2_wellLocation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_extensionNameValue); var5_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_wellLocation); var4_wellLocation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_measureClass); var8_measureClass = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_extensionNameValue); var7_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_wellLocation); var6_wellLocation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_dTim); var11_dTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_extensionNameValue); var10_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_wellLocation); var9_wellLocation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_index); var14_index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_extensionNameValue); var13_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_wellLocation); var12_wellLocation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_description); var17_description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_extensionNameValue); var16_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_wellLocation); var15_wellLocation = null;
				}
			}
		}
		class seq30_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq30_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq30_seq_ closure;
				public Enumerator(seq30_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/commonv2}ProjectedLocalAuthorityCrs")));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:LocalAuthorityCrsName", "http://www.energistics.org/energyml/data/commonv2"), (new seq31_join(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq31_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq31_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq31_join closure;
				private IEnumerator var2_code;
				public Enumerator(seq31_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_code = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("code", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_code.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("authority", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_code.Current))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_code); var2_code = null;
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("namingSystem", ""), closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_code); var2_code = null;
				}
			}
		}
		class seq32_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq32_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq32_join closure;
				private IEnumerator var2_principalMeridian;
				private IEnumerator var3_range;
				private IEnumerator var4_rangeDir;
				private IEnumerator var5_township;
				private IEnumerator var6_townshipDir;
				private IEnumerator var7_section;
				private IEnumerator var8_quarterSection;
				private IEnumerator var9_quarterTownship;
				private IEnumerator var10_footageNS;
				private IEnumerator var11_footageEW;
				public Enumerator(seq32_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_principalMeridian = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("principalMeridian", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_principalMeridian.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("PrincipalMeridian", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_principalMeridian.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_principalMeridian); var2_principalMeridian = null;
							var3_range = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("range", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_range.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Range", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_range.Current))))))))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var3_range); var3_range = null;
							var4_rangeDir = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("rangeDir", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var4_rangeDir.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("RangeDir", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_rangeDir.Current))));
							pos++;
							return true;
						case 9:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var4_rangeDir); var4_rangeDir = null;
							var5_township = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("township", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var5_township.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Township", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_township.Current))))))))));
							pos++;
							return true;
						case 12:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var5_township); var5_township = null;
							var6_townshipDir = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("townshipDir", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 14;
						case 14:
							state = 14;
							if (!var6_townshipDir.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TownshipDir", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_townshipDir.Current))));
							pos++;
							return true;
						case 15:
							state = 17;
							Altova.Mapforce.MFEnumerator.Dispose(var6_townshipDir); var6_townshipDir = null;
							var7_section = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("section", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 17;
						case 17:
							state = 17;
							if (!var7_section.MoveNext()) { state = 18; goto case 18; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Section", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_section.Current))));
							pos++;
							return true;
						case 18:
							state = 20;
							Altova.Mapforce.MFEnumerator.Dispose(var7_section); var7_section = null;
							var8_quarterSection = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("quarterSection", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 20;
						case 20:
							state = 20;
							if (!var8_quarterSection.MoveNext()) { state = 21; goto case 21; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("QuarterSection", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_quarterSection.Current))));
							pos++;
							return true;
						case 21:
							state = 23;
							Altova.Mapforce.MFEnumerator.Dispose(var8_quarterSection); var8_quarterSection = null;
							var9_quarterTownship = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("quarterTownship", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 23;
						case 23:
							state = 23;
							if (!var9_quarterTownship.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("QuarterTownship", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var9_quarterTownship.Current))));
							pos++;
							return true;
						case 24:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var9_quarterTownship); var9_quarterTownship = null;
							var10_footageNS = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("footageNS", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 26;
						case 26:
							state = 26;
							if (!var10_footageNS.MoveNext()) { state = 27; goto case 27; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FootageNS", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf5_DistanceNorthSouth.Eval((Altova.Mapforce.IMFNode)(var10_footageNS.Current)));
							pos++;
							return true;
						case 27:
							state = 29;
							Altova.Mapforce.MFEnumerator.Dispose(var10_footageNS); var10_footageNS = null;
							var11_footageEW = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("footageEW", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 29;
						case 29:
							state = 29;
							if (!var11_footageEW.MoveNext()) { state = 30; goto case 30; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FootageEW", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf6_DistanceEastWest.Eval((Altova.Mapforce.IMFNode)(var11_footageEW.Current)));
							pos++;
							return true;
						case 30:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var11_footageEW); var11_footageEW = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_principalMeridian); var2_principalMeridian = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_range); var3_range = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_rangeDir); var4_rangeDir = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_township); var5_township = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_townshipDir); var6_townshipDir = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_section); var7_section = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_quarterSection); var8_quarterSection = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_quarterTownship); var9_quarterTownship = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_footageNS); var10_footageNS = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_footageEW); var11_footageEW = null;
				}
			}
		}
		class seq33_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_wellCRS;
			private readonly System.Collections.IEnumerable var3_wellDatum;
			private readonly System.Collections.IEnumerable var4_wellLocation;

			public seq33_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_wellCRS,
				System.Collections.IEnumerable var3_wellDatum,
				System.Collections.IEnumerable var4_wellLocation
			)
			{
				this.var1_cur = var1_cur;
				this.var2_wellCRS = var2_wellCRS;
				this.var3_wellDatum = var3_wellDatum;
				this.var4_wellLocation = var4_wellLocation;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq33_join closure;
				private IEnumerator var5_uid;
				private IEnumerator var6_type;
				private IEnumerator var7_measuredDepth;
				private IEnumerator var8_description;
				private IEnumerator var9_extensionNameValue;
				private IEnumerator var10_elevation;
				private IEnumerator var11_location;
				private IEnumerator var12_latitude;
				private IEnumerator var13_wellLocation;
				private IEnumerator var14_wellCRS;
				private System.Collections.IEnumerable var15_box;
				public Enumerator(seq33_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var5_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var5_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var5_uid); var5_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 5:
							state = 6;
							var6_type = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("type", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var6_type.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Type", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_type.Current))));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var6_type); var6_type = null;
							var7_measuredDepth = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("measuredDepth", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var7_measuredDepth.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MeasuredDepth", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf7_MeasuredDepthCoord.Eval((Altova.Mapforce.IMFNode)(var7_measuredDepth.Current)));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var7_measuredDepth); var7_measuredDepth = null;
							var8_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var8_description.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_description.Current))));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var8_description); var8_description = null;
							var9_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 15;
						case 15:
							state = 15;
							if (!var9_extensionNameValue.MoveNext()) { state = 16; goto case 16; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq34_join((Altova.Mapforce.IMFNode)(var9_extensionNameValue.Current))));
							pos++;
							return true;
						case 16:
							state = 18;
							Altova.Mapforce.MFEnumerator.Dispose(var9_extensionNameValue); var9_extensionNameValue = null;
							var10_elevation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("elevation", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var10_elevation.MoveNext()) { state = 19; goto case 19; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Elevation", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf8_WellElevationCoord.Eval((Altova.Mapforce.IMFNode)(var10_elevation.Current)));
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var10_elevation); var10_elevation = null;
							var11_location = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("location", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 21;
						case 21:
							state = 23;
							if (!var11_location.MoveNext()) { state = 22; goto case 22; }
							var12_latitude = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("latitude", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var11_location.Current))).GetEnumerator();
							goto case 23;
						case 22:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var11_location); var11_location = null;
							var13_wellLocation = (closure.var4_wellLocation).GetEnumerator();
							goto case 26;
						case 23:
							state = 23;
							if (!var12_latitude.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Location", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq35_join(closure.var2_wellCRS, (Altova.Mapforce.IMFNode)(var12_latitude.Current), closure.var3_wellDatum, (Altova.Mapforce.IMFNode)(var11_location.Current), closure.var4_wellLocation)));
							pos++;
							return true;
						case 24:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var12_latitude); var12_latitude = null;
							goto case 21;
						case 26:
							state = 28;
							if (!var13_wellLocation.MoveNext()) { state = 27; goto case 27; }
							var14_wellCRS = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wellCRS", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var13_wellLocation.Current))).GetEnumerator();
							goto case 28;
						case 27:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var13_wellLocation); var13_wellLocation = null;
							return false;
						case 28:
							state = 28;
							if (!var14_wellCRS.MoveNext()) { state = 29; goto case 29; }
							var15_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.DecimalToDouble(0m))));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Location", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq39_join(closure.var2_wellCRS, (Altova.Mapforce.IMFNode)(var14_wellCRS.Current), var15_box, (Altova.Mapforce.IMFNode)(var13_wellLocation.Current))));
							pos++;
							return true;
						case 29:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var14_wellCRS); var14_wellCRS = null;
							goto case 26;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_uid); var5_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_type); var6_type = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_measuredDepth); var7_measuredDepth = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_description); var8_description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_extensionNameValue); var9_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_elevation); var10_elevation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_latitude); var12_latitude = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_location); var11_location = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_wellCRS); var14_wellCRS = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_wellLocation); var13_wellLocation = null;
				}
			}
		}
		class seq34_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq34_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq34_join closure;
				private IEnumerator var2_measureClass;
				private IEnumerator var3_dTim;
				private IEnumerator var4_index;
				private IEnumerator var5_description;
				public Enumerator(seq34_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Name", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Value", "http://www.energistics.org/energyml/data/commonv2"), tbf.tbf4_StringMeasure.Eval((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), closure.var1_cur))));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_measureClass = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var2_measureClass.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_measureClass.Current))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_measureClass); var2_measureClass = null;
							var3_dTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var3_dTim.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:DTim", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_dTim.Current))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var3_dTim); var3_dTim = null;
							var4_index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_index.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Index", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_index.Current))))))))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_index); var4_index = null;
							var5_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_description.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_description.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_description); var5_description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_measureClass); var2_measureClass = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_dTim); var3_dTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_index); var4_index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_description); var5_description = null;
				}
			}
		}
		class seq35_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellCRS;
			private readonly Altova.Mapforce.IMFNode var2_cur;
			private readonly System.Collections.IEnumerable var3_wellDatum;
			private readonly Altova.Mapforce.IMFNode var4_cur;
			private readonly System.Collections.IEnumerable var5_wellLocation;

			public seq35_join(
				System.Collections.IEnumerable var1_wellCRS,
				Altova.Mapforce.IMFNode var2_cur,
				System.Collections.IEnumerable var3_wellDatum,
				Altova.Mapforce.IMFNode var4_cur,
				System.Collections.IEnumerable var5_wellLocation
			)
			{
				this.var1_wellCRS = var1_wellCRS;
				this.var2_cur = var2_cur;
				this.var3_wellDatum = var3_wellDatum;
				this.var4_cur = var4_cur;
				this.var5_wellLocation = var5_wellLocation;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq35_join closure;
				private IEnumerator var6_uid;
				private IEnumerator var7_original;
				private IEnumerator var8_description;
				private IEnumerator var9_extensionNameValue;
				private IEnumerator var10_longitude;
				private IEnumerator var11_wellLocation;
				private IEnumerator var12_wellCRS;
				public Enumerator(seq35_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}GeodeticWellLocation")));
							pos++;
							return true;
						case 2:
							state = 3;
							var6_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var4_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var6_uid.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_uid.Current))));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var6_uid); var6_uid = null;
							var7_original = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("original", "http://www.witsml.org/schemas/1series"), closure.var4_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var7_original.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Original", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_original.Current))))));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var7_original); var7_original = null;
							var8_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var4_cur)).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var8_description.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_description.Current))));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var8_description); var8_description = null;
							var9_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), closure.var4_cur)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var9_extensionNameValue.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_join((Altova.Mapforce.IMFNode)(var9_extensionNameValue.Current))));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var9_extensionNameValue); var9_extensionNameValue = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Latitude", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq36_seq_(closure.var2_cur)));
							pos++;
							return true;
						case 15:
							state = 16;
							var10_longitude = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("longitude", "http://www.witsml.org/schemas/1series"), closure.var4_cur)).GetEnumerator();
							goto case 16;
						case 16:
							state = 16;
							if (!var10_longitude.MoveNext()) { state = 17; goto case 17; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Longitude", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq25_seq_((Altova.Mapforce.IMFNode)(var10_longitude.Current))));
							pos++;
							return true;
						case 17:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var10_longitude); var10_longitude = null;
							var11_wellLocation = (closure.var5_wellLocation).GetEnumerator();
							goto case 19;
						case 19:
							state = 21;
							if (!var11_wellLocation.MoveNext()) { state = 20; goto case 20; }
							var12_wellCRS = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wellCRS", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var11_wellLocation.Current))).GetEnumerator();
							goto case 21;
						case 20:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var11_wellLocation); var11_wellLocation = null;
							return false;
						case 21:
							state = 21;
							if (!var12_wellCRS.MoveNext()) { state = 22; goto case 22; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Crs", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq37_join(closure.var1_wellCRS, closure.var3_wellDatum)));
							pos++;
							return true;
						case 22:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var12_wellCRS); var12_wellCRS = null;
							goto case 19;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var6_uid); var6_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_original); var7_original = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_description); var8_description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_extensionNameValue); var9_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_longitude); var10_longitude = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_wellCRS); var12_wellCRS = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_wellLocation); var11_wellLocation = null;
				}
			}
		}
		class seq36_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq36_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq36_seq_ closure;
				public Enumerator(seq36_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq37_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellCRS;
			private readonly System.Collections.IEnumerable var2_wellDatum;

			public seq37_join(
				System.Collections.IEnumerable var1_wellCRS,
				System.Collections.IEnumerable var2_wellDatum
			)
			{
				this.var1_wellCRS = var1_wellCRS;
				this.var2_wellDatum = var2_wellDatum;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq37_join closure;
				private IEnumerator var3_wellCRS;
				private IEnumerator var4_geodeticCRS;
				public Enumerator(seq37_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/commonv2}GeodeticLocalAuthorityCrs")));
							pos++;
							return true;
						case 2:
							state = 3;
							var3_wellCRS = (closure.var1_wellCRS).GetEnumerator();
							goto case 3;
						case 3:
							state = 5;
							if (!var3_wellCRS.MoveNext()) { state = 4; goto case 4; }
							var4_geodeticCRS = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("geodeticCRS", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_wellCRS.Current))).GetEnumerator();
							goto case 5;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_wellCRS); var3_wellCRS = null;
							return false;
						case 5:
							state = 5;
							if (!var4_geodeticCRS.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:LocalAuthorityCrsName", "http://www.energistics.org/energyml/data/commonv2"), (new seq38_join((Altova.Mapforce.IMFNode)(var4_geodeticCRS.Current), closure.var2_wellDatum)));
							pos++;
							return true;
						case 6:
							state = 3;
							Altova.Mapforce.MFEnumerator.Dispose(var4_geodeticCRS); var4_geodeticCRS = null;
							goto case 3;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_geodeticCRS); var4_geodeticCRS = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_wellCRS); var3_wellCRS = null;
				}
			}
		}
		class seq38_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_wellDatum;

			public seq38_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_wellDatum
			)
			{
				this.var1_cur = var1_cur;
				this.var2_wellDatum = var2_wellDatum;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq38_join closure;
				private IEnumerator var3_uidRef;
				private IEnumerator var4_wellDatum;
				private IEnumerator var5_datumName;
				private IEnumerator var6_code;
				public Enumerator(seq38_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_uidRef = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uidRef", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_uidRef.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("authority", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_uidRef.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_uidRef); var3_uidRef = null;
							var4_wellDatum = (closure.var2_wellDatum).GetEnumerator();
							goto case 5;
						case 5:
							state = 7;
							if (!var4_wellDatum.MoveNext()) { state = 6; goto case 6; }
							var5_datumName = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("datumName", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_wellDatum.Current))).GetEnumerator();
							goto case 7;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_wellDatum); var4_wellDatum = null;
							current = Altova.CoreTypes.NodeToString(closure.var1_cur);
							pos++;
							return true;
						case 7:
							state = 9;
							if (!var5_datumName.MoveNext()) { state = 8; goto case 8; }
							var6_code = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("code", ""), (Altova.Mapforce.IMFNode)(var5_datumName.Current))).GetEnumerator();
							goto case 9;
						case 8:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var5_datumName); var5_datumName = null;
							goto case 5;
						case 9:
							state = 9;
							if (!var6_code.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("code", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_code.Current))));
							pos++;
							return true;
						case 10:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var6_code); var6_code = null;
							goto case 7;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_uidRef); var3_uidRef = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_code); var6_code = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_datumName); var5_datumName = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_wellDatum); var4_wellDatum = null;
				}
			}
		}
		class seq39_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellCRS;
			private readonly Altova.Mapforce.IMFNode var2_cur;
			private readonly System.Collections.IEnumerable var3_box;
			private readonly Altova.Mapforce.IMFNode var4_cur;

			public seq39_join(
				System.Collections.IEnumerable var1_wellCRS,
				Altova.Mapforce.IMFNode var2_cur,
				System.Collections.IEnumerable var3_box,
				Altova.Mapforce.IMFNode var4_cur
			)
			{
				this.var1_wellCRS = var1_wellCRS;
				this.var2_cur = var2_cur;
				this.var3_box = var3_box;
				this.var4_cur = var4_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq39_join closure;
				private IEnumerator var5_uidRef;
				private IEnumerator var6_original;
				private IEnumerator var7_description;
				private IEnumerator var8_extensionNameValue;
				public Enumerator(seq39_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}ProjectedWellLocation")));
							pos++;
							return true;
						case 2:
							state = 3;
							var5_uidRef = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uidRef", ""), closure.var2_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var5_uidRef.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_uidRef.Current))));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var5_uidRef); var5_uidRef = null;
							var6_original = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("original", "http://www.witsml.org/schemas/1series"), closure.var4_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var6_original.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Original", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_original.Current))))));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var6_original); var6_original = null;
							var7_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var4_cur)).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var7_description.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_description.Current))));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var7_description); var7_description = null;
							var8_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), closure.var4_cur)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var8_extensionNameValue.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq34_join((Altova.Mapforce.IMFNode)(var8_extensionNameValue.Current))));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var8_extensionNameValue); var8_extensionNameValue = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Coordinate1", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var3_box);
							pos++;
							return true;
						case 15:
							state = 16;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Coordinate2", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var3_box);
							pos++;
							return true;
						case 16:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Crs", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq40_join(closure.var1_wellCRS)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_uidRef); var5_uidRef = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_original); var6_original = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_description); var7_description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_extensionNameValue); var8_extensionNameValue = null;
				}
			}
		}
		class seq40_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellCRS;

			public seq40_join(
				System.Collections.IEnumerable var1_wellCRS
			)
			{
				this.var1_wellCRS = var1_wellCRS;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq40_join closure;
				private IEnumerator var2_wellCRS;
				private IEnumerator var3_mapProjectionCRS;
				private System.Collections.IEnumerable var4_uidRef;
				public Enumerator(seq40_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/commonv2}ProjectedLocalAuthorityCrs")));
							pos++;
							return true;
						case 2:
							state = 3;
							var2_wellCRS = (closure.var1_wellCRS).GetEnumerator();
							goto case 3;
						case 3:
							state = 5;
							if (!var2_wellCRS.MoveNext()) { state = 4; goto case 4; }
							var3_mapProjectionCRS = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mapProjectionCRS", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_wellCRS.Current))).GetEnumerator();
							goto case 5;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_wellCRS); var2_wellCRS = null;
							return false;
						case 5:
							state = 5;
							if (!var3_mapProjectionCRS.MoveNext()) { state = 6; goto case 6; }
							var4_uidRef = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uidRef", ""), (Altova.Mapforce.IMFNode)(var3_mapProjectionCRS.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:LocalAuthorityCrsName", "http://www.energistics.org/energyml/data/commonv2"), (new seq41_join((Altova.Mapforce.IMFNode)(var3_mapProjectionCRS.Current), var4_uidRef)));
							pos++;
							return true;
						case 6:
							state = 3;
							Altova.Mapforce.MFEnumerator.Dispose(var3_mapProjectionCRS); var3_mapProjectionCRS = null;
							goto case 3;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_mapProjectionCRS); var3_mapProjectionCRS = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_wellCRS); var2_wellCRS = null;
				}
			}
		}
		class seq41_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_uidRef;

			public seq41_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_uidRef
			)
			{
				this.var1_cur = var1_cur;
				this.var2_uidRef = var2_uidRef;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq41_join closure;
				private IEnumerator var3_uidRef;
				private IEnumerator var4_uidRef;
				public Enumerator(seq41_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_uidRef = (closure.var2_uidRef).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_uidRef.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("authority", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_uidRef.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_uidRef); var3_uidRef = null;
							var4_uidRef = (closure.var2_uidRef).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var4_uidRef.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("code", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_uidRef.Current))));
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_uidRef); var4_uidRef = null;
							current = Altova.CoreTypes.NodeToString(closure.var1_cur);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_uidRef); var3_uidRef = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_uidRef); var4_uidRef = null;
				}
			}
		}
		class seq42_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_datum;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq42_join(
				System.Collections.IEnumerable var1_datum,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_datum = var1_datum;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq42_join closure;
				private IEnumerator var3_if_exists;
				public Enumerator(seq42_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), closure.var2_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							var3_if_exists = ((new seq43_if_exists(closure.var1_datum))).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var3_if_exists.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("datum", ""), Altova.Functions.Core.Box((string)(var3_if_exists.Current)));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_if_exists); var3_if_exists = null;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var2_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_if_exists); var3_if_exists = null;
				}
			}
		}
		class seq43_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_datum;

			public seq43_if_exists(
				System.Collections.IEnumerable var1_datum
			)
			{
				this.var1_datum = var1_datum;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq43_if_exists closure;
				private IEnumerator var2_datum;
				public Enumerator(seq43_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_datum))) { state = 2; goto case 2;  }
							var2_datum = (closure.var1_datum).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = "unknown";
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var2_datum.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_datum.Current));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_datum); var2_datum = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_datum); var2_datum = null;
				}
			}
		}
		class seq44_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_wellLocation;
			private readonly System.Collections.IEnumerable var3_horizontalLocation;

			public seq44_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_wellLocation,
				System.Collections.IEnumerable var3_horizontalLocation
			)
			{
				this.var1_cur = var1_cur;
				this.var2_wellLocation = var2_wellLocation;
				this.var3_horizontalLocation = var3_horizontalLocation;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq44_join closure;
				private IEnumerator var4_code;
				private string var5_cast;
				private IEnumerator var6_kind;
				private IEnumerator var7_measuredDepth;
				private IEnumerator var8_comment;
				private IEnumerator var9_extensionNameValue;
				private IEnumerator var10_wellbore;
				private IEnumerator var11_rig;
				private IEnumerator var12_elevation;
				private IEnumerator var13_horizontalLocation;
				private IEnumerator var14_latitude;
				private IEnumerator var15_wellLocation;
				private IEnumerator var16_localX;
				public Enumerator(seq44_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var4_code = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("code", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var4_code.MoveNext()) { state = 5; goto case 5; }
							var5_cast = (Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_code.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Code", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq45_if_equal(var5_cast)))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var4_code); var4_code = null;
							var6_kind = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("kind", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var6_kind.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Kind", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_kind.Current))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var6_kind); var6_kind = null;
							var7_measuredDepth = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("measuredDepth", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var7_measuredDepth.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MeasuredDepth", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf7_MeasuredDepthCoord.Eval((Altova.Mapforce.IMFNode)(var7_measuredDepth.Current)));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var7_measuredDepth); var7_measuredDepth = null;
							var8_comment = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("comment", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var8_comment.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Comment", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_comment.Current))));
							pos++;
							return true;
						case 14:
							state = 16;
							Altova.Mapforce.MFEnumerator.Dispose(var8_comment); var8_comment = null;
							var9_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 16;
						case 16:
							state = 16;
							if (!var9_extensionNameValue.MoveNext()) { state = 17; goto case 17; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_join((Altova.Mapforce.IMFNode)(var9_extensionNameValue.Current))));
							pos++;
							return true;
						case 17:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var9_extensionNameValue); var9_extensionNameValue = null;
							var10_wellbore = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wellbore", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 19;
						case 19:
							state = 19;
							if (!var10_wellbore.MoveNext()) { state = 20; goto case 20; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq46_join((Altova.Mapforce.IMFNode)(var10_wellbore.Current))));
							pos++;
							return true;
						case 20:
							state = 22;
							Altova.Mapforce.MFEnumerator.Dispose(var10_wellbore); var10_wellbore = null;
							var11_rig = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("rig", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 22;
						case 22:
							state = 22;
							if (!var11_rig.MoveNext()) { state = 23; goto case 23; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Rig", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq47_join((Altova.Mapforce.IMFNode)(var11_rig.Current))));
							pos++;
							return true;
						case 23:
							state = 25;
							Altova.Mapforce.MFEnumerator.Dispose(var11_rig); var11_rig = null;
							var12_elevation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("elevation", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 25;
						case 25:
							state = 25;
							if (!var12_elevation.MoveNext()) { state = 26; goto case 26; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Elevation", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf8_WellElevationCoord.Eval((Altova.Mapforce.IMFNode)(var12_elevation.Current)));
							pos++;
							return true;
						case 26:
							state = 28;
							Altova.Mapforce.MFEnumerator.Dispose(var12_elevation); var12_elevation = null;
							var13_horizontalLocation = (closure.var3_horizontalLocation).GetEnumerator();
							goto case 28;
						case 28:
							state = 30;
							if (!var13_horizontalLocation.MoveNext()) { state = 29; goto case 29; }
							var14_latitude = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("latitude", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var13_horizontalLocation.Current))).GetEnumerator();
							goto case 30;
						case 29:
							state = 33;
							Altova.Mapforce.MFEnumerator.Dispose(var13_horizontalLocation); var13_horizontalLocation = null;
							var15_wellLocation = (closure.var2_wellLocation).GetEnumerator();
							goto case 33;
						case 30:
							state = 30;
							if (!var14_latitude.MoveNext()) { state = 31; goto case 31; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("HorizontalLocation", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq48_join((Altova.Mapforce.IMFNode)(var14_latitude.Current), (Altova.Mapforce.IMFNode)(var13_horizontalLocation.Current))));
							pos++;
							return true;
						case 31:
							state = 28;
							Altova.Mapforce.MFEnumerator.Dispose(var14_latitude); var14_latitude = null;
							goto case 28;
						case 33:
							state = 35;
							if (!var15_wellLocation.MoveNext()) { state = 34; goto case 34; }
							var16_localX = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("localX", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var15_wellLocation.Current))).GetEnumerator();
							goto case 35;
						case 34:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var15_wellLocation); var15_wellLocation = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Crs", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq50_seq_()));
							pos++;
							return true;
						case 35:
							state = 35;
							if (!var16_localX.MoveNext()) { state = 36; goto case 36; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("HorizontalLocation", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq49_join((Altova.Mapforce.IMFNode)(var15_wellLocation.Current), closure.var3_horizontalLocation)));
							pos++;
							return true;
						case 36:
							state = 33;
							Altova.Mapforce.MFEnumerator.Dispose(var16_localX); var16_localX = null;
							goto case 33;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_code); var4_code = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_kind); var6_kind = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_measuredDepth); var7_measuredDepth = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_comment); var8_comment = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_extensionNameValue); var9_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_wellbore); var10_wellbore = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_rig); var11_rig = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_elevation); var12_elevation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_latitude); var14_latitude = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_horizontalLocation); var13_horizontalLocation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_localX); var16_localX = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_wellLocation); var15_wellLocation = null;
				}
			}
		}
		class seq45_if_equal : IEnumerable
		{
			private readonly string var1_cast;

			public seq45_if_equal(
				string var1_cast
			)
			{
				this.var1_cast = var1_cast;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq45_if_equal closure;
				public Enumerator(seq45_if_equal closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							if (!((closure.var1_cast) == ("KB"))) { state = 2; goto case 2;  }
							current = "kelly bushing";
							pos++;
							return true;
						case 2:
							state = 0;
							if (!((closure.var1_cast) == ("SL"))) { state = 5; goto case 5;  }
							current = "mean sea level";
							pos++;
							return true;
						case 5:
							state = 0;
							current = "kelly bushing";
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq46_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq46_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq46_join closure;
				private IEnumerator var2_wellParent;
				public Enumerator(seq46_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("WellboreReference", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wellboreReference", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							var2_wellParent = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wellParent", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var2_wellParent.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("WellParent", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_wellParent.Current))));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_wellParent); var2_wellParent = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_wellParent); var2_wellParent = null;
				}
			}
		}
		class seq47_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq47_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq47_join closure;
				private IEnumerator var2_wellboreParent;
				private IEnumerator var3_wellParent;
				public Enumerator(seq47_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("RigReference", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("rigReference", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							var2_wellboreParent = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wellboreParent", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var2_wellboreParent.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("WellboreParent", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_wellboreParent.Current))));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var2_wellboreParent); var2_wellboreParent = null;
							var3_wellParent = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wellParent", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var3_wellParent.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("WellParent", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_wellParent.Current))));
							pos++;
							return true;
						case 7:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_wellParent); var3_wellParent = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_wellboreParent); var2_wellboreParent = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_wellParent); var3_wellParent = null;
				}
			}
		}
		class seq48_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq48_join(
				Altova.Mapforce.IMFNode var1_cur,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_cur = var1_cur;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq48_join closure;
				private IEnumerator var3_original;
				private IEnumerator var4_description;
				private IEnumerator var5_longitude;
				public Enumerator(seq48_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}GeodeticWellLocation")));
							pos++;
							return true;
						case 2:
							state = 3;
							var3_original = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("original", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var3_original.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Original", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_original.Current))))));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var3_original); var3_original = null;
							var4_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var4_description.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_description.Current))));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var4_description); var4_description = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Latitude", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)))));
							pos++;
							return true;
						case 9:
							state = 10;
							var5_longitude = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("longitude", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var5_longitude.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Longitude", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_longitude.Current))))));
							pos++;
							return true;
						case 11:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_longitude); var5_longitude = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_original); var3_original = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_description); var4_description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_longitude); var5_longitude = null;
				}
			}
		}
		class seq49_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_horizontalLocation;

			public seq49_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_horizontalLocation
			)
			{
				this.var1_cur = var1_cur;
				this.var2_horizontalLocation = var2_horizontalLocation;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq49_join closure;
				private IEnumerator var3_horizontalLocation;
				private IEnumerator var4_uid;
				private IEnumerator var5_original;
				private IEnumerator var6_description;
				private IEnumerator var7_extensionNameValue;
				private IEnumerator var8_horizontalLocation;
				private IEnumerator var9_localX;
				private IEnumerator var10_horizontalLocation;
				private IEnumerator var11_localY;
				public Enumerator(seq49_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/witsmlv2}ProjectedWellLocation")));
							pos++;
							return true;
						case 2:
							state = 3;
							var3_horizontalLocation = (closure.var2_horizontalLocation).GetEnumerator();
							goto case 3;
						case 3:
							state = 5;
							if (!var3_horizontalLocation.MoveNext()) { state = 4; goto case 4; }
							var4_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), (Altova.Mapforce.IMFNode)(var3_horizontalLocation.Current))).GetEnumerator();
							goto case 5;
						case 4:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var3_horizontalLocation); var3_horizontalLocation = null;
							var5_original = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("original", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 8;
						case 5:
							state = 5;
							if (!var4_uid.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_uid.Current))));
							pos++;
							return true;
						case 6:
							state = 3;
							Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
							goto case 3;
						case 8:
							state = 8;
							if (!var5_original.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Original", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_original.Current))))));
							pos++;
							return true;
						case 9:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var5_original); var5_original = null;
							var6_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var6_description.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_description.Current))));
							pos++;
							return true;
						case 12:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var6_description); var6_description = null;
							var7_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 14;
						case 14:
							state = 14;
							if (!var7_extensionNameValue.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_join((Altova.Mapforce.IMFNode)(var7_extensionNameValue.Current))));
							pos++;
							return true;
						case 15:
							state = 17;
							Altova.Mapforce.MFEnumerator.Dispose(var7_extensionNameValue); var7_extensionNameValue = null;
							var8_horizontalLocation = (closure.var2_horizontalLocation).GetEnumerator();
							goto case 17;
						case 17:
							state = 19;
							if (!var8_horizontalLocation.MoveNext()) { state = 18; goto case 18; }
							var9_localX = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("localX", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var8_horizontalLocation.Current))).GetEnumerator();
							goto case 19;
						case 18:
							state = 22;
							Altova.Mapforce.MFEnumerator.Dispose(var8_horizontalLocation); var8_horizontalLocation = null;
							var10_horizontalLocation = (closure.var2_horizontalLocation).GetEnumerator();
							goto case 22;
						case 19:
							state = 19;
							if (!var9_localX.MoveNext()) { state = 20; goto case 20; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Coordinate1", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var9_localX.Current))))));
							pos++;
							return true;
						case 20:
							state = 17;
							Altova.Mapforce.MFEnumerator.Dispose(var9_localX); var9_localX = null;
							goto case 17;
						case 22:
							state = 24;
							if (!var10_horizontalLocation.MoveNext()) { state = 23; goto case 23; }
							var11_localY = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("localY", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var10_horizontalLocation.Current))).GetEnumerator();
							goto case 24;
						case 23:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var10_horizontalLocation); var10_horizontalLocation = null;
							return false;
						case 24:
							state = 24;
							if (!var11_localY.MoveNext()) { state = 25; goto case 25; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Coordinate2", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var11_localY.Current))))));
							pos++;
							return true;
						case 25:
							state = 22;
							Altova.Mapforce.MFEnumerator.Dispose(var11_localY); var11_localY = null;
							goto case 22;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_horizontalLocation); var3_horizontalLocation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_original); var5_original = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_description); var6_description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_extensionNameValue); var7_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_localX); var9_localX = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_horizontalLocation); var8_horizontalLocation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_localY); var11_localY = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_horizontalLocation); var10_horizontalLocation = null;
				}
			}
		}
		class seq50_seq_ : IEnumerable
		{

			public seq50_seq_(
			)
			{
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq50_seq_ closure;
				public Enumerator(seq50_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/commonv2}VerticalUnknownCrs")));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Unknown", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("unknown"));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_well_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_obj_well_Instance
			)
			{
				this.var1_obj_well_Instance = var1_obj_well_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_wells;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_wells = ((new main(closure.var1_obj_well_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_wells.MoveNext()) { state = 3; goto case 3; }
							current = var2_wells.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_wells); var2_wells = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_wells); var2_wells = null;
				}
			}
		}

	}
}
