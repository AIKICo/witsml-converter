////////////////////////////////////////////////////////////////////////
//
// Map14To20MapToWellCMLedger.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map14To20
{

	public class Map14To20MapToWellCMLedger : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_obj_wellCMLedger2Instance;
		// members
		#endregion //Members


		public void Run(String obj_wellCMLedger2SourceFilename, string WellCMLedger2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input obj_wellCMLedger2Source = new Altova.IO.FileInput(obj_wellCMLedger2SourceFilename))
			// open target stream
			using (Altova.IO.Output WellCMLedger2Target = new Altova.IO.FileOutput(WellCMLedger2TargetFilename))
			{
				// run
				Run(obj_wellCMLedger2Source, WellCMLedger2Target);
			}
		}

		public void Run(Altova.IO.Input obj_wellCMLedger2Source, Altova.IO.Output WellCMLedger2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + obj_wellCMLedger2Source.Filename + "...\n");
			XmlDocument obj_wellCMLedger2DocSourceObject = XmlTreeOperations.LoadDocument(obj_wellCMLedger2Source);


			m_obj_wellCMLedger2Instance = obj_wellCMLedger2DocSourceObject;
			if (runDoesCloseAll)
				obj_wellCMLedger2Source.Close();
				// Create the target
				XmlDocument WellCMLedger2Doc = (WellCMLedger2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? WellCMLedger2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_obj_wellCMLedger2Instance, obj_wellCMLedger2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, WellCMLedger2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				WellCMLedger2Doc,
				WellCMLedger2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					obj_wellCMLedger2Source.Close();
					WellCMLedger2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_wellCMLedger_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_obj_wellCMLedger_Instance
			)
			{
				this.var1_obj_wellCMLedger_Instance = var1_obj_wellCMLedger_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_wellCMLedgers;
				private System.Collections.IEnumerable var3_first_items;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_wellCMLedgers = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wellCMLedgers", "http://www.witsml.org/schemas/1series"), closure.var1_obj_wellCMLedger_Instance));
							var3_first_items = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FirstItems((new seq1_join(var2_wellCMLedgers)), 1m));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("WellCMLedger", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq2_join(var3_first_items, var2_wellCMLedgers)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellCMLedgers;

			public seq1_join(
				System.Collections.IEnumerable var1_wellCMLedgers
			)
			{
				this.var1_wellCMLedgers = var1_wellCMLedgers;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_wellCMLedgers;
				private IEnumerator var3_wellCMLedger;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_wellCMLedgers = (closure.var1_wellCMLedgers).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_wellCMLedgers.MoveNext()) { state = 3; goto case 3; }
							var3_wellCMLedger = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wellCMLedger", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_wellCMLedgers.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_wellCMLedgers); var2_wellCMLedgers = null;
							return false;
						case 4:
							state = 4;
							if (!var3_wellCMLedger.MoveNext()) { state = 5; goto case 5; }
							current = var3_wellCMLedger.Current;
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_wellCMLedger); var3_wellCMLedger = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_wellCMLedger); var3_wellCMLedger = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_wellCMLedgers); var2_wellCMLedgers = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_first_items;
			private readonly System.Collections.IEnumerable var2_wellCMLedgers;

			public seq2_join(
				System.Collections.IEnumerable var1_first_items,
				System.Collections.IEnumerable var2_wellCMLedgers
			)
			{
				this.var1_first_items = var1_first_items;
				this.var2_wellCMLedgers = var2_wellCMLedgers;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var3_first_items;
				private IEnumerator var4_first_items;
				private System.Collections.IEnumerable var5_box;
				private System.Collections.IEnumerable var6_mdTop;
				private Altova.Mapforce.IMFNode var7_create_element_qname;
				private System.Collections.IEnumerable var8_mdBottom;
				private System.Collections.IEnumerable var9_uid;
				private IEnumerator var10_customData;
				private IEnumerator var11_extensionNameValue;
				private IEnumerator var12_parentEventID;
				private IEnumerator var13_dTimStart;
				private IEnumerator var14_dTimEnd;
				private IEnumerator var15_duration;
				private IEnumerator var16_eventOrder;
				private IEnumerator var17_rigID;
				private IEnumerator var18_type;
				private IEnumerator var19_isPlan;
				private IEnumerator var20_workOrderID;
				private IEnumerator var21_businessAssociate;
				private IEnumerator var22_responsiblePerson;
				private IEnumerator var23_contact;
				private IEnumerator var24_nonproductive;
				private IEnumerator var25_trouble;
				private IEnumerator var26_preventiveMaintenanc;
				private IEnumerator var27_unplanned;
				private IEnumerator var28_phase;
				private IEnumerator var29_comment;
				private IEnumerator var30_description;
				private IEnumerator var31_cost;
				private IEnumerator var32_participant;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("eml", "http://www.energistics.org/energyml/data/commonv2");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateNamespace("gco", "http://www.isotc211.org/2005/gco");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateNamespace("gmd", "http://www.isotc211.org/2005/gmd");
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateNamespace("gsr", "http://www.isotc211.org/2005/gsr");
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateNamespace("gts", "http://www.isotc211.org/2005/gts");
							pos++;
							return true;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateNamespace("gml", "http://www.opengis.net/gml/3.2");
							pos++;
							return true;
						case 7:
							state = 8;
							current = Altova.Functions.Core.CreateNamespace("xlink", "http://www.w3.org/1999/xlink");
							pos++;
							return true;
						case 8:
							state = 9;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.energistics.org/energyml/data/witsmlv2 file:///D:/Repos/witsmlvalidation/witsml/energyml/2.0/data/witsml/v2.0/xsd_schemas/WellCMLedger.xsd"));
							pos++;
							return true;
						case 9:
							state = 10;
							var3_first_items = (closure.var1_first_items).GetEnumerator();
							goto case 10;
						case 10:
							state = 12;
							if (!var3_first_items.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("schemaVersion", ""), Altova.Functions.Core.Box("2.0"));
							pos++;
							return true;
						case 11:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
							var4_first_items = (closure.var1_first_items).GetEnumerator();
							goto case 14;
						case 12:
							state = 10;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uuid", ""), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 14:
							state = 16;
							if (!var4_first_items.MoveNext()) { state = 15; goto case 15; }
							var5_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box("1411_input"));
							var6_mdTop = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdTop", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current)));
							var7_create_element_qname = (Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Uuid", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000")));
							var8_mdBottom = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdBottom", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current)));
							var9_uid = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), (Altova.Mapforce.IMFNode)(var4_first_items.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Aliases", "http://www.energistics.org/energyml/data/commonv2"), (new seq3_join(closure.var2_wellCMLedgers, var9_uid)));
							pos++;
							return true;
						case 15:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
							return false;
						case 16:
							state = 17;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), (new seq4_join((Altova.Mapforce.IMFNode)(var4_first_items.Current), var5_box, var9_uid)));
							pos++;
							return true;
						case 17:
							state = 18;
							var10_customData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var10_customData.MoveNext()) { state = 19; goto case 19; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:CustomData", "http://www.energistics.org/energyml/data/commonv2"), tbf.tbf1_CustomData.Eval((Altova.Mapforce.IMFNode)(var10_customData.Current)));
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var10_customData); var10_customData = null;
							var11_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 21;
						case 21:
							state = 21;
							if (!var11_extensionNameValue.MoveNext()) { state = 22; goto case 22; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ExtensionNameValue", "http://www.energistics.org/energyml/data/commonv2"), (new seq5_join((Altova.Mapforce.IMFNode)(var11_extensionNameValue.Current))));
							pos++;
							return true;
						case 22:
							state = 24;
							Altova.Mapforce.MFEnumerator.Dispose(var11_extensionNameValue); var11_extensionNameValue = null;
							var12_parentEventID = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("parentEventID", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 24;
						case 24:
							state = 24;
							if (!var12_parentEventID.MoveNext()) { state = 25; goto case 25; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ParentEventID", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var12_parentEventID.Current))));
							pos++;
							return true;
						case 25:
							state = 27;
							Altova.Mapforce.MFEnumerator.Dispose(var12_parentEventID); var12_parentEventID = null;
							var13_dTimStart = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTimStart", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 27;
						case 27:
							state = 27;
							if (!var13_dTimStart.MoveNext()) { state = 28; goto case 28; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DTimStart", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_dTimStart.Current))))));
							pos++;
							return true;
						case 28:
							state = 30;
							Altova.Mapforce.MFEnumerator.Dispose(var13_dTimStart); var13_dTimStart = null;
							var14_dTimEnd = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTimEnd", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 30;
						case 30:
							state = 30;
							if (!var14_dTimEnd.MoveNext()) { state = 31; goto case 31; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DTimEnd", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var14_dTimEnd.Current))))));
							pos++;
							return true;
						case 31:
							state = 33;
							Altova.Mapforce.MFEnumerator.Dispose(var14_dTimEnd); var14_dTimEnd = null;
							var15_duration = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("duration", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 33;
						case 33:
							state = 33;
							if (!var15_duration.MoveNext()) { state = 34; goto case 34; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Duration", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_TimeMeasure.Eval((Altova.Mapforce.IMFNode)(var15_duration.Current)));
							pos++;
							return true;
						case 34:
							state = 36;
							Altova.Mapforce.MFEnumerator.Dispose(var15_duration); var15_duration = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq6_join(var8_mdBottom, var6_mdTop)));
							pos++;
							return true;
						case 36:
							state = 37;
							var16_eventOrder = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("eventOrder", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 37;
						case 37:
							state = 37;
							if (!var16_eventOrder.MoveNext()) { state = 38; goto case 38; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EventOrder", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var16_eventOrder.Current))))))))));
							pos++;
							return true;
						case 38:
							state = 40;
							Altova.Mapforce.MFEnumerator.Dispose(var16_eventOrder); var16_eventOrder = null;
							var17_rigID = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("rigID", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 40;
						case 40:
							state = 40;
							if (!var17_rigID.MoveNext()) { state = 41; goto case 41; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("RigID", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var17_rigID.Current))));
							pos++;
							return true;
						case 41:
							state = 43;
							Altova.Mapforce.MFEnumerator.Dispose(var17_rigID); var17_rigID = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ActivityCode", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("completion operations"));
							pos++;
							return true;
						case 43:
							state = 44;
							var18_type = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("type", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 44;
						case 44:
							state = 44;
							if (!var18_type.MoveNext()) { state = 45; goto case 45; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Type", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq10_seq_((Altova.Mapforce.IMFNode)(var18_type.Current))));
							pos++;
							return true;
						case 45:
							state = 47;
							Altova.Mapforce.MFEnumerator.Dispose(var18_type); var18_type = null;
							var19_isPlan = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("isPlan", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 47;
						case 47:
							state = 47;
							if (!var19_isPlan.MoveNext()) { state = 48; goto case 48; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("IsPlan", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var19_isPlan.Current))))));
							pos++;
							return true;
						case 48:
							state = 50;
							Altova.Mapforce.MFEnumerator.Dispose(var19_isPlan); var19_isPlan = null;
							var20_workOrderID = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("workOrderID", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 50;
						case 50:
							state = 50;
							if (!var20_workOrderID.MoveNext()) { state = 51; goto case 51; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("WorkOrderID", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var20_workOrderID.Current))));
							pos++;
							return true;
						case 51:
							state = 53;
							Altova.Mapforce.MFEnumerator.Dispose(var20_workOrderID); var20_workOrderID = null;
							var21_businessAssociate = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("businessAssociate", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 53;
						case 53:
							state = 53;
							if (!var21_businessAssociate.MoveNext()) { state = 54; goto case 54; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("BusinessAssociate", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var21_businessAssociate.Current))));
							pos++;
							return true;
						case 54:
							state = 56;
							Altova.Mapforce.MFEnumerator.Dispose(var21_businessAssociate); var21_businessAssociate = null;
							var22_responsiblePerson = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("responsiblePerson", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 56;
						case 56:
							state = 56;
							if (!var22_responsiblePerson.MoveNext()) { state = 57; goto case 57; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ResponsiblePerson", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var22_responsiblePerson.Current))));
							pos++;
							return true;
						case 57:
							state = 59;
							Altova.Mapforce.MFEnumerator.Dispose(var22_responsiblePerson); var22_responsiblePerson = null;
							var23_contact = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("contact", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 59;
						case 59:
							state = 59;
							if (!var23_contact.MoveNext()) { state = 60; goto case 60; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Contact", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var23_contact.Current))));
							pos++;
							return true;
						case 60:
							state = 62;
							Altova.Mapforce.MFEnumerator.Dispose(var23_contact); var23_contact = null;
							var24_nonproductive = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nonproductive", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 62;
						case 62:
							state = 62;
							if (!var24_nonproductive.MoveNext()) { state = 63; goto case 63; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Nonproductive", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var24_nonproductive.Current))))));
							pos++;
							return true;
						case 63:
							state = 65;
							Altova.Mapforce.MFEnumerator.Dispose(var24_nonproductive); var24_nonproductive = null;
							var25_trouble = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("trouble", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 65;
						case 65:
							state = 65;
							if (!var25_trouble.MoveNext()) { state = 66; goto case 66; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Trouble", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var25_trouble.Current))))));
							pos++;
							return true;
						case 66:
							state = 68;
							Altova.Mapforce.MFEnumerator.Dispose(var25_trouble); var25_trouble = null;
							var26_preventiveMaintenanc = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("preventiveMaintenance", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 68;
						case 68:
							state = 68;
							if (!var26_preventiveMaintenanc.MoveNext()) { state = 69; goto case 69; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("PreventiveMaintenance", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var26_preventiveMaintenanc.Current))))));
							pos++;
							return true;
						case 69:
							state = 71;
							Altova.Mapforce.MFEnumerator.Dispose(var26_preventiveMaintenanc); var26_preventiveMaintenanc = null;
							var27_unplanned = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("unplanned", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 71;
						case 71:
							state = 71;
							if (!var27_unplanned.MoveNext()) { state = 72; goto case 72; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Unplanned", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var27_unplanned.Current))))));
							pos++;
							return true;
						case 72:
							state = 74;
							Altova.Mapforce.MFEnumerator.Dispose(var27_unplanned); var27_unplanned = null;
							var28_phase = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("phase", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 74;
						case 74:
							state = 74;
							if (!var28_phase.MoveNext()) { state = 75; goto case 75; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Phase", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var28_phase.Current))));
							pos++;
							return true;
						case 75:
							state = 77;
							Altova.Mapforce.MFEnumerator.Dispose(var28_phase); var28_phase = null;
							var29_comment = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("comment", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 77;
						case 77:
							state = 77;
							if (!var29_comment.MoveNext()) { state = 78; goto case 78; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Comment", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var29_comment.Current))));
							pos++;
							return true;
						case 78:
							state = 80;
							Altova.Mapforce.MFEnumerator.Dispose(var29_comment); var29_comment = null;
							var30_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 80;
						case 80:
							state = 80;
							if (!var30_description.MoveNext()) { state = 81; goto case 81; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var30_description.Current))));
							pos++;
							return true;
						case 81:
							state = 83;
							Altova.Mapforce.MFEnumerator.Dispose(var30_description); var30_description = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq11_seq_(var5_box, var7_create_element_qname)));
							pos++;
							return true;
						case 83:
							state = 84;
							var31_cost = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("cost", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 84;
						case 84:
							state = 84;
							if (!var31_cost.MoveNext()) { state = 85; goto case 85; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Cost", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq12_join((Altova.Mapforce.IMFNode)(var31_cost.Current))));
							pos++;
							return true;
						case 85:
							state = 87;
							Altova.Mapforce.MFEnumerator.Dispose(var31_cost); var31_cost = null;
							var32_participant = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("participant", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 87;
						case 87:
							state = 87;
							if (!var32_participant.MoveNext()) { state = 88; goto case 88; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Participant", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq16_join((Altova.Mapforce.IMFNode)(var32_participant.Current), var7_create_element_qname)));
							pos++;
							return true;
						case 88:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var32_participant); var32_participant = null;
							goto case 14;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_customData); var10_customData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_extensionNameValue); var11_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_parentEventID); var12_parentEventID = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_dTimStart); var13_dTimStart = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_dTimEnd); var14_dTimEnd = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_duration); var15_duration = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_eventOrder); var16_eventOrder = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_rigID); var17_rigID = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_type); var18_type = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_isPlan); var19_isPlan = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_workOrderID); var20_workOrderID = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_businessAssociate); var21_businessAssociate = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_responsiblePerson); var22_responsiblePerson = null;
					Altova.Mapforce.MFEnumerator.Dispose(var23_contact); var23_contact = null;
					Altova.Mapforce.MFEnumerator.Dispose(var24_nonproductive); var24_nonproductive = null;
					Altova.Mapforce.MFEnumerator.Dispose(var25_trouble); var25_trouble = null;
					Altova.Mapforce.MFEnumerator.Dispose(var26_preventiveMaintenanc); var26_preventiveMaintenanc = null;
					Altova.Mapforce.MFEnumerator.Dispose(var27_unplanned); var27_unplanned = null;
					Altova.Mapforce.MFEnumerator.Dispose(var28_phase); var28_phase = null;
					Altova.Mapforce.MFEnumerator.Dispose(var29_comment); var29_comment = null;
					Altova.Mapforce.MFEnumerator.Dispose(var30_description); var30_description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var31_cost); var31_cost = null;
					Altova.Mapforce.MFEnumerator.Dispose(var32_participant); var32_participant = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
				}
			}
		}
		class seq3_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wellCMLedgers;
			private readonly System.Collections.IEnumerable var2_uid;

			public seq3_join(
				System.Collections.IEnumerable var1_wellCMLedgers,
				System.Collections.IEnumerable var2_uid
			)
			{
				this.var1_wellCMLedgers = var1_wellCMLedgers;
				this.var2_uid = var2_uid;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_join closure;
				private IEnumerator var3_wellCMLedgers;
				private IEnumerator var4_uid;
				public Enumerator(seq3_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_wellCMLedgers = (closure.var1_wellCMLedgers).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_wellCMLedgers.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("authority", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("version", ""), (Altova.Mapforce.IMFNode)(var3_wellCMLedgers.Current))))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_wellCMLedgers); var3_wellCMLedgers = null;
							var4_uid = (closure.var2_uid).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var4_uid.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Identifier", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat("WellCMLedger", Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_uid.Current))), ".xml")));
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_wellCMLedgers); var3_wellCMLedgers = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
				}
			}
		}
		class seq4_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_box;
			private readonly System.Collections.IEnumerable var3_uid;

			public seq4_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_box,
				System.Collections.IEnumerable var3_uid
			)
			{
				this.var1_cur = var1_cur;
				this.var2_box = var2_box;
				this.var3_uid = var3_uid;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_join closure;
				private IEnumerator var4_uid;
				private IEnumerator var5_commonData;
				private IEnumerator var6_dTimLastChange;
				public Enumerator(seq4_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var4_uid = (closure.var3_uid).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var4_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Originator", "http://www.energistics.org/energyml/data/commonv2"), closure.var2_box);
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Format", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Mapforce"));
							pos++;
							return true;
						case 6:
							state = 7;
							var5_commonData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("commonData", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 9;
							if (!var5_commonData.MoveNext()) { state = 8; goto case 8; }
							var6_dTimLastChange = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTimLastChange", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var5_commonData.Current))).GetEnumerator();
							goto case 9;
						case 8:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_commonData); var5_commonData = null;
							return false;
						case 9:
							state = 9;
							if (!var6_dTimLastChange.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_dTimLastChange.Current))))));
							pos++;
							return true;
						case 10:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var6_dTimLastChange); var6_dTimLastChange = null;
							goto case 7;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_dTimLastChange); var6_dTimLastChange = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_commonData); var5_commonData = null;
				}
			}
		}
		class seq5_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq5_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_join closure;
				private IEnumerator var2_dTim;
				private IEnumerator var3_index;
				private IEnumerator var4_description;
				public Enumerator(seq5_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Name", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Value", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("length"));
							pos++;
							return true;
						case 4:
							state = 5;
							var2_dTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var2_dTim.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:DTim", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_dTim.Current))))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var2_dTim); var2_dTim = null;
							var3_index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var3_index.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Index", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_index.Current))))))))));
							pos++;
							return true;
						case 9:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var3_index); var3_index = null;
							var4_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var4_description.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_description.Current))));
							pos++;
							return true;
						case 12:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_description); var4_description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_dTim); var2_dTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_index); var3_index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_description); var4_description = null;
				}
			}
		}
		class seq6_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_mdBottom;
			private readonly System.Collections.IEnumerable var2_mdTop;

			public seq6_join(
				System.Collections.IEnumerable var1_mdBottom,
				System.Collections.IEnumerable var2_mdTop
			)
			{
				this.var1_mdBottom = var1_mdBottom;
				this.var2_mdTop = var2_mdTop;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_join closure;
				private IEnumerator var3_if_exists;
				private IEnumerator var4_if_exists;
				public Enumerator(seq6_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("datum", ""), Altova.Functions.Core.Box("unknown"));
							pos++;
							return true;
						case 2:
							state = 3;
							var3_if_exists = ((new seq7_if_exists(closure.var2_mdTop))).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var3_if_exists.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdTop", "http://www.energistics.org/energyml/data/commonv2"), (new seq8_seq_((double)(var3_if_exists.Current))));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var3_if_exists); var3_if_exists = null;
							var4_if_exists = ((new seq9_if_exists(closure.var1_mdBottom))).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var4_if_exists.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdBase", "http://www.energistics.org/energyml/data/commonv2"), (new seq8_seq_((double)(var4_if_exists.Current))));
							pos++;
							return true;
						case 7:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_if_exists); var4_if_exists = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_if_exists); var3_if_exists = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_if_exists); var4_if_exists = null;
				}
			}
		}
		class seq7_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_mdTop;

			public seq7_if_exists(
				System.Collections.IEnumerable var1_mdTop
			)
			{
				this.var1_mdTop = var1_mdTop;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_if_exists closure;
				private IEnumerator var2_mdTop;
				public Enumerator(seq7_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_mdTop))) { state = 2; goto case 2;  }
							var2_mdTop = (closure.var1_mdTop).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DecimalToDouble(0m);
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var2_mdTop.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_mdTop.Current)));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_mdTop); var2_mdTop = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_mdTop); var2_mdTop = null;
				}
			}
		}
		class seq8_seq_ : IEnumerable
		{
			private readonly double var1_cur;

			public seq8_seq_(
				double var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq8_seq_ closure;
				public Enumerator(seq8_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box("ft"));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(closure.var1_cur);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq9_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_mdBottom;

			public seq9_if_exists(
				System.Collections.IEnumerable var1_mdBottom
			)
			{
				this.var1_mdBottom = var1_mdBottom;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq9_if_exists closure;
				private IEnumerator var2_mdBottom;
				public Enumerator(seq9_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_mdBottom))) { state = 2; goto case 2;  }
							var2_mdBottom = (closure.var1_mdBottom).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DecimalToDouble(0m);
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var2_mdBottom.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_mdBottom.Current)));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_mdBottom); var2_mdBottom = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_mdBottom); var2_mdBottom = null;
				}
			}
		}
		class seq10_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq10_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq10_seq_ closure;
				public Enumerator(seq10_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("Class", ""), Altova.Functions.Core.Box("job"));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.NodeToString(closure.var1_cur);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq11_seq_ : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_box;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;

			public seq11_seq_(
				System.Collections.IEnumerable var1_box,
				Altova.Mapforce.IMFNode var2_create_element_qname
			)
			{
				this.var1_box = var1_box;
				this.var2_create_element_qname = var2_create_element_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq11_seq_ closure;
				public Enumerator(seq11_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ContentType", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("wellbore"));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("WellCMLedger wellbore"));
							pos++;
							return true;
						case 3:
							state = 4;
							current = closure.var2_create_element_qname;
							pos++;
							return true;
						case 4:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:UuidAuthority", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_box);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq12_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq12_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq12_join closure;
				private IEnumerator var2_uid;
				private IEnumerator var3_numAFE;
				private IEnumerator var4_costGroup;
				private IEnumerator var5_costSubCode;
				private IEnumerator var6_costItemDescription;
				private IEnumerator var7_itemKind;
				private IEnumerator var8_itemSize;
				private IEnumerator var9_qtyItem;
				private IEnumerator var10_numInvoice;
				private IEnumerator var11_numPO;
				private IEnumerator var12_numTicket;
				private IEnumerator var13_isCarryOver;
				private IEnumerator var14_isRental;
				private IEnumerator var15_nameTag;
				private IEnumerator var16_numSerial;
				private IEnumerator var17_nameVendor;
				private IEnumerator var18_numVendor;
				private IEnumerator var19_pool;
				private IEnumerator var20_estimated;
				private IEnumerator var21_extensionNameValue;
				private IEnumerator var22_costPerItem;
				public Enumerator(seq12_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
							var3_numAFE = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("numAFE", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_numAFE.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NumAFE", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_numAFE.Current))));
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var3_numAFE); var3_numAFE = null;
							var4_costGroup = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("costGroup", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var4_costGroup.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CostGroup", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_costGroup.Current))));
							pos++;
							return true;
						case 9:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var4_costGroup); var4_costGroup = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CostClass", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("costClass", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 11:
							state = 12;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CostCode", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("costCode", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 12:
							state = 13;
							var5_costSubCode = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("costSubCode", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_costSubCode.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CostSubCode", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_costSubCode.Current))));
							pos++;
							return true;
						case 14:
							state = 16;
							Altova.Mapforce.MFEnumerator.Dispose(var5_costSubCode); var5_costSubCode = null;
							var6_costItemDescription = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("costItemDescription", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 16;
						case 16:
							state = 16;
							if (!var6_costItemDescription.MoveNext()) { state = 17; goto case 17; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CostItemDescription", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_costItemDescription.Current))));
							pos++;
							return true;
						case 17:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var6_costItemDescription); var6_costItemDescription = null;
							var7_itemKind = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("itemKind", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 19;
						case 19:
							state = 19;
							if (!var7_itemKind.MoveNext()) { state = 20; goto case 20; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ItemKind", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_itemKind.Current))));
							pos++;
							return true;
						case 20:
							state = 22;
							Altova.Mapforce.MFEnumerator.Dispose(var7_itemKind); var7_itemKind = null;
							var8_itemSize = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("itemSize", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 22;
						case 22:
							state = 22;
							if (!var8_itemSize.MoveNext()) { state = 23; goto case 23; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ItemSize", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_itemSize.Current))))));
							pos++;
							return true;
						case 23:
							state = 25;
							Altova.Mapforce.MFEnumerator.Dispose(var8_itemSize); var8_itemSize = null;
							var9_qtyItem = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("qtyItem", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 25;
						case 25:
							state = 25;
							if (!var9_qtyItem.MoveNext()) { state = 26; goto case 26; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("QtyItem", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var9_qtyItem.Current))))))))));
							pos++;
							return true;
						case 26:
							state = 28;
							Altova.Mapforce.MFEnumerator.Dispose(var9_qtyItem); var9_qtyItem = null;
							var10_numInvoice = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("numInvoice", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 28;
						case 28:
							state = 28;
							if (!var10_numInvoice.MoveNext()) { state = 29; goto case 29; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NumInvoice", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var10_numInvoice.Current))));
							pos++;
							return true;
						case 29:
							state = 31;
							Altova.Mapforce.MFEnumerator.Dispose(var10_numInvoice); var10_numInvoice = null;
							var11_numPO = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("numPO", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 31;
						case 31:
							state = 31;
							if (!var11_numPO.MoveNext()) { state = 32; goto case 32; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NumPO", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var11_numPO.Current))));
							pos++;
							return true;
						case 32:
							state = 34;
							Altova.Mapforce.MFEnumerator.Dispose(var11_numPO); var11_numPO = null;
							var12_numTicket = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("numTicket", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 34;
						case 34:
							state = 34;
							if (!var12_numTicket.MoveNext()) { state = 35; goto case 35; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NumTicket", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var12_numTicket.Current))));
							pos++;
							return true;
						case 35:
							state = 37;
							Altova.Mapforce.MFEnumerator.Dispose(var12_numTicket); var12_numTicket = null;
							var13_isCarryOver = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("isCarryOver", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 37;
						case 37:
							state = 37;
							if (!var13_isCarryOver.MoveNext()) { state = 38; goto case 38; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("IsCarryOver", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_isCarryOver.Current))))));
							pos++;
							return true;
						case 38:
							state = 40;
							Altova.Mapforce.MFEnumerator.Dispose(var13_isCarryOver); var13_isCarryOver = null;
							var14_isRental = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("isRental", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 40;
						case 40:
							state = 40;
							if (!var14_isRental.MoveNext()) { state = 41; goto case 41; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("IsRental", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var14_isRental.Current))))));
							pos++;
							return true;
						case 41:
							state = 43;
							Altova.Mapforce.MFEnumerator.Dispose(var14_isRental); var14_isRental = null;
							var15_nameTag = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nameTag", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 43;
						case 43:
							state = 43;
							if (!var15_nameTag.MoveNext()) { state = 44; goto case 44; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NameTag", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq13_join((Altova.Mapforce.IMFNode)(var15_nameTag.Current))));
							pos++;
							return true;
						case 44:
							state = 46;
							Altova.Mapforce.MFEnumerator.Dispose(var15_nameTag); var15_nameTag = null;
							var16_numSerial = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("numSerial", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 46;
						case 46:
							state = 46;
							if (!var16_numSerial.MoveNext()) { state = 47; goto case 47; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NumSerial", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var16_numSerial.Current))));
							pos++;
							return true;
						case 47:
							state = 49;
							Altova.Mapforce.MFEnumerator.Dispose(var16_numSerial); var16_numSerial = null;
							var17_nameVendor = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nameVendor", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 49;
						case 49:
							state = 49;
							if (!var17_nameVendor.MoveNext()) { state = 50; goto case 50; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NameVendor", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var17_nameVendor.Current))));
							pos++;
							return true;
						case 50:
							state = 52;
							Altova.Mapforce.MFEnumerator.Dispose(var17_nameVendor); var17_nameVendor = null;
							var18_numVendor = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("numVendor", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 52;
						case 52:
							state = 52;
							if (!var18_numVendor.MoveNext()) { state = 53; goto case 53; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NumVendor", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var18_numVendor.Current))));
							pos++;
							return true;
						case 53:
							state = 55;
							Altova.Mapforce.MFEnumerator.Dispose(var18_numVendor); var18_numVendor = null;
							var19_pool = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("pool", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 55;
						case 55:
							state = 55;
							if (!var19_pool.MoveNext()) { state = 56; goto case 56; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Pool", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var19_pool.Current))));
							pos++;
							return true;
						case 56:
							state = 58;
							Altova.Mapforce.MFEnumerator.Dispose(var19_pool); var19_pool = null;
							var20_estimated = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("estimated", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 58;
						case 58:
							state = 58;
							if (!var20_estimated.MoveNext()) { state = 59; goto case 59; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Estimated", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var20_estimated.Current))))));
							pos++;
							return true;
						case 59:
							state = 61;
							Altova.Mapforce.MFEnumerator.Dispose(var20_estimated); var20_estimated = null;
							var21_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 61;
						case 61:
							state = 61;
							if (!var21_extensionNameValue.MoveNext()) { state = 62; goto case 62; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_join((Altova.Mapforce.IMFNode)(var21_extensionNameValue.Current))));
							pos++;
							return true;
						case 62:
							state = 64;
							Altova.Mapforce.MFEnumerator.Dispose(var21_extensionNameValue); var21_extensionNameValue = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CostAmount", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq14_map(closure.var1_cur)));
							pos++;
							return true;
						case 64:
							state = 65;
							var22_costPerItem = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("costPerItem", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 65;
						case 65:
							state = 65;
							if (!var22_costPerItem.MoveNext()) { state = 66; goto case 66; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CostPerItem", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq15_map((Altova.Mapforce.IMFNode)(var22_costPerItem.Current))));
							pos++;
							return true;
						case 66:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var22_costPerItem); var22_costPerItem = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_numAFE); var3_numAFE = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_costGroup); var4_costGroup = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_costSubCode); var5_costSubCode = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_costItemDescription); var6_costItemDescription = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_itemKind); var7_itemKind = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_itemSize); var8_itemSize = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_qtyItem); var9_qtyItem = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_numInvoice); var10_numInvoice = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_numPO); var11_numPO = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_numTicket); var12_numTicket = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_isCarryOver); var13_isCarryOver = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_isRental); var14_isRental = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_nameTag); var15_nameTag = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_numSerial); var16_numSerial = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_nameVendor); var17_nameVendor = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_numVendor); var18_numVendor = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_pool); var19_pool = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_estimated); var20_estimated = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_extensionNameValue); var21_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_costPerItem); var22_costPerItem = null;
				}
			}
		}
		class seq13_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq13_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq13_join closure;
				private IEnumerator var2_uid;
				private IEnumerator var3_installationDate;
				private IEnumerator var4_installationCompany;
				private IEnumerator var5_mountingCode;
				private IEnumerator var6_comment;
				private IEnumerator var7_extensionNameValue;
				public Enumerator(seq13_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NumberingScheme", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("F2F"));
							pos++;
							return true;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Technology", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("tagged"));
							pos++;
							return true;
						case 7:
							state = 8;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Location", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("body"));
							pos++;
							return true;
						case 8:
							state = 9;
							var3_installationDate = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("installationDate", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var3_installationDate.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("InstallationDate", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_installationDate.Current))))));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var3_installationDate); var3_installationDate = null;
							var4_installationCompany = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("installationCompany", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var4_installationCompany.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("InstallationCompany", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_installationCompany.Current))));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var4_installationCompany); var4_installationCompany = null;
							var5_mountingCode = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mountingCode", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 15;
						case 15:
							state = 15;
							if (!var5_mountingCode.MoveNext()) { state = 16; goto case 16; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MountingCode", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_mountingCode.Current))));
							pos++;
							return true;
						case 16:
							state = 18;
							Altova.Mapforce.MFEnumerator.Dispose(var5_mountingCode); var5_mountingCode = null;
							var6_comment = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("comment", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var6_comment.MoveNext()) { state = 19; goto case 19; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Comment", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_comment.Current))));
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var6_comment); var6_comment = null;
							var7_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 21;
						case 21:
							state = 21;
							if (!var7_extensionNameValue.MoveNext()) { state = 22; goto case 22; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_join((Altova.Mapforce.IMFNode)(var7_extensionNameValue.Current))));
							pos++;
							return true;
						case 22:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var7_extensionNameValue); var7_extensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_uid); var2_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_installationDate); var3_installationDate = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_installationCompany); var4_installationCompany = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_mountingCode); var5_mountingCode = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_comment); var6_comment = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_extensionNameValue); var7_extensionNameValue = null;
				}
			}
		}
		class seq14_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq14_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq14_map closure;
				private IEnumerator var2_currency;
				public Enumerator(seq14_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_currency = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("currency", ""), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("costAmount", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_currency.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("currency", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_currency.Current))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_currency); var2_currency = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_currency); var2_currency = null;
				}
			}
		}
		class seq15_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq15_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq15_map closure;
				private IEnumerator var2_currency;
				public Enumerator(seq15_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_currency = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("currency", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_currency.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("currency", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_currency.Current))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_currency); var2_currency = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_currency); var2_currency = null;
				}
			}
		}
		class seq16_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;

			public seq16_join(
				Altova.Mapforce.IMFNode var1_cur,
				Altova.Mapforce.IMFNode var2_create_element_qname
			)
			{
				this.var1_cur = var1_cur;
				this.var2_create_element_qname = var2_create_element_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq16_join closure;
				private IEnumerator var3_extNameValues;
				private IEnumerator var4_participant;
				public Enumerator(seq16_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_extNameValues = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extNameValues", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_extNameValues.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExtNameValues", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_join((Altova.Mapforce.IMFNode)(var3_extNameValues.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_extNameValues); var3_extNameValues = null;
							var4_participant = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("participant", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var4_participant.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Participant", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq17_join((Altova.Mapforce.IMFNode)(var4_participant.Current), closure.var2_create_element_qname)));
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_participant); var4_participant = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_extNameValues); var3_extNameValues = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_participant); var4_participant = null;
				}
			}
		}
		class seq17_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;

			public seq17_join(
				Altova.Mapforce.IMFNode var1_cur,
				Altova.Mapforce.IMFNode var2_create_element_qname
			)
			{
				this.var1_cur = var1_cur;
				this.var2_create_element_qname = var2_create_element_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq17_join closure;
				private IEnumerator var3_uid;
				private IEnumerator var4_rangeMin;
				private IEnumerator var5_rangeMax;
				private IEnumerator var6_rangeDateTimeMin;
				private IEnumerator var7_rangeDateTimeMax;
				private IEnumerator var8_mnemonicList;
				private IEnumerator var9_referenceDepth;
				private IEnumerator var10_referenceDateTime;
				private IEnumerator var11_extensionNameValue;
				private IEnumerator var12_sequence3;
				private IEnumerator var13_sequence1;
				private IEnumerator var14_sequence2;
				public Enumerator(seq17_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_uid); var3_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("IndexType", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("measured depth"));
							pos++;
							return true;
						case 5:
							state = 6;
							var4_rangeMin = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("rangeMin", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var4_rangeMin.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("RangeMin", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_GenericMeasure.Eval((Altova.Mapforce.IMFNode)(var4_rangeMin.Current)));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var4_rangeMin); var4_rangeMin = null;
							var5_rangeMax = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("rangeMax", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var5_rangeMax.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("RangeMax", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_GenericMeasure.Eval((Altova.Mapforce.IMFNode)(var5_rangeMax.Current)));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var5_rangeMax); var5_rangeMax = null;
							var6_rangeDateTimeMin = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("rangeDateTimeMin", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var6_rangeDateTimeMin.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("RangeDateTimeMin", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_rangeDateTimeMin.Current))))));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var6_rangeDateTimeMin); var6_rangeDateTimeMin = null;
							var7_rangeDateTimeMax = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("rangeDateTimeMax", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 15;
						case 15:
							state = 15;
							if (!var7_rangeDateTimeMax.MoveNext()) { state = 16; goto case 16; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("RangeDateTimeMax", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_rangeDateTimeMax.Current))))));
							pos++;
							return true;
						case 16:
							state = 18;
							Altova.Mapforce.MFEnumerator.Dispose(var7_rangeDateTimeMax); var7_rangeDateTimeMax = null;
							var8_mnemonicList = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mnemonicList", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var8_mnemonicList.MoveNext()) { state = 19; goto case 19; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MnemonicList", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_mnemonicList.Current))));
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var8_mnemonicList); var8_mnemonicList = null;
							var9_referenceDepth = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("referenceDepth", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 21;
						case 21:
							state = 21;
							if (!var9_referenceDepth.MoveNext()) { state = 22; goto case 22; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ReferenceDepth", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf4_MeasuredDepthCoord.Eval((Altova.Mapforce.IMFNode)(var9_referenceDepth.Current)));
							pos++;
							return true;
						case 22:
							state = 24;
							Altova.Mapforce.MFEnumerator.Dispose(var9_referenceDepth); var9_referenceDepth = null;
							var10_referenceDateTime = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("referenceDateTime", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 24;
						case 24:
							state = 24;
							if (!var10_referenceDateTime.MoveNext()) { state = 25; goto case 25; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ReferenceDateTime", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var10_referenceDateTime.Current))))));
							pos++;
							return true;
						case 25:
							state = 27;
							Altova.Mapforce.MFEnumerator.Dispose(var10_referenceDateTime); var10_referenceDateTime = null;
							var11_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 27;
						case 27:
							state = 27;
							if (!var11_extensionNameValue.MoveNext()) { state = 28; goto case 28; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_join((Altova.Mapforce.IMFNode)(var11_extensionNameValue.Current))));
							pos++;
							return true;
						case 28:
							state = 30;
							Altova.Mapforce.MFEnumerator.Dispose(var11_extensionNameValue); var11_extensionNameValue = null;
							var12_sequence3 = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("sequence3", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 30;
						case 30:
							state = 30;
							if (!var12_sequence3.MoveNext()) { state = 31; goto case 31; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Sequence3", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq18_map((Altova.Mapforce.IMFNode)(var12_sequence3.Current))));
							pos++;
							return true;
						case 31:
							state = 33;
							Altova.Mapforce.MFEnumerator.Dispose(var12_sequence3); var12_sequence3 = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ObjectReference", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq19_join(closure.var1_cur, closure.var2_create_element_qname)));
							pos++;
							return true;
						case 33:
							state = 34;
							var13_sequence1 = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("sequence1", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 34;
						case 34:
							state = 34;
							if (!var13_sequence1.MoveNext()) { state = 35; goto case 35; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Sequence1", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq18_map((Altova.Mapforce.IMFNode)(var13_sequence1.Current))));
							pos++;
							return true;
						case 35:
							state = 37;
							Altova.Mapforce.MFEnumerator.Dispose(var13_sequence1); var13_sequence1 = null;
							var14_sequence2 = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("sequence2", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 37;
						case 37:
							state = 37;
							if (!var14_sequence2.MoveNext()) { state = 38; goto case 38; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Sequence2", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq18_map((Altova.Mapforce.IMFNode)(var14_sequence2.Current))));
							pos++;
							return true;
						case 38:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var14_sequence2); var14_sequence2 = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_uid); var3_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_rangeMin); var4_rangeMin = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_rangeMax); var5_rangeMax = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_rangeDateTimeMin); var6_rangeDateTimeMin = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_rangeDateTimeMax); var7_rangeDateTimeMax = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_mnemonicList); var8_mnemonicList = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_referenceDepth); var9_referenceDepth = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_referenceDateTime); var10_referenceDateTime = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_extensionNameValue); var11_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_sequence3); var12_sequence3 = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_sequence1); var13_sequence1 = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_sequence2); var14_sequence2 = null;
				}
			}
		}
		class seq18_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq18_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq18_map closure;
				private IEnumerator var2_description;
				public Enumerator(seq18_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_description = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("description", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_description.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("description", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_description.Current))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_description); var2_description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_description); var2_description = null;
				}
			}
		}
		class seq19_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;

			public seq19_join(
				Altova.Mapforce.IMFNode var1_cur,
				Altova.Mapforce.IMFNode var2_create_element_qname
			)
			{
				this.var1_cur = var1_cur;
				this.var2_create_element_qname = var2_create_element_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq19_join closure;
				private IEnumerator var3_uidRef;
				public Enumerator(seq19_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ContentType", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("WellCMLedger contenttype"));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("WellCMLedger title"));
							pos++;
							return true;
						case 3:
							state = 4;
							current = closure.var2_create_element_qname;
							pos++;
							return true;
						case 4:
							state = 5;
							var3_uidRef = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uidRef", ""), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("objectReference", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var3_uidRef.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:UuidAuthority", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_uidRef.Current))));
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_uidRef); var3_uidRef = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_uidRef); var3_uidRef = null;
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_wellCMLedger_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_obj_wellCMLedger_Instance
			)
			{
				this.var1_obj_wellCMLedger_Instance = var1_obj_wellCMLedger_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_wellCMLedgers;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_wellCMLedgers = ((new main(closure.var1_obj_wellCMLedger_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_wellCMLedgers.MoveNext()) { state = 3; goto case 3; }
							current = var2_wellCMLedgers.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_wellCMLedgers); var2_wellCMLedgers = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_wellCMLedgers); var2_wellCMLedgers = null;
				}
			}
		}

	}
}
