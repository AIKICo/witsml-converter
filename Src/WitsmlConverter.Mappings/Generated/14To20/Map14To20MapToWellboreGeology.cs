////////////////////////////////////////////////////////////////////////
//
// Map14To20MapToWellboreGeology.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map14To20
{

	public class Map14To20MapToWellboreGeology : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_obj_mudLog2Instance;
		// members
		#endregion //Members


		public void Run(String obj_mudLog2SourceFilename, string WellboreGeology2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input obj_mudLog2Source = new Altova.IO.FileInput(obj_mudLog2SourceFilename))
			// open target stream
			using (Altova.IO.Output WellboreGeology2Target = new Altova.IO.FileOutput(WellboreGeology2TargetFilename))
			{
				// run
				Run(obj_mudLog2Source, WellboreGeology2Target);
			}
		}

		public void Run(Altova.IO.Input obj_mudLog2Source, Altova.IO.Output WellboreGeology2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + obj_mudLog2Source.Filename + "...\n");
			XmlDocument obj_mudLog2DocSourceObject = XmlTreeOperations.LoadDocument(obj_mudLog2Source);


			m_obj_mudLog2Instance = obj_mudLog2DocSourceObject;
			if (runDoesCloseAll)
				obj_mudLog2Source.Close();
				// Create the target
				XmlDocument WellboreGeology2Doc = (WellboreGeology2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? WellboreGeology2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_obj_mudLog2Instance, obj_mudLog2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, WellboreGeology2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				WellboreGeology2Doc,
				WellboreGeology2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					obj_mudLog2Source.Close();
					WellboreGeology2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_mudLog_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_obj_mudLog_Instance
			)
			{
				this.var1_obj_mudLog_Instance = var1_obj_mudLog_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_first_items;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_first_items = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FirstItems((new seq1_join(closure.var1_obj_mudLog_Instance)), 1m));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("WellboreGeology", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq2_join(var2_first_items)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_mudLog_Instance;

			public seq1_join(
				Altova.Mapforce.IMFNode var1_obj_mudLog_Instance
			)
			{
				this.var1_obj_mudLog_Instance = var1_obj_mudLog_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_mudLogs;
				private IEnumerator var3_mudLog;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_mudLogs = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mudLogs", "http://www.witsml.org/schemas/1series"), closure.var1_obj_mudLog_Instance)).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_mudLogs.MoveNext()) { state = 3; goto case 3; }
							var3_mudLog = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mudLog", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_mudLogs.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_mudLogs); var2_mudLogs = null;
							return false;
						case 4:
							state = 4;
							if (!var3_mudLog.MoveNext()) { state = 5; goto case 5; }
							current = var3_mudLog.Current;
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_mudLog); var3_mudLog = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_mudLog); var3_mudLog = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_mudLogs); var2_mudLogs = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_first_items;

			public seq2_join(
				System.Collections.IEnumerable var1_first_items
			)
			{
				this.var1_first_items = var1_first_items;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var2_first_items;
				private IEnumerator var3_first_items;
				private System.Collections.IEnumerable var4_box;
				private System.Collections.IEnumerable var5_box;
				private Altova.Mapforce.IMFNode var6_create_element_qname;
				private Altova.Mapforce.IMFNode var7_create_element_qname;
				private Altova.Mapforce.IMFNode var8_create_attribute_qname;
				private System.Collections.IEnumerable var9_endMd;
				private Altova.Mapforce.IMFNode var10_create_attribute_qname;
				private System.Collections.IEnumerable var11_commonData;
				private Altova.Mapforce.IMFNode var12_create_attribute_qname;
				private System.Collections.IEnumerable var13_startMd;
				private System.Collections.IEnumerable var14_uid;
				private System.Collections.IEnumerable var15_geologyInterval;
				private Altova.Mapforce.IMFNode var16_create_element_qname;
				private Altova.Mapforce.IMFNode var17_create_element_qname;
				private System.Collections.IEnumerable var18_box;
				private System.Collections.IEnumerable var19_box;
				private System.Collections.IEnumerable var20_box;
				private System.Collections.IEnumerable var21_box;
				private System.Collections.IEnumerable var22_box;
				private System.Collections.IEnumerable var23_box;
				private System.Collections.IEnumerable var24_box;
				private System.Collections.IEnumerable var25_map;
				private System.Collections.IEnumerable var26_if_exists;
				private System.Collections.IEnumerable var27_if_exists;
				private Altova.Mapforce.IMFNode var28_create_element_qname;
				private Altova.Mapforce.IMFNode var29_create_element_qname;
				private System.Collections.IEnumerable var30_box;
				private System.Collections.IEnumerable var31_box;
				private System.Collections.IEnumerable var32_box;
				private System.Collections.IEnumerable var33_join;
				private System.Collections.IEnumerable var34_join;
				private System.Collections.IEnumerable var35_box;
				private IEnumerator var36_map;
				private IEnumerator var37_commonData;
				private IEnumerator var38_extensionNameValue;
				private IEnumerator var39_geologyInterval;
				private IEnumerator var40_show;
				private System.Collections.IEnumerable var41_box;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("eml", "http://www.energistics.org/energyml/data/commonv2");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateNamespace("gco", "http://www.isotc211.org/2005/gco");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateNamespace("gmd", "http://www.isotc211.org/2005/gmd");
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateNamespace("gsr", "http://www.isotc211.org/2005/gsr");
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateNamespace("gts", "http://www.isotc211.org/2005/gts");
							pos++;
							return true;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateNamespace("gml", "http://www.opengis.net/gml/3.2");
							pos++;
							return true;
						case 7:
							state = 8;
							current = Altova.Functions.Core.CreateNamespace("xlink", "http://www.w3.org/1999/xlink");
							pos++;
							return true;
						case 8:
							state = 9;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.energistics.org/energyml/data/witsmlv2 file:///D:/Repos/witsmlvalidation/witsml/energyml/2.0/data/witsml/v2.0/xsd_schemas/WellboreGeology.xsd"));
							pos++;
							return true;
						case 9:
							state = 10;
							var2_first_items = (closure.var1_first_items).GetEnumerator();
							goto case 10;
						case 10:
							state = 12;
							if (!var2_first_items.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("schemaVersion", ""), Altova.Functions.Core.Box("2.0"));
							pos++;
							return true;
						case 11:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var2_first_items); var2_first_items = null;
							var3_first_items = (closure.var1_first_items).GetEnumerator();
							goto case 14;
						case 12:
							state = 10;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uuid", ""), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 14:
							state = 16;
							if (!var3_first_items.MoveNext()) { state = 15; goto case 15; }
							var4_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							var5_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box("1411_input"));
							var6_create_element_qname = (Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Originator", "http://www.energistics.org/energyml/data/commonv2"), var5_box));
							var7_create_element_qname = (Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ContentType", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("obj_wellbore")));
							var8_create_attribute_qname = (Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("datum", ""), Altova.Functions.Core.Box("unknown")));
							var9_endMd = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("endMd", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_first_items.Current)));
							var10_create_attribute_qname = (Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uuid", ""), var4_box));
							var11_commonData = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("commonData", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_first_items.Current)));
							var12_create_attribute_qname = (Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("schemaVersion", ""), Altova.Functions.Core.Box("2.0")));
							var13_startMd = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("startMd", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_first_items.Current)));
							var14_uid = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), (Altova.Mapforce.IMFNode)(var3_first_items.Current)));
							var15_geologyInterval = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("geologyInterval", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_first_items.Current)));
							var16_create_element_qname = (Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Uuid", "http://www.energistics.org/energyml/data/commonv2"), var4_box));
							var17_create_element_qname = (Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Format", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Mapforce")));
							var18_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GrowingStatus", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("active"))));
							var19_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box(var10_create_attribute_qname));
							var20_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box(var8_create_attribute_qname));
							var21_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box(var6_create_element_qname));
							var22_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box(var17_create_element_qname));
							var23_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box(var12_create_attribute_qname));
							var24_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box(Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("authority", ""), var5_box)));
							var25_map = new Altova.Functions.Core.SequenceCache((new seq3_map((Altova.Mapforce.IMFNode)(var3_first_items.Current))));
							var26_if_exists = new Altova.Functions.Core.SequenceCache((new seq4_if_exists(var9_endMd)));
							var27_if_exists = new Altova.Functions.Core.SequenceCache((new seq5_if_exists(var13_startMd)));
							var28_create_element_qname = (Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_first_items.Current)))))));
							var29_create_element_qname = (Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nameWellbore", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var3_first_items.Current)))))));
							var30_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box(var28_create_element_qname));
							var31_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Aliases", "http://www.energistics.org/energyml/data/commonv2"), (new seq6_join(var24_box, var14_uid)))));
							var32_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq7_seq_(var7_create_element_qname, var16_create_element_qname, var29_create_element_qname)))));
							var33_join = new Altova.Functions.Core.SequenceCache((new seq8_join(var11_commonData)));
							var34_join = new Altova.Functions.Core.SequenceCache((new seq9_join(var33_join, var21_box, var22_box, var30_box)));
							var35_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), var34_join)));
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var31_box);
							pos++;
							return true;
						case 15:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
							return false;
						case 16:
							state = 17;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var35_box);
							pos++;
							return true;
						case 17:
							state = 18;
							var36_map = (var25_map).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var36_map.MoveNext()) { state = 19; goto case 19; }
							current = var36_map.Current;
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var36_map); var36_map = null;
							var37_commonData = (var11_commonData).GetEnumerator();
							goto case 21;
						case 21:
							state = 23;
							if (!var37_commonData.MoveNext()) { state = 22; goto case 22; }
							var38_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var37_commonData.Current))).GetEnumerator();
							goto case 23;
						case 22:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var37_commonData); var37_commonData = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq11_join(var9_endMd, var13_startMd, var20_box, var27_if_exists, var26_if_exists)));
							pos++;
							return true;
						case 23:
							state = 23;
							if (!var38_extensionNameValue.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ExtensionNameValue", "http://www.energistics.org/energyml/data/commonv2"), (new seq10_join((Altova.Mapforce.IMFNode)(var38_extensionNameValue.Current))));
							pos++;
							return true;
						case 24:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var38_extensionNameValue); var38_extensionNameValue = null;
							goto case 21;
						case 26:
							state = 27;
							var39_geologyInterval = (var15_geologyInterval).GetEnumerator();
							goto case 27;
						case 27:
							state = 29;
							if (!var39_geologyInterval.MoveNext()) { state = 28; goto case 28; }
							var40_show = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("show", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var39_geologyInterval.Current))).GetEnumerator();
							goto case 29;
						case 28:
							state = 32;
							Altova.Mapforce.MFEnumerator.Dispose(var39_geologyInterval); var39_geologyInterval = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("InterpretedGeologyIntervalSet", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq23_join(var32_box, var24_box, var19_box, var18_box, var15_geologyInterval, var23_box, var20_box, var8_create_attribute_qname, var28_create_element_qname, var17_create_element_qname, var6_create_element_qname)));
							pos++;
							return true;
						case 29:
							state = 29;
							if (!var40_show.MoveNext()) { state = 30; goto case 30; }
							var41_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq16_seq_((Altova.Mapforce.IMFNode)(var39_geologyInterval.Current), var8_create_attribute_qname)))));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ShowIntervalSet", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq19_join((Altova.Mapforce.IMFNode)(var39_geologyInterval.Current), (Altova.Mapforce.IMFNode)(var40_show.Current), var32_box, var33_join, var14_uid, var19_box, var21_box, var18_box, var23_box, var25_map, var10_create_attribute_qname, var12_create_attribute_qname, var17_create_element_qname, var22_box, var30_box, var31_box, var34_join, var41_box)));
							pos++;
							return true;
						case 30:
							state = 27;
							Altova.Mapforce.MFEnumerator.Dispose(var40_show); var40_show = null;
							goto case 27;
						case 32:
							state = 33;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq43_join((Altova.Mapforce.IMFNode)(var3_first_items.Current), var7_create_element_qname, var16_create_element_qname, var29_create_element_qname)));
							pos++;
							return true;
						case 33:
							state = 14;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CuttingsIntervalSet", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq44_join(var32_box, var33_join, var19_box, var21_box, var18_box, var15_geologyInterval, var23_box, var20_box, var27_if_exists, var26_if_exists, var8_create_attribute_qname, var17_create_element_qname, var6_create_element_qname, var22_box, var30_box, var31_box, var35_box)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_first_items); var2_first_items = null;
					Altova.Mapforce.MFEnumerator.Dispose(var36_map); var36_map = null;
					Altova.Mapforce.MFEnumerator.Dispose(var38_extensionNameValue); var38_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var37_commonData); var37_commonData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var40_show); var40_show = null;
					Altova.Mapforce.MFEnumerator.Dispose(var39_geologyInterval); var39_geologyInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
				}
			}
		}
		class seq3_map : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq3_map(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_map closure;
				private IEnumerator var2_customData;
				public Enumerator(seq3_map closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_customData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_customData.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:CustomData", "http://www.energistics.org/energyml/data/commonv2"), tbf.tbf1_CustomData.Eval((Altova.Mapforce.IMFNode)(var2_customData.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_customData); var2_customData = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_customData); var2_customData = null;
				}
			}
		}
		class seq4_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_endMd;

			public seq4_if_exists(
				System.Collections.IEnumerable var1_endMd
			)
			{
				this.var1_endMd = var1_endMd;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_if_exists closure;
				private IEnumerator var2_endMd;
				public Enumerator(seq4_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_endMd))) { state = 2; goto case 2;  }
							var2_endMd = (closure.var1_endMd).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DecimalToDouble(0m);
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var2_endMd.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_endMd.Current)));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_endMd); var2_endMd = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_endMd); var2_endMd = null;
				}
			}
		}
		class seq5_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_startMd;

			public seq5_if_exists(
				System.Collections.IEnumerable var1_startMd
			)
			{
				this.var1_startMd = var1_startMd;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_if_exists closure;
				private IEnumerator var2_startMd;
				public Enumerator(seq5_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_startMd))) { state = 2; goto case 2;  }
							var2_startMd = (closure.var1_startMd).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DecimalToDouble(0m);
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var2_startMd.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_startMd.Current)));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_startMd); var2_startMd = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_startMd); var2_startMd = null;
				}
			}
		}
		class seq6_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_box;
			private readonly System.Collections.IEnumerable var2_uid;

			public seq6_join(
				System.Collections.IEnumerable var1_box,
				System.Collections.IEnumerable var2_uid
			)
			{
				this.var1_box = var1_box;
				this.var2_uid = var2_uid;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_join closure;
				private IEnumerator var3_uid;
				public Enumerator(seq6_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var1_box);
							pos++;
							return true;
						case 2:
							state = 3;
							var3_uid = (closure.var2_uid).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var3_uid.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Identifier", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_uid.Current))));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_uid); var3_uid = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_uid); var3_uid = null;
				}
			}
		}
		class seq7_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var3_create_element_qname;

			public seq7_seq_(
				Altova.Mapforce.IMFNode var1_create_element_qname,
				Altova.Mapforce.IMFNode var2_create_element_qname,
				Altova.Mapforce.IMFNode var3_create_element_qname
			)
			{
				this.var1_create_element_qname = var1_create_element_qname;
				this.var2_create_element_qname = var2_create_element_qname;
				this.var3_create_element_qname = var3_create_element_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_seq_ closure;
				public Enumerator(seq7_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = closure.var1_create_element_qname;
							pos++;
							return true;
						case 2:
							state = 3;
							current = closure.var3_create_element_qname;
							pos++;
							return true;
						case 3:
							state = 0;
							current = closure.var2_create_element_qname;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq8_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_commonData;

			public seq8_join(
				System.Collections.IEnumerable var1_commonData
			)
			{
				this.var1_commonData = var1_commonData;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq8_join closure;
				private IEnumerator var2_commonData;
				private IEnumerator var3_dTimLastChange;
				public Enumerator(seq8_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_commonData = (closure.var1_commonData).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_commonData.MoveNext()) { state = 3; goto case 3; }
							var3_dTimLastChange = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTimLastChange", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_commonData.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_commonData); var2_commonData = null;
							return false;
						case 4:
							state = 4;
							if (!var3_dTimLastChange.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_dTimLastChange.Current))))));
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_dTimLastChange); var3_dTimLastChange = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_dTimLastChange); var3_dTimLastChange = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_commonData); var2_commonData = null;
				}
			}
		}
		class seq9_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_join;
			private readonly System.Collections.IEnumerable var2_box;
			private readonly System.Collections.IEnumerable var3_box;
			private readonly System.Collections.IEnumerable var4_box;

			public seq9_join(
				System.Collections.IEnumerable var1_join,
				System.Collections.IEnumerable var2_box,
				System.Collections.IEnumerable var3_box,
				System.Collections.IEnumerable var4_box
			)
			{
				this.var1_join = var1_join;
				this.var2_box = var2_box;
				this.var3_box = var3_box;
				this.var4_box = var4_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq9_join closure;
				private IEnumerator var5_join;
				public Enumerator(seq9_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var4_box);
							pos++;
							return true;
						case 2:
							state = 3;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var2_box);
							pos++;
							return true;
						case 3:
							state = 4;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var3_box);
							pos++;
							return true;
						case 4:
							state = 5;
							var5_join = (closure.var1_join).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var5_join.MoveNext()) { state = 6; goto case 6; }
							current = var5_join.Current;
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_join); var5_join = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_join); var5_join = null;
				}
			}
		}
		class seq10_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq10_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq10_join closure;
				private IEnumerator var2_measureClass;
				private IEnumerator var3_dTim;
				private IEnumerator var4_index;
				private IEnumerator var5_description;
				public Enumerator(seq10_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Name", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Value", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_measureClass = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var2_measureClass.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_measureClass.Current))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_measureClass); var2_measureClass = null;
							var3_dTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var3_dTim.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:DTim", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_dTim.Current))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var3_dTim); var3_dTim = null;
							var4_index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_index.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Index", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_index.Current))))))))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_index); var4_index = null;
							var5_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_description.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_description.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_description); var5_description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_measureClass); var2_measureClass = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_dTim); var3_dTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_index); var4_index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_description); var5_description = null;
				}
			}
		}
		class seq11_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_endMd;
			private readonly System.Collections.IEnumerable var2_startMd;
			private readonly System.Collections.IEnumerable var3_box;
			private readonly System.Collections.IEnumerable var4_if_exists;
			private readonly System.Collections.IEnumerable var5_if_exists;

			public seq11_join(
				System.Collections.IEnumerable var1_endMd,
				System.Collections.IEnumerable var2_startMd,
				System.Collections.IEnumerable var3_box,
				System.Collections.IEnumerable var4_if_exists,
				System.Collections.IEnumerable var5_if_exists
			)
			{
				this.var1_endMd = var1_endMd;
				this.var2_startMd = var2_startMd;
				this.var3_box = var3_box;
				this.var4_if_exists = var4_if_exists;
				this.var5_if_exists = var5_if_exists;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq11_join closure;
				private IEnumerator var6_if_exists;
				private IEnumerator var7_if_exists;
				public Enumerator(seq11_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var3_box);
							pos++;
							return true;
						case 2:
							state = 3;
							var6_if_exists = (closure.var4_if_exists).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var6_if_exists.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdTop", "http://www.energistics.org/energyml/data/commonv2"), (new seq12_join((double)(var6_if_exists.Current), closure.var2_startMd)));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var6_if_exists); var6_if_exists = null;
							var7_if_exists = (closure.var5_if_exists).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var7_if_exists.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdBase", "http://www.energistics.org/energyml/data/commonv2"), (new seq14_join((double)(var7_if_exists.Current), closure.var1_endMd)));
							pos++;
							return true;
						case 7:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var7_if_exists); var7_if_exists = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var6_if_exists); var6_if_exists = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_if_exists); var7_if_exists = null;
				}
			}
		}
		class seq12_join : IEnumerable
		{
			private readonly double var1_cur;
			private readonly System.Collections.IEnumerable var2_startMd;

			public seq12_join(
				double var1_cur,
				System.Collections.IEnumerable var2_startMd
			)
			{
				this.var1_cur = var1_cur;
				this.var2_startMd = var2_startMd;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq12_join closure;
				private IEnumerator var3_if_exists;
				public Enumerator(seq12_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_if_exists = ((new seq13_if_exists(closure.var2_startMd))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_if_exists.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box((string)(var3_if_exists.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_if_exists); var3_if_exists = null;
							current = Altova.CoreTypes.DoubleToString(closure.var1_cur);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_if_exists); var3_if_exists = null;
				}
			}
		}
		class seq13_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_startMd;

			public seq13_if_exists(
				System.Collections.IEnumerable var1_startMd
			)
			{
				this.var1_startMd = var1_startMd;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq13_if_exists closure;
				private IEnumerator var2_startMd;
				public Enumerator(seq13_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_startMd))) { state = 2; goto case 2;  }
							var2_startMd = (closure.var1_startMd).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = "ft";
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var2_startMd.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)(var2_startMd.Current))));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_startMd); var2_startMd = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_startMd); var2_startMd = null;
				}
			}
		}
		class seq14_join : IEnumerable
		{
			private readonly double var1_cur;
			private readonly System.Collections.IEnumerable var2_endMd;

			public seq14_join(
				double var1_cur,
				System.Collections.IEnumerable var2_endMd
			)
			{
				this.var1_cur = var1_cur;
				this.var2_endMd = var2_endMd;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq14_join closure;
				private IEnumerator var3_if_exists;
				public Enumerator(seq14_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_if_exists = ((new seq15_if_exists(closure.var2_endMd))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_if_exists.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box((string)(var3_if_exists.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_if_exists); var3_if_exists = null;
							current = Altova.CoreTypes.DoubleToString(closure.var1_cur);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_if_exists); var3_if_exists = null;
				}
			}
		}
		class seq15_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_endMd;

			public seq15_if_exists(
				System.Collections.IEnumerable var1_endMd
			)
			{
				this.var1_endMd = var1_endMd;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq15_if_exists closure;
				private IEnumerator var2_endMd;
				public Enumerator(seq15_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_endMd))) { state = 2; goto case 2;  }
							var2_endMd = (closure.var1_endMd).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = "ft";
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var2_endMd.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)(var2_endMd.Current))));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_endMd); var2_endMd = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_endMd); var2_endMd = null;
				}
			}
		}
		class seq16_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly Altova.Mapforce.IMFNode var2_create_attribute_qname;

			public seq16_seq_(
				Altova.Mapforce.IMFNode var1_cur,
				Altova.Mapforce.IMFNode var2_create_attribute_qname
			)
			{
				this.var1_cur = var1_cur;
				this.var2_create_attribute_qname = var2_create_attribute_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq16_seq_ closure;
				public Enumerator(seq16_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = closure.var2_create_attribute_qname;
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdTop", "http://www.energistics.org/energyml/data/commonv2"), (new seq17_join(closure.var1_cur)));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdBase", "http://www.energistics.org/energyml/data/commonv2"), (new seq18_join(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq17_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq17_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq17_join closure;
				private Altova.Mapforce.IMFNode var2_mdTop;
				public Enumerator(seq17_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_mdTop = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdTop", "http://www.witsml.org/schemas/1series"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_mdTop)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_mdTop)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq18_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq18_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq18_join closure;
				private Altova.Mapforce.IMFNode var2_mdBottom;
				public Enumerator(seq18_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_mdBottom = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdBottom", "http://www.witsml.org/schemas/1series"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_mdBottom)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_mdBottom)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq19_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly Altova.Mapforce.IMFNode var2_cur;
			private readonly System.Collections.IEnumerable var3_box;
			private readonly System.Collections.IEnumerable var4_join;
			private readonly System.Collections.IEnumerable var5_uid;
			private readonly System.Collections.IEnumerable var6_box;
			private readonly System.Collections.IEnumerable var7_box;
			private readonly System.Collections.IEnumerable var8_box;
			private readonly System.Collections.IEnumerable var9_box;
			private readonly System.Collections.IEnumerable var10_map;
			private readonly Altova.Mapforce.IMFNode var11_create_attribute_qname;
			private readonly Altova.Mapforce.IMFNode var12_create_attribute_qname;
			private readonly Altova.Mapforce.IMFNode var13_create_element_qname;
			private readonly System.Collections.IEnumerable var14_box;
			private readonly System.Collections.IEnumerable var15_box;
			private readonly System.Collections.IEnumerable var16_box;
			private readonly System.Collections.IEnumerable var17_join;
			private readonly System.Collections.IEnumerable var18_box;

			public seq19_join(
				Altova.Mapforce.IMFNode var1_cur,
				Altova.Mapforce.IMFNode var2_cur,
				System.Collections.IEnumerable var3_box,
				System.Collections.IEnumerable var4_join,
				System.Collections.IEnumerable var5_uid,
				System.Collections.IEnumerable var6_box,
				System.Collections.IEnumerable var7_box,
				System.Collections.IEnumerable var8_box,
				System.Collections.IEnumerable var9_box,
				System.Collections.IEnumerable var10_map,
				Altova.Mapforce.IMFNode var11_create_attribute_qname,
				Altova.Mapforce.IMFNode var12_create_attribute_qname,
				Altova.Mapforce.IMFNode var13_create_element_qname,
				System.Collections.IEnumerable var14_box,
				System.Collections.IEnumerable var15_box,
				System.Collections.IEnumerable var16_box,
				System.Collections.IEnumerable var17_join,
				System.Collections.IEnumerable var18_box
			)
			{
				this.var1_cur = var1_cur;
				this.var2_cur = var2_cur;
				this.var3_box = var3_box;
				this.var4_join = var4_join;
				this.var5_uid = var5_uid;
				this.var6_box = var6_box;
				this.var7_box = var7_box;
				this.var8_box = var8_box;
				this.var9_box = var9_box;
				this.var10_map = var10_map;
				this.var11_create_attribute_qname = var11_create_attribute_qname;
				this.var12_create_attribute_qname = var12_create_attribute_qname;
				this.var13_create_element_qname = var13_create_element_qname;
				this.var14_box = var14_box;
				this.var15_box = var15_box;
				this.var16_box = var16_box;
				this.var17_join = var17_join;
				this.var18_box = var18_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq19_join closure;
				private IEnumerator var19_map;
				private IEnumerator var20_extensionNameValue;
				public Enumerator(seq19_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = closure.var12_create_attribute_qname;
							pos++;
							return true;
						case 2:
							state = 3;
							current = closure.var11_create_attribute_qname;
							pos++;
							return true;
						case 3:
							state = 4;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var16_box);
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), (new seq20_join(closure.var2_cur, closure.var4_join, closure.var7_box, closure.var14_box, closure.var15_box)));
							pos++;
							return true;
						case 5:
							state = 6;
							var19_map = (closure.var10_map).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var19_map.MoveNext()) { state = 7; goto case 7; }
							current = var19_map.Current;
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var19_map); var19_map = null;
							var20_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var20_extensionNameValue.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ExtensionNameValue", "http://www.energistics.org/energyml/data/commonv2"), (new seq10_join((Altova.Mapforce.IMFNode)(var20_extensionNameValue.Current))));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var20_extensionNameValue); var20_extensionNameValue = null;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var18_box);
							pos++;
							return true;
						case 12:
							state = 13;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var8_box);
							pos++;
							return true;
						case 13:
							state = 14;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EvaluatedIntervalShow", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq21_join(closure.var2_cur, closure.var5_uid, closure.var6_box, closure.var9_box, closure.var13_create_element_qname, closure.var16_box, closure.var17_join, closure.var18_box)));
							pos++;
							return true;
						case 14:
							state = 0;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var3_box);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var19_map); var19_map = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_extensionNameValue); var20_extensionNameValue = null;
				}
			}
		}
		class seq20_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_join;
			private readonly System.Collections.IEnumerable var3_box;
			private readonly System.Collections.IEnumerable var4_box;
			private readonly System.Collections.IEnumerable var5_box;

			public seq20_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_join,
				System.Collections.IEnumerable var3_box,
				System.Collections.IEnumerable var4_box,
				System.Collections.IEnumerable var5_box
			)
			{
				this.var1_cur = var1_cur;
				this.var2_join = var2_join;
				this.var3_box = var3_box;
				this.var4_box = var4_box;
				this.var5_box = var5_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq20_join closure;
				private IEnumerator var6_join;
				private IEnumerator var7_showDesc;
				public Enumerator(seq20_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var5_box);
							pos++;
							return true;
						case 2:
							state = 3;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var3_box);
							pos++;
							return true;
						case 3:
							state = 4;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var4_box);
							pos++;
							return true;
						case 4:
							state = 5;
							var6_join = (closure.var2_join).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var6_join.MoveNext()) { state = 6; goto case 6; }
							current = var6_join.Current;
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var6_join); var6_join = null;
							var7_showDesc = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("showDesc", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var7_showDesc.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_showDesc.Current))));
							pos++;
							return true;
						case 9:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var7_showDesc); var7_showDesc = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var6_join); var6_join = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_showDesc); var7_showDesc = null;
				}
			}
		}
		class seq21_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_uid;
			private readonly System.Collections.IEnumerable var3_box;
			private readonly System.Collections.IEnumerable var4_box;
			private readonly Altova.Mapforce.IMFNode var5_create_element_qname;
			private readonly System.Collections.IEnumerable var6_box;
			private readonly System.Collections.IEnumerable var7_join;
			private readonly System.Collections.IEnumerable var8_box;

			public seq21_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_uid,
				System.Collections.IEnumerable var3_box,
				System.Collections.IEnumerable var4_box,
				Altova.Mapforce.IMFNode var5_create_element_qname,
				System.Collections.IEnumerable var6_box,
				System.Collections.IEnumerable var7_join,
				System.Collections.IEnumerable var8_box
			)
			{
				this.var1_cur = var1_cur;
				this.var2_uid = var2_uid;
				this.var3_box = var3_box;
				this.var4_box = var4_box;
				this.var5_create_element_qname = var5_create_element_qname;
				this.var6_box = var6_box;
				this.var7_join = var7_join;
				this.var8_box = var8_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq21_join closure;
				private IEnumerator var9_uid;
				private IEnumerator var10_showRat;
				public Enumerator(seq21_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var4_box);
							pos++;
							return true;
						case 2:
							state = 3;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var3_box);
							pos++;
							return true;
						case 3:
							state = 4;
							var9_uid = (closure.var2_uid).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var9_uid.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var9_uid.Current))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var9_uid); var9_uid = null;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var6_box);
							pos++;
							return true;
						case 7:
							state = 8;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), (new seq22_seq_(closure.var5_create_element_qname)));
							pos++;
							return true;
						case 8:
							state = 9;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var8_box);
							pos++;
							return true;
						case 9:
							state = 10;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var7_join);
							pos++;
							return true;
						case 10:
							state = 11;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ShowFluid", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("oil"));
							pos++;
							return true;
						case 11:
							state = 12;
							var10_showRat = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("showRat", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var10_showRat.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ShowRating", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var10_showRat.Current))));
							pos++;
							return true;
						case 13:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var10_showRat); var10_showRat = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var9_uid); var9_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_showRat); var10_showRat = null;
				}
			}
		}
		class seq22_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_create_element_qname;

			public seq22_seq_(
				Altova.Mapforce.IMFNode var1_create_element_qname
			)
			{
				this.var1_create_element_qname = var1_create_element_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq22_seq_ closure;
				public Enumerator(seq22_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("MudLog-"));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Originator", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(".xml"));
							pos++;
							return true;
						case 3:
							state = 0;
							current = closure.var1_create_element_qname;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq23_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_box;
			private readonly System.Collections.IEnumerable var2_box;
			private readonly System.Collections.IEnumerable var3_box;
			private readonly System.Collections.IEnumerable var4_box;
			private readonly System.Collections.IEnumerable var5_geologyInterval;
			private readonly System.Collections.IEnumerable var6_box;
			private readonly System.Collections.IEnumerable var7_box;
			private readonly Altova.Mapforce.IMFNode var8_create_attribute_qname;
			private readonly Altova.Mapforce.IMFNode var9_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var10_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var11_create_element_qname;

			public seq23_join(
				System.Collections.IEnumerable var1_box,
				System.Collections.IEnumerable var2_box,
				System.Collections.IEnumerable var3_box,
				System.Collections.IEnumerable var4_box,
				System.Collections.IEnumerable var5_geologyInterval,
				System.Collections.IEnumerable var6_box,
				System.Collections.IEnumerable var7_box,
				Altova.Mapforce.IMFNode var8_create_attribute_qname,
				Altova.Mapforce.IMFNode var9_create_element_qname,
				Altova.Mapforce.IMFNode var10_create_element_qname,
				Altova.Mapforce.IMFNode var11_create_element_qname
			)
			{
				this.var1_box = var1_box;
				this.var2_box = var2_box;
				this.var3_box = var3_box;
				this.var4_box = var4_box;
				this.var5_geologyInterval = var5_geologyInterval;
				this.var6_box = var6_box;
				this.var7_box = var7_box;
				this.var8_create_attribute_qname = var8_create_attribute_qname;
				this.var9_create_element_qname = var9_create_element_qname;
				this.var10_create_element_qname = var10_create_element_qname;
				this.var11_create_element_qname = var11_create_element_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq23_join closure;
				private IEnumerator var12_geologyInterval;
				private IEnumerator var13_extensionNameValue;
				private IEnumerator var14_filter;
				private System.Collections.IEnumerable var15_lithology;
				private Altova.Mapforce.IMFNode var16_create_element_qname;
				private System.Collections.IEnumerable var17_seq_;
				public Enumerator(seq23_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var6_box);
							pos++;
							return true;
						case 2:
							state = 3;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var3_box);
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Aliases", "http://www.energistics.org/energyml/data/commonv2"), (new seq24_join(closure.var2_box, closure.var5_geologyInterval)));
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), (new seq25_seq_(closure.var9_create_element_qname, closure.var10_create_element_qname, closure.var11_create_element_qname)));
							pos++;
							return true;
						case 5:
							state = 6;
							var12_geologyInterval = (closure.var5_geologyInterval).GetEnumerator();
							goto case 6;
						case 6:
							state = 8;
							if (!var12_geologyInterval.MoveNext()) { state = 7; goto case 7; }
							var13_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var12_geologyInterval.Current))).GetEnumerator();
							goto case 8;
						case 7:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var12_geologyInterval); var12_geologyInterval = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq26_join(closure.var5_geologyInterval, closure.var7_box)));
							pos++;
							return true;
						case 8:
							state = 8;
							if (!var13_extensionNameValue.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ExtensionNameValue", "http://www.energistics.org/energyml/data/commonv2"), (new seq10_join((Altova.Mapforce.IMFNode)(var13_extensionNameValue.Current))));
							pos++;
							return true;
						case 9:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var13_extensionNameValue); var13_extensionNameValue = null;
							goto case 6;
						case 11:
							state = 12;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var4_box);
							pos++;
							return true;
						case 12:
							state = 13;
							var14_filter = (closure.var5_geologyInterval).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var14_filter.MoveNext()) { state = 14; goto case 14; }
							if (!(("interpreted") == (Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("typeLithology", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var14_filter.Current))))))) { state = 13; goto case 13;  }
							var15_lithology = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("lithology", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var14_filter.Current)));
							var16_create_element_qname = (Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("MudLog-")));
							var17_seq_ = new Altova.Functions.Core.SequenceCache((new seq29_seq_(closure.var10_create_element_qname, var16_create_element_qname)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GeologicIntervalInterpreted", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq30_join((Altova.Mapforce.IMFNode)(var14_filter.Current), closure.var2_box, closure.var3_box, closure.var6_box, closure.var7_box, closure.var8_create_attribute_qname, closure.var10_create_element_qname, closure.var11_create_element_qname, var15_lithology, var17_seq_, var16_create_element_qname)));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var14_filter); var14_filter = null;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var1_box);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var13_extensionNameValue); var13_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_geologyInterval); var12_geologyInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_filter); var14_filter = null;
				}
			}
		}
		class seq24_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_box;
			private readonly System.Collections.IEnumerable var2_geologyInterval;

			public seq24_join(
				System.Collections.IEnumerable var1_box,
				System.Collections.IEnumerable var2_geologyInterval
			)
			{
				this.var1_box = var1_box;
				this.var2_geologyInterval = var2_geologyInterval;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq24_join closure;
				private IEnumerator var3_geologyInterval;
				private IEnumerator var4_uid;
				public Enumerator(seq24_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var1_box);
							pos++;
							return true;
						case 2:
							state = 3;
							var3_geologyInterval = (closure.var2_geologyInterval).GetEnumerator();
							goto case 3;
						case 3:
							state = 5;
							if (!var3_geologyInterval.MoveNext()) { state = 4; goto case 4; }
							var4_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), (Altova.Mapforce.IMFNode)(var3_geologyInterval.Current))).GetEnumerator();
							goto case 5;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_geologyInterval); var3_geologyInterval = null;
							return false;
						case 5:
							state = 5;
							if (!var4_uid.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Identifier", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_uid.Current))));
							pos++;
							return true;
						case 6:
							state = 3;
							Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
							goto case 3;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_uid); var4_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_geologyInterval); var3_geologyInterval = null;
				}
			}
		}
		class seq25_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var3_create_element_qname;

			public seq25_seq_(
				Altova.Mapforce.IMFNode var1_create_element_qname,
				Altova.Mapforce.IMFNode var2_create_element_qname,
				Altova.Mapforce.IMFNode var3_create_element_qname
			)
			{
				this.var1_create_element_qname = var1_create_element_qname;
				this.var2_create_element_qname = var2_create_element_qname;
				this.var3_create_element_qname = var3_create_element_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq25_seq_ closure;
				public Enumerator(seq25_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = closure.var1_create_element_qname;
							pos++;
							return true;
						case 2:
							state = 3;
							current = closure.var3_create_element_qname;
							pos++;
							return true;
						case 3:
							state = 0;
							current = closure.var2_create_element_qname;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq26_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_geologyInterval;
			private readonly System.Collections.IEnumerable var2_box;

			public seq26_join(
				System.Collections.IEnumerable var1_geologyInterval,
				System.Collections.IEnumerable var2_box
			)
			{
				this.var1_geologyInterval = var1_geologyInterval;
				this.var2_box = var2_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq26_join closure;
				private IEnumerator var3_geologyInterval;
				private IEnumerator var4_geologyInterval;
				public Enumerator(seq26_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var2_box);
							pos++;
							return true;
						case 2:
							state = 3;
							var3_geologyInterval = (closure.var1_geologyInterval).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var3_geologyInterval.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdTop", "http://www.energistics.org/energyml/data/commonv2"), (new seq27_join((Altova.Mapforce.IMFNode)(var3_geologyInterval.Current))));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var3_geologyInterval); var3_geologyInterval = null;
							var4_geologyInterval = (closure.var1_geologyInterval).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var4_geologyInterval.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdBase", "http://www.energistics.org/energyml/data/commonv2"), (new seq28_join((Altova.Mapforce.IMFNode)(var4_geologyInterval.Current))));
							pos++;
							return true;
						case 7:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_geologyInterval); var4_geologyInterval = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_geologyInterval); var3_geologyInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_geologyInterval); var4_geologyInterval = null;
				}
			}
		}
		class seq27_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq27_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq27_join closure;
				private Altova.Mapforce.IMFNode var2_mdTop;
				public Enumerator(seq27_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_mdTop = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdTop", "http://www.witsml.org/schemas/1series"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_mdTop)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_mdTop)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq28_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq28_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq28_join closure;
				private Altova.Mapforce.IMFNode var2_mdBottom;
				public Enumerator(seq28_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_mdBottom = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdBottom", "http://www.witsml.org/schemas/1series"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_mdBottom)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_mdBottom)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq29_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;

			public seq29_seq_(
				Altova.Mapforce.IMFNode var1_create_element_qname,
				Altova.Mapforce.IMFNode var2_create_element_qname
			)
			{
				this.var1_create_element_qname = var1_create_element_qname;
				this.var2_create_element_qname = var2_create_element_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq29_seq_ closure;
				public Enumerator(seq29_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = closure.var2_create_element_qname;
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Originator", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(".xml"));
							pos++;
							return true;
						case 3:
							state = 0;
							current = closure.var1_create_element_qname;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq30_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_box;
			private readonly System.Collections.IEnumerable var3_box;
			private readonly System.Collections.IEnumerable var4_box;
			private readonly System.Collections.IEnumerable var5_box;
			private readonly Altova.Mapforce.IMFNode var6_create_attribute_qname;
			private readonly Altova.Mapforce.IMFNode var7_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var8_create_element_qname;
			private readonly System.Collections.IEnumerable var9_lithology;
			private readonly System.Collections.IEnumerable var10_seq_;
			private readonly Altova.Mapforce.IMFNode var11_create_element_qname;

			public seq30_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_box,
				System.Collections.IEnumerable var3_box,
				System.Collections.IEnumerable var4_box,
				System.Collections.IEnumerable var5_box,
				Altova.Mapforce.IMFNode var6_create_attribute_qname,
				Altova.Mapforce.IMFNode var7_create_element_qname,
				Altova.Mapforce.IMFNode var8_create_element_qname,
				System.Collections.IEnumerable var9_lithology,
				System.Collections.IEnumerable var10_seq_,
				Altova.Mapforce.IMFNode var11_create_element_qname
			)
			{
				this.var1_cur = var1_cur;
				this.var2_box = var2_box;
				this.var3_box = var3_box;
				this.var4_box = var4_box;
				this.var5_box = var5_box;
				this.var6_create_attribute_qname = var6_create_attribute_qname;
				this.var7_create_element_qname = var7_create_element_qname;
				this.var8_create_element_qname = var8_create_element_qname;
				this.var9_lithology = var9_lithology;
				this.var10_seq_ = var10_seq_;
				this.var11_create_element_qname = var11_create_element_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq30_join closure;
				private IEnumerator var12_lithology;
				private IEnumerator var13_uid;
				private IEnumerator var14_chronostratigraphic;
				private IEnumerator var15_lithostratigraphic;
				private IEnumerator var16_lithology;
				public Enumerator(seq30_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var4_box);
							pos++;
							return true;
						case 2:
							state = 3;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var3_box);
							pos++;
							return true;
						case 3:
							state = 4;
							var12_lithology = (closure.var9_lithology).GetEnumerator();
							goto case 4;
						case 4:
							state = 6;
							if (!var12_lithology.MoveNext()) { state = 5; goto case 5; }
							var13_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), (Altova.Mapforce.IMFNode)(var12_lithology.Current))).GetEnumerator();
							goto case 6;
						case 5:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var12_lithology); var12_lithology = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Aliases", "http://www.energistics.org/energyml/data/commonv2"), (new seq31_join(closure.var1_cur, closure.var2_box)));
							pos++;
							return true;
						case 6:
							state = 6;
							if (!var13_uid.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_uid.Current))));
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var13_uid); var13_uid = null;
							goto case 4;
						case 9:
							state = 10;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), closure.var10_seq_);
							pos++;
							return true;
						case 10:
							state = 11;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq32_seq_(closure.var1_cur, closure.var6_create_attribute_qname)));
							pos++;
							return true;
						case 11:
							state = 12;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var10_seq_);
							pos++;
							return true;
						case 12:
							state = 13;
							var14_chronostratigraphic = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("chronostratigraphic", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var14_chronostratigraphic.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GeochronologicalUnit", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq35_seq_((Altova.Mapforce.IMFNode)(var14_chronostratigraphic.Current))));
							pos++;
							return true;
						case 14:
							state = 16;
							Altova.Mapforce.MFEnumerator.Dispose(var14_chronostratigraphic); var14_chronostratigraphic = null;
							var15_lithostratigraphic = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("lithostratigraphic", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 16;
						case 16:
							state = 16;
							if (!var15_lithostratigraphic.MoveNext()) { state = 17; goto case 17; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("LithostratigraphicUnit", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq36_join((Altova.Mapforce.IMFNode)(var15_lithostratigraphic.Current), closure.var2_box)));
							pos++;
							return true;
						case 17:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var15_lithostratigraphic); var15_lithostratigraphic = null;
							var16_lithology = (closure.var9_lithology).GetEnumerator();
							goto case 19;
						case 19:
							state = 19;
							if (!var16_lithology.MoveNext()) { state = 20; goto case 20; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("InterpretedLithology", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq37_join((Altova.Mapforce.IMFNode)(var16_lithology.Current), closure.var5_box, closure.var7_create_element_qname, closure.var8_create_element_qname, closure.var11_create_element_qname)));
							pos++;
							return true;
						case 20:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var16_lithology); var16_lithology = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var13_uid); var13_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_lithology); var12_lithology = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_chronostratigraphic); var14_chronostratigraphic = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_lithostratigraphic); var15_lithostratigraphic = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_lithology); var16_lithology = null;
				}
			}
		}
		class seq31_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_box;

			public seq31_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_box
			)
			{
				this.var1_cur = var1_cur;
				this.var2_box = var2_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq31_join closure;
				private IEnumerator var3_uid;
				public Enumerator(seq31_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var2_box);
							pos++;
							return true;
						case 2:
							state = 3;
							var3_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var3_uid.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Identifier", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_uid.Current))));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_uid); var3_uid = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_uid); var3_uid = null;
				}
			}
		}
		class seq32_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly Altova.Mapforce.IMFNode var2_create_attribute_qname;

			public seq32_seq_(
				Altova.Mapforce.IMFNode var1_cur,
				Altova.Mapforce.IMFNode var2_create_attribute_qname
			)
			{
				this.var1_cur = var1_cur;
				this.var2_create_attribute_qname = var2_create_attribute_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq32_seq_ closure;
				public Enumerator(seq32_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = closure.var2_create_attribute_qname;
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdTop", "http://www.energistics.org/energyml/data/commonv2"), (new seq33_join(closure.var1_cur)));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdBase", "http://www.energistics.org/energyml/data/commonv2"), (new seq34_join(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq33_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq33_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq33_join closure;
				private Altova.Mapforce.IMFNode var2_mdTop;
				public Enumerator(seq33_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_mdTop = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdTop", "http://www.witsml.org/schemas/1series"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_mdTop)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_mdTop)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq34_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq34_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq34_join closure;
				private Altova.Mapforce.IMFNode var2_mdBottom;
				public Enumerator(seq34_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_mdBottom = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdBottom", "http://www.witsml.org/schemas/1series"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_mdBottom)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_mdBottom)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq35_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq35_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq35_seq_ closure;
				public Enumerator(seq35_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("kind", ""), Altova.Functions.Core.Box("age"));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.NodeToString(closure.var1_cur);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq36_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_box;

			public seq36_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_box
			)
			{
				this.var1_cur = var1_cur;
				this.var2_box = var2_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq36_join closure;
				private IEnumerator var3_kind;
				public Enumerator(seq36_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var2_box);
							pos++;
							return true;
						case 2:
							state = 3;
							var3_kind = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("kind", ""), closure.var1_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var3_kind.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("kind", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_kind.Current))));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_kind); var3_kind = null;
							current = Altova.CoreTypes.NodeToString(closure.var1_cur);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_kind); var3_kind = null;
				}
			}
		}
		class seq37_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_box;
			private readonly Altova.Mapforce.IMFNode var3_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var4_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var5_create_element_qname;

			public seq37_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_box,
				Altova.Mapforce.IMFNode var3_create_element_qname,
				Altova.Mapforce.IMFNode var4_create_element_qname,
				Altova.Mapforce.IMFNode var5_create_element_qname
			)
			{
				this.var1_cur = var1_cur;
				this.var2_box = var2_box;
				this.var3_create_element_qname = var3_create_element_qname;
				this.var4_create_element_qname = var4_create_element_qname;
				this.var5_create_element_qname = var5_create_element_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq37_join closure;
				private IEnumerator var6_uid;
				private IEnumerator var7_codeLith;
				private IEnumerator var8_color;
				private IEnumerator var9_texture;
				private IEnumerator var10_hardness;
				private IEnumerator var11_compaction;
				private IEnumerator var12_sizeGrain;
				private IEnumerator var13_roundness;
				private IEnumerator var14_sorting;
				private IEnumerator var15_sphericity;
				private IEnumerator var16_porosityVisible;
				private IEnumerator var17_porosityFabric;
				private IEnumerator var18_permeability;
				private IEnumerator var19_qualifier;
				public Enumerator(seq37_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var6_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var6_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var6_uid); var6_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Kind", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("andesite"));
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq38_seq_(closure.var3_create_element_qname, closure.var4_create_element_qname, closure.var5_create_element_qname)));
							pos++;
							return true;
						case 6:
							state = 7;
							var7_codeLith = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("codeLith", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var7_codeLith.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CodeLith", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_codeLith.Current))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var7_codeLith); var7_codeLith = null;
							var8_color = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("color", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var8_color.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Color", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_color.Current))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var8_color); var8_color = null;
							var9_texture = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("texture", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var9_texture.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Texture", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var9_texture.Current))));
							pos++;
							return true;
						case 14:
							state = 16;
							Altova.Mapforce.MFEnumerator.Dispose(var9_texture); var9_texture = null;
							var10_hardness = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("hardness", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 16;
						case 16:
							state = 16;
							if (!var10_hardness.MoveNext()) { state = 17; goto case 17; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Hardness", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var10_hardness.Current))));
							pos++;
							return true;
						case 17:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var10_hardness); var10_hardness = null;
							var11_compaction = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("compaction", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 19;
						case 19:
							state = 19;
							if (!var11_compaction.MoveNext()) { state = 20; goto case 20; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Compaction", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var11_compaction.Current))));
							pos++;
							return true;
						case 20:
							state = 22;
							Altova.Mapforce.MFEnumerator.Dispose(var11_compaction); var11_compaction = null;
							var12_sizeGrain = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("sizeGrain", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 22;
						case 22:
							state = 22;
							if (!var12_sizeGrain.MoveNext()) { state = 23; goto case 23; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SizeGrain", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var12_sizeGrain.Current))));
							pos++;
							return true;
						case 23:
							state = 25;
							Altova.Mapforce.MFEnumerator.Dispose(var12_sizeGrain); var12_sizeGrain = null;
							var13_roundness = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("roundness", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 25;
						case 25:
							state = 25;
							if (!var13_roundness.MoveNext()) { state = 26; goto case 26; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Roundness", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_roundness.Current))));
							pos++;
							return true;
						case 26:
							state = 28;
							Altova.Mapforce.MFEnumerator.Dispose(var13_roundness); var13_roundness = null;
							var14_sorting = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("sorting", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 28;
						case 28:
							state = 28;
							if (!var14_sorting.MoveNext()) { state = 29; goto case 29; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Sorting", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var14_sorting.Current))));
							pos++;
							return true;
						case 29:
							state = 31;
							Altova.Mapforce.MFEnumerator.Dispose(var14_sorting); var14_sorting = null;
							var15_sphericity = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("sphericity", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 31;
						case 31:
							state = 31;
							if (!var15_sphericity.MoveNext()) { state = 32; goto case 32; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Sphericity", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var15_sphericity.Current))));
							pos++;
							return true;
						case 32:
							state = 34;
							Altova.Mapforce.MFEnumerator.Dispose(var15_sphericity); var15_sphericity = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MatrixCement", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("calcite"));
							pos++;
							return true;
						case 34:
							state = 35;
							var16_porosityVisible = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("porosityVisible", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 35;
						case 35:
							state = 35;
							if (!var16_porosityVisible.MoveNext()) { state = 36; goto case 36; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("PorosityVisible", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var16_porosityVisible.Current))));
							pos++;
							return true;
						case 36:
							state = 38;
							Altova.Mapforce.MFEnumerator.Dispose(var16_porosityVisible); var16_porosityVisible = null;
							var17_porosityFabric = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("porosityFabric", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 38;
						case 38:
							state = 38;
							if (!var17_porosityFabric.MoveNext()) { state = 39; goto case 39; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("PorosityFabric", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var17_porosityFabric.Current))));
							pos++;
							return true;
						case 39:
							state = 41;
							Altova.Mapforce.MFEnumerator.Dispose(var17_porosityFabric); var17_porosityFabric = null;
							var18_permeability = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("permeability", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 41;
						case 41:
							state = 41;
							if (!var18_permeability.MoveNext()) { state = 42; goto case 42; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Permeability", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var18_permeability.Current))));
							pos++;
							return true;
						case 42:
							state = 44;
							Altova.Mapforce.MFEnumerator.Dispose(var18_permeability); var18_permeability = null;
							var19_qualifier = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("qualifier", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 44;
						case 44:
							state = 44;
							if (!var19_qualifier.MoveNext()) { state = 45; goto case 45; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Qualifier", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq39_join((Altova.Mapforce.IMFNode)(var19_qualifier.Current), closure.var2_box)));
							pos++;
							return true;
						case 45:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var19_qualifier); var19_qualifier = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var6_uid); var6_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_codeLith); var7_codeLith = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_color); var8_color = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_texture); var9_texture = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_hardness); var10_hardness = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_compaction); var11_compaction = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_sizeGrain); var12_sizeGrain = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_roundness); var13_roundness = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_sorting); var14_sorting = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_sphericity); var15_sphericity = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_porosityVisible); var16_porosityVisible = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_porosityFabric); var17_porosityFabric = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_permeability); var18_permeability = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_qualifier); var19_qualifier = null;
				}
			}
		}
		class seq38_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var3_create_element_qname;

			public seq38_seq_(
				Altova.Mapforce.IMFNode var1_create_element_qname,
				Altova.Mapforce.IMFNode var2_create_element_qname,
				Altova.Mapforce.IMFNode var3_create_element_qname
			)
			{
				this.var1_create_element_qname = var1_create_element_qname;
				this.var2_create_element_qname = var2_create_element_qname;
				this.var3_create_element_qname = var3_create_element_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq38_seq_ closure;
				public Enumerator(seq38_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = closure.var3_create_element_qname;
							pos++;
							return true;
						case 2:
							state = 3;
							current = closure.var2_create_element_qname;
							pos++;
							return true;
						case 3:
							state = 0;
							current = closure.var1_create_element_qname;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq39_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_box;

			public seq39_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_box
			)
			{
				this.var1_cur = var1_cur;
				this.var2_box = var2_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq39_join closure;
				private IEnumerator var3_uid;
				private IEnumerator var4_mdTop;
				private IEnumerator var5_abundance;
				private IEnumerator var6_description;
				public Enumerator(seq39_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_uid); var3_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Kind", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("type", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 5:
							state = 6;
							var4_mdTop = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdTop", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var4_mdTop.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq40_join(closure.var1_cur, (Altova.Mapforce.IMFNode)(var4_mdTop.Current), closure.var2_box)));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var4_mdTop); var4_mdTop = null;
							var5_abundance = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("abundance", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var5_abundance.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Abundance", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var5_abundance.Current)));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var5_abundance); var5_abundance = null;
							var6_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var6_description.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_description.Current))));
							pos++;
							return true;
						case 13:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var6_description); var6_description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_uid); var3_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_mdTop); var4_mdTop = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_abundance); var5_abundance = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_description); var6_description = null;
				}
			}
		}
		class seq40_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly Altova.Mapforce.IMFNode var2_cur;
			private readonly System.Collections.IEnumerable var3_box;

			public seq40_join(
				Altova.Mapforce.IMFNode var1_cur,
				Altova.Mapforce.IMFNode var2_cur,
				System.Collections.IEnumerable var3_box
			)
			{
				this.var1_cur = var1_cur;
				this.var2_cur = var2_cur;
				this.var3_box = var3_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq40_join closure;
				private IEnumerator var4_mdBottom;
				public Enumerator(seq40_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var3_box);
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdTop", "http://www.energistics.org/energyml/data/commonv2"), (new seq41_seq_(closure.var2_cur)));
							pos++;
							return true;
						case 3:
							state = 4;
							var4_mdBottom = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdBottom", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var4_mdBottom.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdBase", "http://www.energistics.org/energyml/data/commonv2"), (new seq42_seq_((Altova.Mapforce.IMFNode)(var4_mdBottom.Current))));
							pos++;
							return true;
						case 5:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_mdBottom); var4_mdBottom = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_mdBottom); var4_mdBottom = null;
				}
			}
		}
		class seq41_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq41_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq41_seq_ closure;
				public Enumerator(seq41_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq42_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq42_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq42_seq_ closure;
				public Enumerator(seq42_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq43_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var3_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var4_create_element_qname;

			public seq43_join(
				Altova.Mapforce.IMFNode var1_cur,
				Altova.Mapforce.IMFNode var2_create_element_qname,
				Altova.Mapforce.IMFNode var3_create_element_qname,
				Altova.Mapforce.IMFNode var4_create_element_qname
			)
			{
				this.var1_cur = var1_cur;
				this.var2_create_element_qname = var2_create_element_qname;
				this.var3_create_element_qname = var3_create_element_qname;
				this.var4_create_element_qname = var4_create_element_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq43_join closure;
				private IEnumerator var5_uidWellbore;
				public Enumerator(seq43_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = closure.var2_create_element_qname;
							pos++;
							return true;
						case 2:
							state = 3;
							current = closure.var4_create_element_qname;
							pos++;
							return true;
						case 3:
							state = 4;
							current = closure.var3_create_element_qname;
							pos++;
							return true;
						case 4:
							state = 5;
							var5_uidWellbore = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uidWellbore", ""), closure.var1_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var5_uidWellbore.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:UuidAuthority", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_uidWellbore.Current))));
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_uidWellbore); var5_uidWellbore = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_uidWellbore); var5_uidWellbore = null;
				}
			}
		}
		class seq44_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_box;
			private readonly System.Collections.IEnumerable var2_join;
			private readonly System.Collections.IEnumerable var3_box;
			private readonly System.Collections.IEnumerable var4_box;
			private readonly System.Collections.IEnumerable var5_box;
			private readonly System.Collections.IEnumerable var6_geologyInterval;
			private readonly System.Collections.IEnumerable var7_box;
			private readonly System.Collections.IEnumerable var8_box;
			private readonly System.Collections.IEnumerable var9_if_exists;
			private readonly System.Collections.IEnumerable var10_if_exists;
			private readonly Altova.Mapforce.IMFNode var11_create_attribute_qname;
			private readonly Altova.Mapforce.IMFNode var12_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var13_create_element_qname;
			private readonly System.Collections.IEnumerable var14_box;
			private readonly System.Collections.IEnumerable var15_box;
			private readonly System.Collections.IEnumerable var16_box;
			private readonly System.Collections.IEnumerable var17_box;

			public seq44_join(
				System.Collections.IEnumerable var1_box,
				System.Collections.IEnumerable var2_join,
				System.Collections.IEnumerable var3_box,
				System.Collections.IEnumerable var4_box,
				System.Collections.IEnumerable var5_box,
				System.Collections.IEnumerable var6_geologyInterval,
				System.Collections.IEnumerable var7_box,
				System.Collections.IEnumerable var8_box,
				System.Collections.IEnumerable var9_if_exists,
				System.Collections.IEnumerable var10_if_exists,
				Altova.Mapforce.IMFNode var11_create_attribute_qname,
				Altova.Mapforce.IMFNode var12_create_element_qname,
				Altova.Mapforce.IMFNode var13_create_element_qname,
				System.Collections.IEnumerable var14_box,
				System.Collections.IEnumerable var15_box,
				System.Collections.IEnumerable var16_box,
				System.Collections.IEnumerable var17_box
			)
			{
				this.var1_box = var1_box;
				this.var2_join = var2_join;
				this.var3_box = var3_box;
				this.var4_box = var4_box;
				this.var5_box = var5_box;
				this.var6_geologyInterval = var6_geologyInterval;
				this.var7_box = var7_box;
				this.var8_box = var8_box;
				this.var9_if_exists = var9_if_exists;
				this.var10_if_exists = var10_if_exists;
				this.var11_create_attribute_qname = var11_create_attribute_qname;
				this.var12_create_element_qname = var12_create_element_qname;
				this.var13_create_element_qname = var13_create_element_qname;
				this.var14_box = var14_box;
				this.var15_box = var15_box;
				this.var16_box = var16_box;
				this.var17_box = var17_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq44_join closure;
				private IEnumerator var18_geologyInterval;
				private IEnumerator var19_lithology;
				private IEnumerator var20_extensionNameValue;
				private IEnumerator var21_filter;
				private Altova.Mapforce.IMFNode var22_typeLithology;
				private Altova.Mapforce.IMFNode var23_create_element_qname;
				private System.Collections.IEnumerable var24_seq_;
				public Enumerator(seq44_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var7_box);
							pos++;
							return true;
						case 2:
							state = 3;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var3_box);
							pos++;
							return true;
						case 3:
							state = 4;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var16_box);
							pos++;
							return true;
						case 4:
							state = 5;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var17_box);
							pos++;
							return true;
						case 5:
							state = 6;
							var18_geologyInterval = (closure.var6_geologyInterval).GetEnumerator();
							goto case 6;
						case 6:
							state = 8;
							if (!var18_geologyInterval.MoveNext()) { state = 7; goto case 7; }
							var19_lithology = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("lithology", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var18_geologyInterval.Current))).GetEnumerator();
							goto case 8;
						case 7:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var18_geologyInterval); var18_geologyInterval = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq45_join(closure.var8_box, closure.var9_if_exists, closure.var10_if_exists)));
							pos++;
							return true;
						case 8:
							state = 10;
							if (!var19_lithology.MoveNext()) { state = 9; goto case 9; }
							var20_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var19_lithology.Current))).GetEnumerator();
							goto case 10;
						case 9:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var19_lithology); var19_lithology = null;
							goto case 6;
						case 10:
							state = 10;
							if (!var20_extensionNameValue.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ExtensionNameValue", "http://www.energistics.org/energyml/data/commonv2"), (new seq10_join((Altova.Mapforce.IMFNode)(var20_extensionNameValue.Current))));
							pos++;
							return true;
						case 11:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var20_extensionNameValue); var20_extensionNameValue = null;
							goto case 8;
						case 13:
							state = 14;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var5_box);
							pos++;
							return true;
						case 14:
							state = 15;
							var21_filter = (closure.var6_geologyInterval).GetEnumerator();
							goto case 15;
						case 15:
							state = 15;
							if (!var21_filter.MoveNext()) { state = 16; goto case 16; }
							var22_typeLithology = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("typeLithology", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var21_filter.Current))));
							if (!((bool)Altova.Functions.Core.First((new seq48_CoreAny((new seq47_cast(var22_typeLithology))))))) { state = 15; goto case 15;  }
							var23_create_element_qname = (Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("MudLog-")));
							var24_seq_ = new Altova.Functions.Core.SequenceCache((new seq49_seq_(closure.var12_create_element_qname, closure.var13_create_element_qname, var23_create_element_qname)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CuttingsInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq50_join(closure.var2_join, closure.var3_box, closure.var4_box, closure.var7_box, closure.var8_box, closure.var11_create_attribute_qname, closure.var14_box, closure.var15_box, closure.var16_box, var23_create_element_qname, var24_seq_, (Altova.Mapforce.IMFNode)(var21_filter.Current))));
							pos++;
							return true;
						case 16:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var21_filter); var21_filter = null;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var1_box);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var20_extensionNameValue); var20_extensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_lithology); var19_lithology = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_geologyInterval); var18_geologyInterval = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_filter); var21_filter = null;
				}
			}
		}
		class seq45_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_box;
			private readonly System.Collections.IEnumerable var2_if_exists;
			private readonly System.Collections.IEnumerable var3_if_exists;

			public seq45_join(
				System.Collections.IEnumerable var1_box,
				System.Collections.IEnumerable var2_if_exists,
				System.Collections.IEnumerable var3_if_exists
			)
			{
				this.var1_box = var1_box;
				this.var2_if_exists = var2_if_exists;
				this.var3_if_exists = var3_if_exists;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq45_join closure;
				private IEnumerator var4_if_exists;
				private IEnumerator var5_if_exists;
				public Enumerator(seq45_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var1_box);
							pos++;
							return true;
						case 2:
							state = 3;
							var4_if_exists = (closure.var2_if_exists).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var4_if_exists.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdTop", "http://www.energistics.org/energyml/data/commonv2"), (new seq46_seq_((double)(var4_if_exists.Current))));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var4_if_exists); var4_if_exists = null;
							var5_if_exists = (closure.var3_if_exists).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var5_if_exists.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdBase", "http://www.energistics.org/energyml/data/commonv2"), (new seq46_seq_((double)(var5_if_exists.Current))));
							pos++;
							return true;
						case 7:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_if_exists); var5_if_exists = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_if_exists); var4_if_exists = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_if_exists); var5_if_exists = null;
				}
			}
		}
		class seq46_seq_ : IEnumerable
		{
			private readonly double var1_cur;

			public seq46_seq_(
				double var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq46_seq_ closure;
				public Enumerator(seq46_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box("ft"));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(closure.var1_cur);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq47_cast : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq47_cast(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq47_cast closure;
				private string var2_cast;
				public Enumerator(seq47_cast closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_cast = (Altova.CoreTypes.NodeToString(closure.var1_cur));
							current = (var2_cast) == ("cuttings");
							pos++;
							return true;
						case 2:
							state = 0;
							current = (var2_cast) == ("core");
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq48_CoreAny : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_sequence;

			public seq48_CoreAny(
				System.Collections.IEnumerable var1_sequence
			)
			{
				this.var1_sequence = var1_sequence;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq48_CoreAny closure;
				private IEnumerator var2_enum;
				public Enumerator(seq48_CoreAny closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_enum = (closure.var1_sequence).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_enum.MoveNext()) { state = 3; goto case 3; }
							if (!((bool)(var2_enum.Current))) { state = 2; goto case 2;  }
							current = Altova.CoreTypes.ParseBoolean("true");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.CoreTypes.ParseBoolean("false");
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_enum); var2_enum = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_enum); var2_enum = null;
				}
			}
		}
		class seq49_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var3_create_element_qname;

			public seq49_seq_(
				Altova.Mapforce.IMFNode var1_create_element_qname,
				Altova.Mapforce.IMFNode var2_create_element_qname,
				Altova.Mapforce.IMFNode var3_create_element_qname
			)
			{
				this.var1_create_element_qname = var1_create_element_qname;
				this.var2_create_element_qname = var2_create_element_qname;
				this.var3_create_element_qname = var3_create_element_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq49_seq_ closure;
				public Enumerator(seq49_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = closure.var3_create_element_qname;
							pos++;
							return true;
						case 2:
							state = 3;
							current = closure.var2_create_element_qname;
							pos++;
							return true;
						case 3:
							state = 0;
							current = closure.var1_create_element_qname;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq50_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_join;
			private readonly System.Collections.IEnumerable var2_box;
			private readonly System.Collections.IEnumerable var3_box;
			private readonly System.Collections.IEnumerable var4_box;
			private readonly System.Collections.IEnumerable var5_box;
			private readonly Altova.Mapforce.IMFNode var6_create_attribute_qname;
			private readonly System.Collections.IEnumerable var7_box;
			private readonly System.Collections.IEnumerable var8_box;
			private readonly System.Collections.IEnumerable var9_box;
			private readonly Altova.Mapforce.IMFNode var10_create_element_qname;
			private readonly System.Collections.IEnumerable var11_seq_;
			private readonly Altova.Mapforce.IMFNode var12_cur;

			public seq50_join(
				System.Collections.IEnumerable var1_join,
				System.Collections.IEnumerable var2_box,
				System.Collections.IEnumerable var3_box,
				System.Collections.IEnumerable var4_box,
				System.Collections.IEnumerable var5_box,
				Altova.Mapforce.IMFNode var6_create_attribute_qname,
				System.Collections.IEnumerable var7_box,
				System.Collections.IEnumerable var8_box,
				System.Collections.IEnumerable var9_box,
				Altova.Mapforce.IMFNode var10_create_element_qname,
				System.Collections.IEnumerable var11_seq_,
				Altova.Mapforce.IMFNode var12_cur
			)
			{
				this.var1_join = var1_join;
				this.var2_box = var2_box;
				this.var3_box = var3_box;
				this.var4_box = var4_box;
				this.var5_box = var5_box;
				this.var6_create_attribute_qname = var6_create_attribute_qname;
				this.var7_box = var7_box;
				this.var8_box = var8_box;
				this.var9_box = var9_box;
				this.var10_create_element_qname = var10_create_element_qname;
				this.var11_seq_ = var11_seq_;
				this.var12_cur = var12_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq50_join closure;
				private IEnumerator var13_uid;
				private IEnumerator var14_densBulk;
				private IEnumerator var15_densShale;
				private IEnumerator var16_calcite;
				private IEnumerator var17_calcStab;
				private IEnumerator var18_cec;
				private IEnumerator var19_dolomite;
				private IEnumerator var20_sizeMn;
				private IEnumerator var21_sizeMx;
				private IEnumerator var22_qft;
				private IEnumerator var23_cleaningMethod;
				private IEnumerator var24_dryingMethod;
				private IEnumerator var25_lithology;
				private System.Collections.IEnumerable var26_lithPc;
				public Enumerator(seq50_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var4_box);
							pos++;
							return true;
						case 2:
							state = 3;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var2_box);
							pos++;
							return true;
						case 3:
							state = 4;
							var13_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var12_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var13_uid.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_uid.Current))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var13_uid); var13_uid = null;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var9_box);
							pos++;
							return true;
						case 7:
							state = 8;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), closure.var11_seq_);
							pos++;
							return true;
						case 8:
							state = 9;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq51_seq_(closure.var6_create_attribute_qname, closure.var12_cur)));
							pos++;
							return true;
						case 9:
							state = 10;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var11_seq_);
							pos++;
							return true;
						case 10:
							state = 11;
							var14_densBulk = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("densBulk", "http://www.witsml.org/schemas/1series"), closure.var12_cur)).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var14_densBulk.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DensBulk", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_MassPerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var14_densBulk.Current)));
							pos++;
							return true;
						case 12:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var14_densBulk); var14_densBulk = null;
							var15_densShale = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("densShale", "http://www.witsml.org/schemas/1series"), closure.var12_cur)).GetEnumerator();
							goto case 14;
						case 14:
							state = 14;
							if (!var15_densShale.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DensShale", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_MassPerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var15_densShale.Current)));
							pos++;
							return true;
						case 15:
							state = 17;
							Altova.Mapforce.MFEnumerator.Dispose(var15_densShale); var15_densShale = null;
							var16_calcite = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("calcite", "http://www.witsml.org/schemas/1series"), closure.var12_cur)).GetEnumerator();
							goto case 17;
						case 17:
							state = 17;
							if (!var16_calcite.MoveNext()) { state = 18; goto case 18; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Calcite", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var16_calcite.Current)));
							pos++;
							return true;
						case 18:
							state = 20;
							Altova.Mapforce.MFEnumerator.Dispose(var16_calcite); var16_calcite = null;
							var17_calcStab = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("calcStab", "http://www.witsml.org/schemas/1series"), closure.var12_cur)).GetEnumerator();
							goto case 20;
						case 20:
							state = 20;
							if (!var17_calcStab.MoveNext()) { state = 21; goto case 21; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CalcStab", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var17_calcStab.Current)));
							pos++;
							return true;
						case 21:
							state = 23;
							Altova.Mapforce.MFEnumerator.Dispose(var17_calcStab); var17_calcStab = null;
							var18_cec = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("cec", "http://www.witsml.org/schemas/1series"), closure.var12_cur)).GetEnumerator();
							goto case 23;
						case 23:
							state = 23;
							if (!var18_cec.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Cec", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq54_seq_((Altova.Mapforce.IMFNode)(var18_cec.Current))));
							pos++;
							return true;
						case 24:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var18_cec); var18_cec = null;
							var19_dolomite = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dolomite", "http://www.witsml.org/schemas/1series"), closure.var12_cur)).GetEnumerator();
							goto case 26;
						case 26:
							state = 26;
							if (!var19_dolomite.MoveNext()) { state = 27; goto case 27; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Dolomite", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_VolumePerVolumeMeasure.Eval((Altova.Mapforce.IMFNode)(var19_dolomite.Current)));
							pos++;
							return true;
						case 27:
							state = 29;
							Altova.Mapforce.MFEnumerator.Dispose(var19_dolomite); var19_dolomite = null;
							var20_sizeMn = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("sizeMn", "http://www.witsml.org/schemas/1series"), closure.var12_cur)).GetEnumerator();
							goto case 29;
						case 29:
							state = 29;
							if (!var20_sizeMn.MoveNext()) { state = 30; goto case 30; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SizeMin", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf4_LengthMeasure.Eval((Altova.Mapforce.IMFNode)(var20_sizeMn.Current)));
							pos++;
							return true;
						case 30:
							state = 32;
							Altova.Mapforce.MFEnumerator.Dispose(var20_sizeMn); var20_sizeMn = null;
							var21_sizeMx = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("sizeMx", "http://www.witsml.org/schemas/1series"), closure.var12_cur)).GetEnumerator();
							goto case 32;
						case 32:
							state = 32;
							if (!var21_sizeMx.MoveNext()) { state = 33; goto case 33; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SizeMax", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf4_LengthMeasure.Eval((Altova.Mapforce.IMFNode)(var21_sizeMx.Current)));
							pos++;
							return true;
						case 33:
							state = 35;
							Altova.Mapforce.MFEnumerator.Dispose(var21_sizeMx); var21_sizeMx = null;
							var22_qft = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("qft", "http://www.witsml.org/schemas/1series"), closure.var12_cur)).GetEnumerator();
							goto case 35;
						case 35:
							state = 35;
							if (!var22_qft.MoveNext()) { state = 36; goto case 36; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Qft", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf5_IlluminanceMeasure.Eval((Altova.Mapforce.IMFNode)(var22_qft.Current)));
							pos++;
							return true;
						case 36:
							state = 38;
							Altova.Mapforce.MFEnumerator.Dispose(var22_qft); var22_qft = null;
							var23_cleaningMethod = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("cleaningMethod", "http://www.witsml.org/schemas/1series"), closure.var12_cur)).GetEnumerator();
							goto case 38;
						case 38:
							state = 38;
							if (!var23_cleaningMethod.MoveNext()) { state = 39; goto case 39; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CleaningMethod", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var23_cleaningMethod.Current))));
							pos++;
							return true;
						case 39:
							state = 41;
							Altova.Mapforce.MFEnumerator.Dispose(var23_cleaningMethod); var23_cleaningMethod = null;
							var24_dryingMethod = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dryingMethod", "http://www.witsml.org/schemas/1series"), closure.var12_cur)).GetEnumerator();
							goto case 41;
						case 41:
							state = 41;
							if (!var24_dryingMethod.MoveNext()) { state = 42; goto case 42; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DryingMethod", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var24_dryingMethod.Current))));
							pos++;
							return true;
						case 42:
							state = 44;
							Altova.Mapforce.MFEnumerator.Dispose(var24_dryingMethod); var24_dryingMethod = null;
							var25_lithology = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("lithology", "http://www.witsml.org/schemas/1series"), closure.var12_cur)).GetEnumerator();
							goto case 44;
						case 44:
							state = 44;
							if (!var25_lithology.MoveNext()) { state = 45; goto case 45; }
							var26_lithPc = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("lithPc", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var25_lithology.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CuttingsIntervalLithology", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq55_join((Altova.Mapforce.IMFNode)(var25_lithology.Current), closure.var1_join, closure.var3_box, closure.var5_box, closure.var7_box, closure.var8_box, var26_lithPc, closure.var10_create_element_qname, closure.var12_cur)));
							pos++;
							return true;
						case 45:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var25_lithology); var25_lithology = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var13_uid); var13_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_densBulk); var14_densBulk = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_densShale); var15_densShale = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_calcite); var16_calcite = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_calcStab); var17_calcStab = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_cec); var18_cec = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_dolomite); var19_dolomite = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_sizeMn); var20_sizeMn = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_sizeMx); var21_sizeMx = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_qft); var22_qft = null;
					Altova.Mapforce.MFEnumerator.Dispose(var23_cleaningMethod); var23_cleaningMethod = null;
					Altova.Mapforce.MFEnumerator.Dispose(var24_dryingMethod); var24_dryingMethod = null;
					Altova.Mapforce.MFEnumerator.Dispose(var25_lithology); var25_lithology = null;
				}
			}
		}
		class seq51_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_create_attribute_qname;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq51_seq_(
				Altova.Mapforce.IMFNode var1_create_attribute_qname,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_create_attribute_qname = var1_create_attribute_qname;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq51_seq_ closure;
				public Enumerator(seq51_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = closure.var1_create_attribute_qname;
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdTop", "http://www.energistics.org/energyml/data/commonv2"), (new seq52_join(closure.var2_cur)));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdBase", "http://www.energistics.org/energyml/data/commonv2"), (new seq53_join(closure.var2_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq52_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq52_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq52_join closure;
				private Altova.Mapforce.IMFNode var2_mdTop;
				public Enumerator(seq52_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_mdTop = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdTop", "http://www.witsml.org/schemas/1series"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_mdTop)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_mdTop)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq53_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq53_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq53_join closure;
				private Altova.Mapforce.IMFNode var2_mdBottom;
				public Enumerator(seq53_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_mdBottom = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdBottom", "http://www.witsml.org/schemas/1series"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_mdBottom)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(var2_mdBottom)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq54_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq54_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq54_seq_ closure;
				public Enumerator(seq54_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box("Euc"));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq55_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_join;
			private readonly System.Collections.IEnumerable var3_box;
			private readonly System.Collections.IEnumerable var4_box;
			private readonly System.Collections.IEnumerable var5_box;
			private readonly System.Collections.IEnumerable var6_box;
			private readonly System.Collections.IEnumerable var7_lithPc;
			private readonly Altova.Mapforce.IMFNode var8_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var9_cur;

			public seq55_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_join,
				System.Collections.IEnumerable var3_box,
				System.Collections.IEnumerable var4_box,
				System.Collections.IEnumerable var5_box,
				System.Collections.IEnumerable var6_box,
				System.Collections.IEnumerable var7_lithPc,
				Altova.Mapforce.IMFNode var8_create_element_qname,
				Altova.Mapforce.IMFNode var9_cur
			)
			{
				this.var1_cur = var1_cur;
				this.var2_join = var2_join;
				this.var3_box = var3_box;
				this.var4_box = var4_box;
				this.var5_box = var5_box;
				this.var6_box = var6_box;
				this.var7_lithPc = var7_lithPc;
				this.var8_create_element_qname = var8_create_element_qname;
				this.var9_cur = var9_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq55_join closure;
				private IEnumerator var10_uid;
				private IEnumerator var11_if_exists;
				private IEnumerator var12_codeLith;
				private IEnumerator var13_color;
				private IEnumerator var14_texture;
				private IEnumerator var15_hardness;
				private IEnumerator var16_compaction;
				private IEnumerator var17_sizeGrain;
				private IEnumerator var18_roundness;
				private IEnumerator var19_sphericity;
				private IEnumerator var20_sorting;
				private IEnumerator var21_porosityVisible;
				private IEnumerator var22_porosityFabric;
				private IEnumerator var23_permeability;
				private IEnumerator var24_show;
				private IEnumerator var25_qualifier;
				public Enumerator(seq55_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var10_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var1_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var10_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var10_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var10_uid); var10_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Kind", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("andesite"));
							pos++;
							return true;
						case 5:
							state = 6;
							var11_if_exists = ((new seq56_if_exists(closure.var7_lithPc))).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var11_if_exists.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("LithPc", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq57_join((double)(var11_if_exists.Current), closure.var7_lithPc)));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var11_if_exists); var11_if_exists = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq59_join(closure.var1_cur, closure.var2_join, closure.var5_box, closure.var8_create_element_qname)));
							pos++;
							return true;
						case 9:
							state = 10;
							var12_codeLith = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("codeLith", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var12_codeLith.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CodeLith", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var12_codeLith.Current))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var12_codeLith); var12_codeLith = null;
							var13_color = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("color", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var13_color.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Color", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_color.Current))));
							pos++;
							return true;
						case 14:
							state = 16;
							Altova.Mapforce.MFEnumerator.Dispose(var13_color); var13_color = null;
							var14_texture = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("texture", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 16;
						case 16:
							state = 16;
							if (!var14_texture.MoveNext()) { state = 17; goto case 17; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Texture", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var14_texture.Current))));
							pos++;
							return true;
						case 17:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var14_texture); var14_texture = null;
							var15_hardness = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("hardness", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 19;
						case 19:
							state = 19;
							if (!var15_hardness.MoveNext()) { state = 20; goto case 20; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Hardness", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var15_hardness.Current))));
							pos++;
							return true;
						case 20:
							state = 22;
							Altova.Mapforce.MFEnumerator.Dispose(var15_hardness); var15_hardness = null;
							var16_compaction = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("compaction", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 22;
						case 22:
							state = 22;
							if (!var16_compaction.MoveNext()) { state = 23; goto case 23; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Compaction", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var16_compaction.Current))));
							pos++;
							return true;
						case 23:
							state = 25;
							Altova.Mapforce.MFEnumerator.Dispose(var16_compaction); var16_compaction = null;
							var17_sizeGrain = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("sizeGrain", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 25;
						case 25:
							state = 25;
							if (!var17_sizeGrain.MoveNext()) { state = 26; goto case 26; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SizeGrain", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var17_sizeGrain.Current))));
							pos++;
							return true;
						case 26:
							state = 28;
							Altova.Mapforce.MFEnumerator.Dispose(var17_sizeGrain); var17_sizeGrain = null;
							var18_roundness = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("roundness", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 28;
						case 28:
							state = 28;
							if (!var18_roundness.MoveNext()) { state = 29; goto case 29; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Roundness", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var18_roundness.Current))));
							pos++;
							return true;
						case 29:
							state = 31;
							Altova.Mapforce.MFEnumerator.Dispose(var18_roundness); var18_roundness = null;
							var19_sphericity = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("sphericity", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 31;
						case 31:
							state = 31;
							if (!var19_sphericity.MoveNext()) { state = 32; goto case 32; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Sphericity", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var19_sphericity.Current))));
							pos++;
							return true;
						case 32:
							state = 34;
							Altova.Mapforce.MFEnumerator.Dispose(var19_sphericity); var19_sphericity = null;
							var20_sorting = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("sorting", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 34;
						case 34:
							state = 34;
							if (!var20_sorting.MoveNext()) { state = 35; goto case 35; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Sorting", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var20_sorting.Current))));
							pos++;
							return true;
						case 35:
							state = 37;
							Altova.Mapforce.MFEnumerator.Dispose(var20_sorting); var20_sorting = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MatrixCement", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("calcite"));
							pos++;
							return true;
						case 37:
							state = 38;
							var21_porosityVisible = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("porosityVisible", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 38;
						case 38:
							state = 38;
							if (!var21_porosityVisible.MoveNext()) { state = 39; goto case 39; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("PorosityVisible", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var21_porosityVisible.Current))));
							pos++;
							return true;
						case 39:
							state = 41;
							Altova.Mapforce.MFEnumerator.Dispose(var21_porosityVisible); var21_porosityVisible = null;
							var22_porosityFabric = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("porosityFabric", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 41;
						case 41:
							state = 41;
							if (!var22_porosityFabric.MoveNext()) { state = 42; goto case 42; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("PorosityFabric", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var22_porosityFabric.Current))));
							pos++;
							return true;
						case 42:
							state = 44;
							Altova.Mapforce.MFEnumerator.Dispose(var22_porosityFabric); var22_porosityFabric = null;
							var23_permeability = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("permeability", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 44;
						case 44:
							state = 44;
							if (!var23_permeability.MoveNext()) { state = 45; goto case 45; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Permeability", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var23_permeability.Current))));
							pos++;
							return true;
						case 45:
							state = 47;
							Altova.Mapforce.MFEnumerator.Dispose(var23_permeability); var23_permeability = null;
							var24_show = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("show", "http://www.witsml.org/schemas/1series"), closure.var9_cur)).GetEnumerator();
							goto case 47;
						case 47:
							state = 47;
							if (!var24_show.MoveNext()) { state = 48; goto case 48; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Shows", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq60_join(closure.var3_box, (Altova.Mapforce.IMFNode)(var24_show.Current), closure.var5_box, closure.var6_box)));
							pos++;
							return true;
						case 48:
							state = 50;
							Altova.Mapforce.MFEnumerator.Dispose(var24_show); var24_show = null;
							var25_qualifier = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("qualifier", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 50;
						case 50:
							state = 50;
							if (!var25_qualifier.MoveNext()) { state = 51; goto case 51; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Qualifier", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq39_join((Altova.Mapforce.IMFNode)(var25_qualifier.Current), closure.var4_box)));
							pos++;
							return true;
						case 51:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var25_qualifier); var25_qualifier = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var10_uid); var10_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_if_exists); var11_if_exists = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_codeLith); var12_codeLith = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_color); var13_color = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_texture); var14_texture = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_hardness); var15_hardness = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_compaction); var16_compaction = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_sizeGrain); var17_sizeGrain = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_roundness); var18_roundness = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_sphericity); var19_sphericity = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_sorting); var20_sorting = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_porosityVisible); var21_porosityVisible = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_porosityFabric); var22_porosityFabric = null;
					Altova.Mapforce.MFEnumerator.Dispose(var23_permeability); var23_permeability = null;
					Altova.Mapforce.MFEnumerator.Dispose(var24_show); var24_show = null;
					Altova.Mapforce.MFEnumerator.Dispose(var25_qualifier); var25_qualifier = null;
				}
			}
		}
		class seq56_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_lithPc;

			public seq56_if_exists(
				System.Collections.IEnumerable var1_lithPc
			)
			{
				this.var1_lithPc = var1_lithPc;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq56_if_exists closure;
				private IEnumerator var2_lithPc;
				public Enumerator(seq56_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_lithPc))) { state = 2; goto case 2;  }
							var2_lithPc = (closure.var1_lithPc).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DecimalToDouble(100m);
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var2_lithPc.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_lithPc.Current)));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_lithPc); var2_lithPc = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_lithPc); var2_lithPc = null;
				}
			}
		}
		class seq57_join : IEnumerable
		{
			private readonly double var1_cur;
			private readonly System.Collections.IEnumerable var2_lithPc;

			public seq57_join(
				double var1_cur,
				System.Collections.IEnumerable var2_lithPc
			)
			{
				this.var1_cur = var1_cur;
				this.var2_lithPc = var2_lithPc;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq57_join closure;
				private IEnumerator var3_if_exists;
				public Enumerator(seq57_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_if_exists = ((new seq58_if_exists(closure.var2_lithPc))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_if_exists.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box((string)(var3_if_exists.Current)));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_if_exists); var3_if_exists = null;
							current = Altova.CoreTypes.DoubleToString(closure.var1_cur);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_if_exists); var3_if_exists = null;
				}
			}
		}
		class seq58_if_exists : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_lithPc;

			public seq58_if_exists(
				System.Collections.IEnumerable var1_lithPc
			)
			{
				this.var1_lithPc = var1_lithPc;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq58_if_exists closure;
				private IEnumerator var2_lithPc;
				public Enumerator(seq58_if_exists closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 3;
							if (!(Altova.Functions.Core.Exists(closure.var1_lithPc))) { state = 2; goto case 2;  }
							var2_lithPc = (closure.var1_lithPc).GetEnumerator();
							goto case 3;
						case 2:
							state = 0;
							current = "%";
							pos++;
							return true;
						case 3:
							state = 3;
							if (!var2_lithPc.MoveNext()) { state = 4; goto case 4; }
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), (Altova.Mapforce.IMFNode)(var2_lithPc.Current))));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_lithPc); var2_lithPc = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_lithPc); var2_lithPc = null;
				}
			}
		}
		class seq59_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_join;
			private readonly System.Collections.IEnumerable var3_box;
			private readonly Altova.Mapforce.IMFNode var4_create_element_qname;

			public seq59_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_join,
				System.Collections.IEnumerable var3_box,
				Altova.Mapforce.IMFNode var4_create_element_qname
			)
			{
				this.var1_cur = var1_cur;
				this.var2_join = var2_join;
				this.var3_box = var3_box;
				this.var4_create_element_qname = var4_create_element_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq59_join closure;
				private IEnumerator var5_join;
				private IEnumerator var6_description;
				public Enumerator(seq59_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = closure.var4_create_element_qname;
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Originator", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(".xml"));
							pos++;
							return true;
						case 3:
							state = 4;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var3_box);
							pos++;
							return true;
						case 4:
							state = 5;
							var5_join = (closure.var2_join).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var5_join.MoveNext()) { state = 6; goto case 6; }
							current = var5_join.Current;
							pos++;
							return true;
						case 6:
							state = 8;
							Altova.Mapforce.MFEnumerator.Dispose(var5_join); var5_join = null;
							var6_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var6_description.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_description.Current))));
							pos++;
							return true;
						case 9:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var6_description); var6_description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_join); var5_join = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_description); var6_description = null;
				}
			}
		}
		class seq60_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_box;
			private readonly Altova.Mapforce.IMFNode var2_cur;
			private readonly System.Collections.IEnumerable var3_box;
			private readonly System.Collections.IEnumerable var4_box;

			public seq60_join(
				System.Collections.IEnumerable var1_box,
				Altova.Mapforce.IMFNode var2_cur,
				System.Collections.IEnumerable var3_box,
				System.Collections.IEnumerable var4_box
			)
			{
				this.var1_box = var1_box;
				this.var2_cur = var2_cur;
				this.var3_box = var3_box;
				this.var4_box = var4_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq60_join closure;
				private IEnumerator var5_showRat;
				private IEnumerator var6_stainColor;
				private IEnumerator var7_stainDistr;
				private IEnumerator var8_stainPc;
				private IEnumerator var9_cutSpeed;
				private IEnumerator var10_cutColor;
				private IEnumerator var11_cutStrength;
				private IEnumerator var12_cutForm;
				private IEnumerator var13_cutLevel;
				private IEnumerator var14_cutFlorForm;
				private IEnumerator var15_cutFlorColor;
				private IEnumerator var16_cutFlorStrength;
				private IEnumerator var17_cutFlorSpeed;
				private IEnumerator var18_cutFlorLevel;
				private IEnumerator var19_natFlorColor;
				private IEnumerator var20_natFlorPc;
				private IEnumerator var21_natFlorLevel;
				private IEnumerator var22_natFlorDesc;
				private IEnumerator var23_residueColor;
				private IEnumerator var24_impregnatedLitho;
				private IEnumerator var25_odor;
				public Enumerator(seq60_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box("show_id"));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq61_join(closure.var1_box, closure.var2_cur, closure.var3_box, closure.var4_box)));
							pos++;
							return true;
						case 3:
							state = 4;
							var5_showRat = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("showRat", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var5_showRat.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ShowRating", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_showRat.Current))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var5_showRat); var5_showRat = null;
							var6_stainColor = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("stainColor", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var6_stainColor.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("StainColor", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_stainColor.Current))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var6_stainColor); var6_stainColor = null;
							var7_stainDistr = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("stainDistr", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var7_stainDistr.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("StainDistr", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_stainDistr.Current))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var7_stainDistr); var7_stainDistr = null;
							var8_stainPc = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("stainPc", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var8_stainPc.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("StainPc", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf6_AreaPerAreaMeasure.Eval((Altova.Mapforce.IMFNode)(var8_stainPc.Current)));
							pos++;
							return true;
						case 14:
							state = 16;
							Altova.Mapforce.MFEnumerator.Dispose(var8_stainPc); var8_stainPc = null;
							var9_cutSpeed = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("cutSpeed", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 16;
						case 16:
							state = 16;
							if (!var9_cutSpeed.MoveNext()) { state = 17; goto case 17; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CutSpeed", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var9_cutSpeed.Current))));
							pos++;
							return true;
						case 17:
							state = 19;
							Altova.Mapforce.MFEnumerator.Dispose(var9_cutSpeed); var9_cutSpeed = null;
							var10_cutColor = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("cutColor", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 19;
						case 19:
							state = 19;
							if (!var10_cutColor.MoveNext()) { state = 20; goto case 20; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CutColor", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var10_cutColor.Current))));
							pos++;
							return true;
						case 20:
							state = 22;
							Altova.Mapforce.MFEnumerator.Dispose(var10_cutColor); var10_cutColor = null;
							var11_cutStrength = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("cutStrength", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 22;
						case 22:
							state = 22;
							if (!var11_cutStrength.MoveNext()) { state = 23; goto case 23; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CutStrength", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var11_cutStrength.Current))));
							pos++;
							return true;
						case 23:
							state = 25;
							Altova.Mapforce.MFEnumerator.Dispose(var11_cutStrength); var11_cutStrength = null;
							var12_cutForm = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("cutForm", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 25;
						case 25:
							state = 25;
							if (!var12_cutForm.MoveNext()) { state = 26; goto case 26; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CutForm", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var12_cutForm.Current))));
							pos++;
							return true;
						case 26:
							state = 28;
							Altova.Mapforce.MFEnumerator.Dispose(var12_cutForm); var12_cutForm = null;
							var13_cutLevel = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("cutLevel", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 28;
						case 28:
							state = 28;
							if (!var13_cutLevel.MoveNext()) { state = 29; goto case 29; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CutLevel", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_cutLevel.Current))));
							pos++;
							return true;
						case 29:
							state = 31;
							Altova.Mapforce.MFEnumerator.Dispose(var13_cutLevel); var13_cutLevel = null;
							var14_cutFlorForm = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("cutFlorForm", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 31;
						case 31:
							state = 31;
							if (!var14_cutFlorForm.MoveNext()) { state = 32; goto case 32; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CutFlorForm", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var14_cutFlorForm.Current))));
							pos++;
							return true;
						case 32:
							state = 34;
							Altova.Mapforce.MFEnumerator.Dispose(var14_cutFlorForm); var14_cutFlorForm = null;
							var15_cutFlorColor = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("cutFlorColor", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 34;
						case 34:
							state = 34;
							if (!var15_cutFlorColor.MoveNext()) { state = 35; goto case 35; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CutFlorColor", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var15_cutFlorColor.Current))));
							pos++;
							return true;
						case 35:
							state = 37;
							Altova.Mapforce.MFEnumerator.Dispose(var15_cutFlorColor); var15_cutFlorColor = null;
							var16_cutFlorStrength = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("cutFlorStrength", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 37;
						case 37:
							state = 37;
							if (!var16_cutFlorStrength.MoveNext()) { state = 38; goto case 38; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CutFlorStrength", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var16_cutFlorStrength.Current))));
							pos++;
							return true;
						case 38:
							state = 40;
							Altova.Mapforce.MFEnumerator.Dispose(var16_cutFlorStrength); var16_cutFlorStrength = null;
							var17_cutFlorSpeed = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("cutFlorSpeed", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 40;
						case 40:
							state = 40;
							if (!var17_cutFlorSpeed.MoveNext()) { state = 41; goto case 41; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CutFlorSpeed", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var17_cutFlorSpeed.Current))));
							pos++;
							return true;
						case 41:
							state = 43;
							Altova.Mapforce.MFEnumerator.Dispose(var17_cutFlorSpeed); var17_cutFlorSpeed = null;
							var18_cutFlorLevel = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("cutFlorLevel", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 43;
						case 43:
							state = 43;
							if (!var18_cutFlorLevel.MoveNext()) { state = 44; goto case 44; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CutFlorLevel", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var18_cutFlorLevel.Current))));
							pos++;
							return true;
						case 44:
							state = 46;
							Altova.Mapforce.MFEnumerator.Dispose(var18_cutFlorLevel); var18_cutFlorLevel = null;
							var19_natFlorColor = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("natFlorColor", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 46;
						case 46:
							state = 46;
							if (!var19_natFlorColor.MoveNext()) { state = 47; goto case 47; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NatFlorColor", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var19_natFlorColor.Current))));
							pos++;
							return true;
						case 47:
							state = 49;
							Altova.Mapforce.MFEnumerator.Dispose(var19_natFlorColor); var19_natFlorColor = null;
							var20_natFlorPc = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("natFlorPc", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 49;
						case 49:
							state = 49;
							if (!var20_natFlorPc.MoveNext()) { state = 50; goto case 50; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NatFlorPc", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf6_AreaPerAreaMeasure.Eval((Altova.Mapforce.IMFNode)(var20_natFlorPc.Current)));
							pos++;
							return true;
						case 50:
							state = 52;
							Altova.Mapforce.MFEnumerator.Dispose(var20_natFlorPc); var20_natFlorPc = null;
							var21_natFlorLevel = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("natFlorLevel", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 52;
						case 52:
							state = 52;
							if (!var21_natFlorLevel.MoveNext()) { state = 53; goto case 53; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NatFlorLevel", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var21_natFlorLevel.Current))));
							pos++;
							return true;
						case 53:
							state = 55;
							Altova.Mapforce.MFEnumerator.Dispose(var21_natFlorLevel); var21_natFlorLevel = null;
							var22_natFlorDesc = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("natFlorDesc", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 55;
						case 55:
							state = 55;
							if (!var22_natFlorDesc.MoveNext()) { state = 56; goto case 56; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NatFlorDesc", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var22_natFlorDesc.Current))));
							pos++;
							return true;
						case 56:
							state = 58;
							Altova.Mapforce.MFEnumerator.Dispose(var22_natFlorDesc); var22_natFlorDesc = null;
							var23_residueColor = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("residueColor", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 58;
						case 58:
							state = 58;
							if (!var23_residueColor.MoveNext()) { state = 59; goto case 59; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ResidueColor", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var23_residueColor.Current))));
							pos++;
							return true;
						case 59:
							state = 61;
							Altova.Mapforce.MFEnumerator.Dispose(var23_residueColor); var23_residueColor = null;
							var24_impregnatedLitho = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("impregnatedLitho", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 61;
						case 61:
							state = 61;
							if (!var24_impregnatedLitho.MoveNext()) { state = 62; goto case 62; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ImpregnatedLitho", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var24_impregnatedLitho.Current))));
							pos++;
							return true;
						case 62:
							state = 64;
							Altova.Mapforce.MFEnumerator.Dispose(var24_impregnatedLitho); var24_impregnatedLitho = null;
							var25_odor = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("odor", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 64;
						case 64:
							state = 64;
							if (!var25_odor.MoveNext()) { state = 65; goto case 65; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Odor", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var25_odor.Current))));
							pos++;
							return true;
						case 65:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var25_odor); var25_odor = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_showRat); var5_showRat = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_stainColor); var6_stainColor = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_stainDistr); var7_stainDistr = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_stainPc); var8_stainPc = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_cutSpeed); var9_cutSpeed = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_cutColor); var10_cutColor = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_cutStrength); var11_cutStrength = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_cutForm); var12_cutForm = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_cutLevel); var13_cutLevel = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_cutFlorForm); var14_cutFlorForm = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_cutFlorColor); var15_cutFlorColor = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_cutFlorStrength); var16_cutFlorStrength = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_cutFlorSpeed); var17_cutFlorSpeed = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_cutFlorLevel); var18_cutFlorLevel = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_natFlorColor); var19_natFlorColor = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_natFlorPc); var20_natFlorPc = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_natFlorLevel); var21_natFlorLevel = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_natFlorDesc); var22_natFlorDesc = null;
					Altova.Mapforce.MFEnumerator.Dispose(var23_residueColor); var23_residueColor = null;
					Altova.Mapforce.MFEnumerator.Dispose(var24_impregnatedLitho); var24_impregnatedLitho = null;
					Altova.Mapforce.MFEnumerator.Dispose(var25_odor); var25_odor = null;
				}
			}
		}
		class seq61_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_box;
			private readonly Altova.Mapforce.IMFNode var2_cur;
			private readonly System.Collections.IEnumerable var3_box;
			private readonly System.Collections.IEnumerable var4_box;

			public seq61_join(
				System.Collections.IEnumerable var1_box,
				Altova.Mapforce.IMFNode var2_cur,
				System.Collections.IEnumerable var3_box,
				System.Collections.IEnumerable var4_box
			)
			{
				this.var1_box = var1_box;
				this.var2_cur = var2_cur;
				this.var3_box = var3_box;
				this.var4_box = var4_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq61_join closure;
				private IEnumerator var5_showDesc;
				public Enumerator(seq61_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var4_box);
							pos++;
							return true;
						case 2:
							state = 3;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var1_box);
							pos++;
							return true;
						case 3:
							state = 4;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var3_box);
							pos++;
							return true;
						case 4:
							state = 5;
							var5_showDesc = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("showDesc", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var5_showDesc.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_showDesc.Current))));
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_showDesc); var5_showDesc = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_showDesc); var5_showDesc = null;
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_mudLog_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_obj_mudLog_Instance
			)
			{
				this.var1_obj_mudLog_Instance = var1_obj_mudLog_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_first_items;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_first_items = ((new main(closure.var1_obj_mudLog_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_first_items.MoveNext()) { state = 3; goto case 3; }
							current = var2_first_items.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_first_items); var2_first_items = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_first_items); var2_first_items = null;
				}
			}
		}

	}
}
