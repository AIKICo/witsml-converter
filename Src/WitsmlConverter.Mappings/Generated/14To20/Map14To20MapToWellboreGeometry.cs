////////////////////////////////////////////////////////////////////////
//
// Map14To20MapToWellboreGeometry.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map14To20
{

	public class Map14To20MapToWellboreGeometry : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_obj_wbGeometry2Instance;
		// members
		#endregion //Members


		public void Run(String obj_wbGeometry2SourceFilename, string WellboreGeometry2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input obj_wbGeometry2Source = new Altova.IO.FileInput(obj_wbGeometry2SourceFilename))
			// open target stream
			using (Altova.IO.Output WellboreGeometry2Target = new Altova.IO.FileOutput(WellboreGeometry2TargetFilename))
			{
				// run
				Run(obj_wbGeometry2Source, WellboreGeometry2Target);
			}
		}

		public void Run(Altova.IO.Input obj_wbGeometry2Source, Altova.IO.Output WellboreGeometry2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + obj_wbGeometry2Source.Filename + "...\n");
			XmlDocument obj_wbGeometry2DocSourceObject = XmlTreeOperations.LoadDocument(obj_wbGeometry2Source);


			m_obj_wbGeometry2Instance = obj_wbGeometry2DocSourceObject;
			if (runDoesCloseAll)
				obj_wbGeometry2Source.Close();
				// Create the target
				XmlDocument WellboreGeometry2Doc = (WellboreGeometry2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? WellboreGeometry2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_obj_wbGeometry2Instance, obj_wbGeometry2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, WellboreGeometry2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				WellboreGeometry2Doc,
				WellboreGeometry2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					obj_wbGeometry2Source.Close();
					WellboreGeometry2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_wbGeometry_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_obj_wbGeometry_Instance
			)
			{
				this.var1_obj_wbGeometry_Instance = var1_obj_wbGeometry_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_wbGeometrys;
				private System.Collections.IEnumerable var3_first_items;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_wbGeometrys = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wbGeometrys", "http://www.witsml.org/schemas/1series"), closure.var1_obj_wbGeometry_Instance));
							var3_first_items = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FirstItems((new seq1_join(var2_wbGeometrys)), 1m));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("WellboreGeometry", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq2_join(var2_wbGeometrys, var3_first_items)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wbGeometrys;

			public seq1_join(
				System.Collections.IEnumerable var1_wbGeometrys
			)
			{
				this.var1_wbGeometrys = var1_wbGeometrys;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_wbGeometrys;
				private IEnumerator var3_wbGeometry;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_wbGeometrys = (closure.var1_wbGeometrys).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_wbGeometrys.MoveNext()) { state = 3; goto case 3; }
							var3_wbGeometry = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wbGeometry", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_wbGeometrys.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_wbGeometrys); var2_wbGeometrys = null;
							return false;
						case 4:
							state = 4;
							if (!var3_wbGeometry.MoveNext()) { state = 5; goto case 5; }
							current = var3_wbGeometry.Current;
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_wbGeometry); var3_wbGeometry = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_wbGeometry); var3_wbGeometry = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_wbGeometrys); var2_wbGeometrys = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wbGeometrys;
			private readonly System.Collections.IEnumerable var2_first_items;

			public seq2_join(
				System.Collections.IEnumerable var1_wbGeometrys,
				System.Collections.IEnumerable var2_first_items
			)
			{
				this.var1_wbGeometrys = var1_wbGeometrys;
				this.var2_first_items = var2_first_items;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var3_first_items;
				private IEnumerator var4_first_items;
				private Altova.Mapforce.IMFNode var5_create_element_qname;
				private Altova.Mapforce.IMFNode var6_create_element_qname;
				private IEnumerator var7_customData;
				private IEnumerator var8_mdBottom;
				private IEnumerator var9_gapAir;
				private IEnumerator var10_depthWaterMean;
				private IEnumerator var11_wbGeometrySection;
				private System.Collections.IEnumerable var12_box;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("eml", "http://www.energistics.org/energyml/data/commonv2");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateNamespace("gco", "http://www.isotc211.org/2005/gco");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateNamespace("gmd", "http://www.isotc211.org/2005/gmd");
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateNamespace("gsr", "http://www.isotc211.org/2005/gsr");
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateNamespace("gts", "http://www.isotc211.org/2005/gts");
							pos++;
							return true;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateNamespace("gml", "http://www.opengis.net/gml/3.2");
							pos++;
							return true;
						case 7:
							state = 8;
							current = Altova.Functions.Core.CreateNamespace("xlink", "http://www.w3.org/1999/xlink");
							pos++;
							return true;
						case 8:
							state = 9;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.energistics.org/energyml/data/witsmlv2 file:///D:/Repos/witsmlvalidation/witsml/energyml/2.0/data/witsml/v2.0/xsd_schemas/WellboreGeometry.xsd"));
							pos++;
							return true;
						case 9:
							state = 10;
							var3_first_items = (closure.var2_first_items).GetEnumerator();
							goto case 10;
						case 10:
							state = 12;
							if (!var3_first_items.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("schemaVersion", ""), Altova.Functions.Core.Box("2.0"));
							pos++;
							return true;
						case 11:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
							var4_first_items = (closure.var2_first_items).GetEnumerator();
							goto case 14;
						case 12:
							state = 10;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uuid", ""), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 14:
							state = 16;
							if (!var4_first_items.MoveNext()) { state = 15; goto case 15; }
							var5_create_element_qname = (Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Originator", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("1411_input")));
							var6_create_element_qname = (Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Format", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Mapforce")));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Aliases", "http://www.energistics.org/energyml/data/commonv2"), (new seq3_join(closure.var1_wbGeometrys, (Altova.Mapforce.IMFNode)(var4_first_items.Current))));
							pos++;
							return true;
						case 15:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
							return false;
						case 16:
							state = 17;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), (new seq4_join(var5_create_element_qname, var6_create_element_qname, (Altova.Mapforce.IMFNode)(var4_first_items.Current))));
							pos++;
							return true;
						case 17:
							state = 18;
							var7_customData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var7_customData.MoveNext()) { state = 19; goto case 19; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:CustomData", "http://www.energistics.org/energyml/data/commonv2"), tbf.tbf1_CustomData.Eval((Altova.Mapforce.IMFNode)(var7_customData.Current)));
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var7_customData); var7_customData = null;
							var8_mdBottom = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdBottom", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 21;
						case 21:
							state = 21;
							if (!var8_mdBottom.MoveNext()) { state = 22; goto case 22; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MdBase", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_seq_((Altova.Mapforce.IMFNode)(var8_mdBottom.Current))));
							pos++;
							return true;
						case 22:
							state = 24;
							Altova.Mapforce.MFEnumerator.Dispose(var8_mdBottom); var8_mdBottom = null;
							var9_gapAir = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("gapAir", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 24;
						case 24:
							state = 24;
							if (!var9_gapAir.MoveNext()) { state = 25; goto case 25; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GapAir", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_LengthMeasure.Eval((Altova.Mapforce.IMFNode)(var9_gapAir.Current)));
							pos++;
							return true;
						case 25:
							state = 27;
							Altova.Mapforce.MFEnumerator.Dispose(var9_gapAir); var9_gapAir = null;
							var10_depthWaterMean = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("depthWaterMean", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 27;
						case 27:
							state = 27;
							if (!var10_depthWaterMean.MoveNext()) { state = 28; goto case 28; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DepthWaterMean", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_LengthMeasure.Eval((Altova.Mapforce.IMFNode)(var10_depthWaterMean.Current)));
							pos++;
							return true;
						case 28:
							state = 30;
							Altova.Mapforce.MFEnumerator.Dispose(var10_depthWaterMean); var10_depthWaterMean = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GrowingStatus", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box("active"));
							pos++;
							return true;
						case 30:
							state = 31;
							var11_wbGeometrySection = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wbGeometrySection", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 31;
						case 31:
							state = 31;
							if (!var11_wbGeometrySection.MoveNext()) { state = 32; goto case 32; }
							var12_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box(Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("datum", ""), Altova.Functions.Core.Box("kb"))));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("WellboreGeometrySection", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq6_join(var5_create_element_qname, var6_create_element_qname, (Altova.Mapforce.IMFNode)(var11_wbGeometrySection.Current), var12_box)));
							pos++;
							return true;
						case 32:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var11_wbGeometrySection); var11_wbGeometrySection = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq12_seq_((Altova.Mapforce.IMFNode)(var4_first_items.Current))));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_customData); var7_customData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_mdBottom); var8_mdBottom = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_gapAir); var9_gapAir = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_depthWaterMean); var10_depthWaterMean = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_wbGeometrySection); var11_wbGeometrySection = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
				}
			}
		}
		class seq3_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_wbGeometrys;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq3_join(
				System.Collections.IEnumerable var1_wbGeometrys,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_wbGeometrys = var1_wbGeometrys;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_join closure;
				private IEnumerator var3_wbGeometrys;
				private IEnumerator var4_uidWell;
				private IEnumerator var5_uidWellbore;
				private IEnumerator var6_uid;
				public Enumerator(seq3_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_wbGeometrys = (closure.var1_wbGeometrys).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_wbGeometrys.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("authority", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("version", ""), (Altova.Mapforce.IMFNode)(var3_wbGeometrys.Current))))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_wbGeometrys); var3_wbGeometrys = null;
							var4_uidWell = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uidWell", ""), closure.var2_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 7;
							if (!var4_uidWell.MoveNext()) { state = 6; goto case 6; }
							var5_uidWellbore = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uidWellbore", ""), closure.var2_cur)).GetEnumerator();
							goto case 7;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_uidWell); var4_uidWell = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Identifier is created from the uid of the input scheme"));
							pos++;
							return true;
						case 7:
							state = 9;
							if (!var5_uidWellbore.MoveNext()) { state = 8; goto case 8; }
							var6_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var2_cur)).GetEnumerator();
							goto case 9;
						case 8:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var5_uidWellbore); var5_uidWellbore = null;
							goto case 5;
						case 9:
							state = 9;
							if (!var6_uid.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Identifier", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_uidWell.Current)), Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_uidWellbore.Current))), Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_uid.Current)))));
							pos++;
							return true;
						case 10:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var6_uid); var6_uid = null;
							goto case 7;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_wbGeometrys); var3_wbGeometrys = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_uid); var6_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_uidWellbore); var5_uidWellbore = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_uidWell); var4_uidWell = null;
				}
			}
		}
		class seq4_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var3_cur;

			public seq4_join(
				Altova.Mapforce.IMFNode var1_create_element_qname,
				Altova.Mapforce.IMFNode var2_create_element_qname,
				Altova.Mapforce.IMFNode var3_cur
			)
			{
				this.var1_create_element_qname = var1_create_element_qname;
				this.var2_create_element_qname = var2_create_element_qname;
				this.var3_cur = var3_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_join closure;
				private IEnumerator var4_dTimReport;
				public Enumerator(seq4_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var3_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = closure.var1_create_element_qname;
							pos++;
							return true;
						case 3:
							state = 4;
							current = closure.var2_create_element_qname;
							pos++;
							return true;
						case 4:
							state = 5;
							var4_dTimReport = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTimReport", "http://www.witsml.org/schemas/1series"), closure.var3_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 5;
							if (!var4_dTimReport.MoveNext()) { state = 6; goto case 6; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_dTimReport.Current))))));
							pos++;
							return true;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_dTimReport); var4_dTimReport = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var4_dTimReport); var4_dTimReport = null;
				}
			}
		}
		class seq5_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq5_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_seq_ closure;
				public Enumerator(seq5_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("datum", ""), Altova.Functions.Core.Box("kb"));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq6_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var3_cur;
			private readonly System.Collections.IEnumerable var4_box;

			public seq6_join(
				Altova.Mapforce.IMFNode var1_create_element_qname,
				Altova.Mapforce.IMFNode var2_create_element_qname,
				Altova.Mapforce.IMFNode var3_cur,
				System.Collections.IEnumerable var4_box
			)
			{
				this.var1_create_element_qname = var1_create_element_qname;
				this.var2_create_element_qname = var2_create_element_qname;
				this.var3_cur = var3_cur;
				this.var4_box = var4_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_join closure;
				private IEnumerator var5_uid;
				private IEnumerator var6_typeHoleCasing;
				private IEnumerator var7_idSection;
				private IEnumerator var8_odSection;
				private IEnumerator var9_wtPerLen;
				private IEnumerator var10_grade;
				private IEnumerator var11_curveConductor;
				private IEnumerator var12_diaDrift;
				private IEnumerator var13_factFric;
				private IEnumerator var14_extensionNameValue;
				public Enumerator(seq6_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var5_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var3_cur)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var5_uid.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_uid.Current))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var5_uid); var5_uid = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq7_seq_(closure.var1_create_element_qname, closure.var2_create_element_qname)));
							pos++;
							return true;
						case 5:
							state = 6;
							var6_typeHoleCasing = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("typeHoleCasing", "http://www.witsml.org/schemas/1series"), closure.var3_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var6_typeHoleCasing.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TypeHoleCasing", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_typeHoleCasing.Current))));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var6_typeHoleCasing); var6_typeHoleCasing = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SectionMdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq8_join(closure.var3_cur, closure.var4_box)));
							pos++;
							return true;
						case 9:
							state = 10;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SectionTvdInterval", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq10_join(closure.var3_cur, closure.var4_box)));
							pos++;
							return true;
						case 10:
							state = 11;
							var7_idSection = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("idSection", "http://www.witsml.org/schemas/1series"), closure.var3_cur)).GetEnumerator();
							goto case 11;
						case 11:
							state = 11;
							if (!var7_idSection.MoveNext()) { state = 12; goto case 12; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("IdSection", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_LengthMeasure.Eval((Altova.Mapforce.IMFNode)(var7_idSection.Current)));
							pos++;
							return true;
						case 12:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var7_idSection); var7_idSection = null;
							var8_odSection = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("odSection", "http://www.witsml.org/schemas/1series"), closure.var3_cur)).GetEnumerator();
							goto case 14;
						case 14:
							state = 14;
							if (!var8_odSection.MoveNext()) { state = 15; goto case 15; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("OdSection", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_LengthMeasure.Eval((Altova.Mapforce.IMFNode)(var8_odSection.Current)));
							pos++;
							return true;
						case 15:
							state = 17;
							Altova.Mapforce.MFEnumerator.Dispose(var8_odSection); var8_odSection = null;
							var9_wtPerLen = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("wtPerLen", "http://www.witsml.org/schemas/1series"), closure.var3_cur)).GetEnumerator();
							goto case 17;
						case 17:
							state = 17;
							if (!var9_wtPerLen.MoveNext()) { state = 18; goto case 18; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("WtPerLen", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_MassPerLengthMeasure.Eval((Altova.Mapforce.IMFNode)(var9_wtPerLen.Current)));
							pos++;
							return true;
						case 18:
							state = 20;
							Altova.Mapforce.MFEnumerator.Dispose(var9_wtPerLen); var9_wtPerLen = null;
							var10_grade = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("grade", "http://www.witsml.org/schemas/1series"), closure.var3_cur)).GetEnumerator();
							goto case 20;
						case 20:
							state = 20;
							if (!var10_grade.MoveNext()) { state = 21; goto case 21; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Grade", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var10_grade.Current))));
							pos++;
							return true;
						case 21:
							state = 23;
							Altova.Mapforce.MFEnumerator.Dispose(var10_grade); var10_grade = null;
							var11_curveConductor = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("curveConductor", "http://www.witsml.org/schemas/1series"), closure.var3_cur)).GetEnumerator();
							goto case 23;
						case 23:
							state = 23;
							if (!var11_curveConductor.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CurveConductor", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var11_curveConductor.Current))))));
							pos++;
							return true;
						case 24:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var11_curveConductor); var11_curveConductor = null;
							var12_diaDrift = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("diaDrift", "http://www.witsml.org/schemas/1series"), closure.var3_cur)).GetEnumerator();
							goto case 26;
						case 26:
							state = 26;
							if (!var12_diaDrift.MoveNext()) { state = 27; goto case 27; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DiaDrift", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_LengthMeasure.Eval((Altova.Mapforce.IMFNode)(var12_diaDrift.Current)));
							pos++;
							return true;
						case 27:
							state = 29;
							Altova.Mapforce.MFEnumerator.Dispose(var12_diaDrift); var12_diaDrift = null;
							var13_factFric = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("factFric", "http://www.witsml.org/schemas/1series"), closure.var3_cur)).GetEnumerator();
							goto case 29;
						case 29:
							state = 29;
							if (!var13_factFric.MoveNext()) { state = 30; goto case 30; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FactFric", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_factFric.Current))))));
							pos++;
							return true;
						case 30:
							state = 32;
							Altova.Mapforce.MFEnumerator.Dispose(var13_factFric); var13_factFric = null;
							var14_extensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("extensionNameValue", "http://www.witsml.org/schemas/1series"), closure.var3_cur)).GetEnumerator();
							goto case 32;
						case 32:
							state = 32;
							if (!var14_extensionNameValue.MoveNext()) { state = 33; goto case 33; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq11_join((Altova.Mapforce.IMFNode)(var14_extensionNameValue.Current))));
							pos++;
							return true;
						case 33:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var14_extensionNameValue); var14_extensionNameValue = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_uid); var5_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_typeHoleCasing); var6_typeHoleCasing = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_idSection); var7_idSection = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_odSection); var8_odSection = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_wtPerLen); var9_wtPerLen = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_grade); var10_grade = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_curveConductor); var11_curveConductor = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_diaDrift); var12_diaDrift = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_factFric); var13_factFric = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_extensionNameValue); var14_extensionNameValue = null;
				}
			}
		}
		class seq7_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_create_element_qname;
			private readonly Altova.Mapforce.IMFNode var2_create_element_qname;

			public seq7_seq_(
				Altova.Mapforce.IMFNode var1_create_element_qname,
				Altova.Mapforce.IMFNode var2_create_element_qname
			)
			{
				this.var1_create_element_qname = var1_create_element_qname;
				this.var2_create_element_qname = var2_create_element_qname;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_seq_ closure;
				public Enumerator(seq7_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = closure.var1_create_element_qname;
							pos++;
							return true;
						case 2:
							state = 0;
							current = closure.var2_create_element_qname;
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq8_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_box;

			public seq8_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_box
			)
			{
				this.var1_cur = var1_cur;
				this.var2_box = var2_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq8_join closure;
				private IEnumerator var3_mdTop;
				private IEnumerator var4_mdBottom;
				public Enumerator(seq8_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var2_box);
							pos++;
							return true;
						case 2:
							state = 3;
							var3_mdTop = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdTop", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var3_mdTop.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdTop", "http://www.energistics.org/energyml/data/commonv2"), (new seq9_seq_((Altova.Mapforce.IMFNode)(var3_mdTop.Current))));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var3_mdTop); var3_mdTop = null;
							var4_mdBottom = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdBottom", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var4_mdBottom.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MdBase", "http://www.energistics.org/energyml/data/commonv2"), (new seq9_seq_((Altova.Mapforce.IMFNode)(var4_mdBottom.Current))));
							pos++;
							return true;
						case 7:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_mdBottom); var4_mdBottom = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_mdTop); var3_mdTop = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_mdBottom); var4_mdBottom = null;
				}
			}
		}
		class seq9_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq9_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq9_seq_ closure;
				public Enumerator(seq9_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq10_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;
			private readonly System.Collections.IEnumerable var2_box;

			public seq10_join(
				Altova.Mapforce.IMFNode var1_cur,
				System.Collections.IEnumerable var2_box
			)
			{
				this.var1_cur = var1_cur;
				this.var2_box = var2_box;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq10_join closure;
				private IEnumerator var3_tvdTop;
				private IEnumerator var4_tvdBottom;
				public Enumerator(seq10_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(closure.var2_box);
							pos++;
							return true;
						case 2:
							state = 3;
							var3_tvdTop = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("tvdTop", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var3_tvdTop.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:TvdTop", "http://www.energistics.org/energyml/data/commonv2"), (new seq9_seq_((Altova.Mapforce.IMFNode)(var3_tvdTop.Current))));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var3_tvdTop); var3_tvdTop = null;
							var4_tvdBottom = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("tvdBottom", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var4_tvdBottom.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:TvdBase", "http://www.energistics.org/energyml/data/commonv2"), (new seq9_seq_((Altova.Mapforce.IMFNode)(var4_tvdBottom.Current))));
							pos++;
							return true;
						case 7:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_tvdBottom); var4_tvdBottom = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_tvdTop); var3_tvdTop = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_tvdBottom); var4_tvdBottom = null;
				}
			}
		}
		class seq11_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq11_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq11_join closure;
				private IEnumerator var2_measureClass;
				private IEnumerator var3_dTim;
				private IEnumerator var4_index;
				private IEnumerator var5_description;
				public Enumerator(seq11_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Name", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Value", "http://www.energistics.org/energyml/data/commonv2"), tbf.tbf4_StringMeasure.Eval((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("value", "http://www.witsml.org/schemas/1series"), closure.var1_cur))));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_measureClass = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("measureClass", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var2_measureClass.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_measureClass.Current))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_measureClass); var2_measureClass = null;
							var3_dTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTim", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var3_dTim.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:DTim", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_dTim.Current))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var3_dTim); var3_dTim = null;
							var4_index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("index", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_index.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Index", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_index.Current))))))))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_index); var4_index = null;
							var5_description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("description", "http://www.witsml.org/schemas/1series"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_description.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_description.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_description); var5_description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_measureClass); var2_measureClass = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_dTim); var3_dTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_index); var4_index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_description); var5_description = null;
				}
			}
		}
		class seq12_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq12_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq12_seq_ closure;
				public Enumerator(seq12_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ContentType", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("obj_wellbore"));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nameWellbore", "http://www.witsml.org/schemas/1series"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Uuid", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_wbGeometry_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_obj_wbGeometry_Instance
			)
			{
				this.var1_obj_wbGeometry_Instance = var1_obj_wbGeometry_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_wbGeometrys;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_wbGeometrys = ((new main(closure.var1_obj_wbGeometry_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_wbGeometrys.MoveNext()) { state = 3; goto case 3; }
							current = var2_wbGeometrys.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_wbGeometrys); var2_wbGeometrys = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_wbGeometrys); var2_wbGeometrys = null;
				}
			}
		}

	}
}
