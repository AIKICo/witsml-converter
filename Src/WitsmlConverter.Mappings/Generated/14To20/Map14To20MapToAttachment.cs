////////////////////////////////////////////////////////////////////////
//
// Map14To20MapToAttachment.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map14To20
{

	public class Map14To20MapToAttachment : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_obj_attachment2Instance;
		// members
		#endregion //Members


		public void Run(String obj_attachment2SourceFilename, string Attachment2TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input obj_attachment2Source = new Altova.IO.FileInput(obj_attachment2SourceFilename))
			// open target stream
			using (Altova.IO.Output Attachment2Target = new Altova.IO.FileOutput(Attachment2TargetFilename))
			{
				// run
				Run(obj_attachment2Source, Attachment2Target);
			}
		}

		public void Run(Altova.IO.Input obj_attachment2Source, Altova.IO.Output Attachment2Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + obj_attachment2Source.Filename + "...\n");
			XmlDocument obj_attachment2DocSourceObject = XmlTreeOperations.LoadDocument(obj_attachment2Source);


			m_obj_attachment2Instance = obj_attachment2DocSourceObject;
			if (runDoesCloseAll)
				obj_attachment2Source.Close();
				// Create the target
				XmlDocument Attachment2Doc = (Attachment2Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? Attachment2Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_obj_attachment2Instance, obj_attachment2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, Attachment2Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				Attachment2Doc,
				Attachment2Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					obj_attachment2Source.Close();
					Attachment2Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_attachment_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_obj_attachment_Instance
			)
			{
				this.var1_obj_attachment_Instance = var1_obj_attachment_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_attachments;
				private System.Collections.IEnumerable var3_first_items;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_attachments = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("attachments", "http://www.witsml.org/schemas/1series"), closure.var1_obj_attachment_Instance));
							var3_first_items = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FirstItems((new seq1_join(var2_attachments)), 1m));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Attachment", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq2_join(var2_attachments, var3_first_items)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_attachments;

			public seq1_join(
				System.Collections.IEnumerable var1_attachments
			)
			{
				this.var1_attachments = var1_attachments;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_attachments;
				private IEnumerator var3_attachment;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_attachments = (closure.var1_attachments).GetEnumerator();
							goto case 2;
						case 2:
							state = 4;
							if (!var2_attachments.MoveNext()) { state = 3; goto case 3; }
							var3_attachment = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("attachment", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var2_attachments.Current))).GetEnumerator();
							goto case 4;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_attachments); var2_attachments = null;
							return false;
						case 4:
							state = 4;
							if (!var3_attachment.MoveNext()) { state = 5; goto case 5; }
							current = var3_attachment.Current;
							pos++;
							return true;
						case 5:
							state = 2;
							Altova.Mapforce.MFEnumerator.Dispose(var3_attachment); var3_attachment = null;
							goto case 2;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_attachment); var3_attachment = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_attachments); var2_attachments = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_attachments;
			private readonly System.Collections.IEnumerable var2_first_items;

			public seq2_join(
				System.Collections.IEnumerable var1_attachments,
				System.Collections.IEnumerable var2_first_items
			)
			{
				this.var1_attachments = var1_attachments;
				this.var2_first_items = var2_first_items;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var3_first_items;
				private IEnumerator var4_first_items;
				private System.Collections.IEnumerable var5_box;
				private System.Collections.IEnumerable var6_subObjectReference;
				private System.Collections.IEnumerable var7_commonData;
				private IEnumerator var8_customData;
				private IEnumerator var9_md;
				private IEnumerator var10_param;
				private IEnumerator var11_mdBit;
				private IEnumerator var12_fileName;
				private IEnumerator var13_fileType;
				private IEnumerator var14_content;
				private IEnumerator var15_subObjectReference;
				private IEnumerator var16_subObjectReference;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("eml", "http://www.energistics.org/energyml/data/commonv2");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateNamespace("gco", "http://www.isotc211.org/2005/gco");
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateNamespace("gmd", "http://www.isotc211.org/2005/gmd");
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateNamespace("gsr", "http://www.isotc211.org/2005/gsr");
							pos++;
							return true;
						case 5:
							state = 6;
							current = Altova.Functions.Core.CreateNamespace("gts", "http://www.isotc211.org/2005/gts");
							pos++;
							return true;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateNamespace("gml", "http://www.opengis.net/gml/3.2");
							pos++;
							return true;
						case 7:
							state = 8;
							current = Altova.Functions.Core.CreateNamespace("xlink", "http://www.w3.org/1999/xlink");
							pos++;
							return true;
						case 8:
							state = 9;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.energistics.org/energyml/data/witsmlv2 file:///D:/Repos/witsmlvalidation/witsml/energyml/2.0/data/witsml/v2.0/xsd_schemas/Attachment.xsd"));
							pos++;
							return true;
						case 9:
							state = 10;
							var3_first_items = (closure.var2_first_items).GetEnumerator();
							goto case 10;
						case 10:
							state = 12;
							if (!var3_first_items.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("schemaVersion", ""), Altova.Functions.Core.Box("2.0"));
							pos++;
							return true;
						case 11:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
							var4_first_items = (closure.var2_first_items).GetEnumerator();
							goto case 14;
						case 12:
							state = 10;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uuid", ""), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 14:
							state = 16;
							if (!var4_first_items.MoveNext()) { state = 15; goto case 15; }
							var5_box = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box("1411_input"));
							var6_subObjectReference = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("subObjectReference", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current)));
							var7_commonData = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("commonData", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Aliases", "http://www.energistics.org/energyml/data/commonv2"), (new seq3_join(closure.var1_attachments, (Altova.Mapforce.IMFNode)(var4_first_items.Current))));
							pos++;
							return true;
						case 15:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
							return false;
						case 16:
							state = 17;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), (new seq4_join(var5_box, (Altova.Mapforce.IMFNode)(var4_first_items.Current), var7_commonData)));
							pos++;
							return true;
						case 17:
							state = 18;
							var8_customData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("customData", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 18;
						case 18:
							state = 18;
							if (!var8_customData.MoveNext()) { state = 19; goto case 19; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:CustomData", "http://www.energistics.org/energyml/data/commonv2"), tbf.tbf1_CustomData.Eval((Altova.Mapforce.IMFNode)(var8_customData.Current)));
							pos++;
							return true;
						case 19:
							state = 21;
							Altova.Mapforce.MFEnumerator.Dispose(var8_customData); var8_customData = null;
							var9_md = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("md", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 21;
						case 21:
							state = 21;
							if (!var9_md.MoveNext()) { state = 22; goto case 22; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Md", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq5_join((Altova.Mapforce.IMFNode)(var9_md.Current))));
							pos++;
							return true;
						case 22:
							state = 24;
							Altova.Mapforce.MFEnumerator.Dispose(var9_md); var9_md = null;
							var10_param = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("param", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 24;
						case 24:
							state = 24;
							if (!var10_param.MoveNext()) { state = 25; goto case 25; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Param", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf2_ExtensionNameValue.Eval((Altova.Mapforce.IMFNode)(var10_param.Current)));
							pos++;
							return true;
						case 25:
							state = 27;
							Altova.Mapforce.MFEnumerator.Dispose(var10_param); var10_param = null;
							var11_mdBit = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("mdBit", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 27;
						case 27:
							state = 27;
							if (!var11_mdBit.MoveNext()) { state = 28; goto case 28; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("MdBit", "http://www.energistics.org/energyml/data/witsmlv2"), tbf.tbf3_MeasuredDepthCoord.Eval((Altova.Mapforce.IMFNode)(var11_mdBit.Current)));
							pos++;
							return true;
						case 28:
							state = 30;
							Altova.Mapforce.MFEnumerator.Dispose(var11_mdBit); var11_mdBit = null;
							var12_fileName = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("fileName", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 30;
						case 30:
							state = 30;
							if (!var12_fileName.MoveNext()) { state = 31; goto case 31; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FileName", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var12_fileName.Current))));
							pos++;
							return true;
						case 31:
							state = 33;
							Altova.Mapforce.MFEnumerator.Dispose(var12_fileName); var12_fileName = null;
							var13_fileType = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("fileType", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 33;
						case 33:
							state = 33;
							if (!var13_fileType.MoveNext()) { state = 34; goto case 34; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FileType", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_fileType.Current))));
							pos++;
							return true;
						case 34:
							state = 36;
							Altova.Mapforce.MFEnumerator.Dispose(var13_fileType); var13_fileType = null;
							var14_content = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("content", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_first_items.Current))).GetEnumerator();
							goto case 36;
						case 36:
							state = 36;
							if (!var14_content.MoveNext()) { state = 37; goto case 37; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Content", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BinaryToBase64String(Altova.CoreTypes.ParseBase64Binary(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var14_content.Current))))));
							pos++;
							return true;
						case 37:
							state = 39;
							Altova.Mapforce.MFEnumerator.Dispose(var14_content); var14_content = null;
							var15_subObjectReference = (var6_subObjectReference).GetEnumerator();
							goto case 39;
						case 39:
							state = 39;
							if (!var15_subObjectReference.MoveNext()) { state = 40; goto case 40; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SubObjectReference", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var15_subObjectReference.Current))));
							pos++;
							return true;
						case 40:
							state = 42;
							Altova.Mapforce.MFEnumerator.Dispose(var15_subObjectReference); var15_subObjectReference = null;
							var16_subObjectReference = (var6_subObjectReference).GetEnumerator();
							goto case 42;
						case 42:
							state = 42;
							if (!var16_subObjectReference.MoveNext()) { state = 43; goto case 43; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SubObjectReference", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq6_seq_((Altova.Mapforce.IMFNode)(var16_subObjectReference.Current))));
							pos++;
							return true;
						case 43:
							state = 14;
							Altova.Mapforce.MFEnumerator.Dispose(var16_subObjectReference); var16_subObjectReference = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Wellbore", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq7_join(var5_box, (Altova.Mapforce.IMFNode)(var4_first_items.Current))));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_first_items); var3_first_items = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_customData); var8_customData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_md); var9_md = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_param); var10_param = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_mdBit); var11_mdBit = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_fileName); var12_fileName = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_fileType); var13_fileType = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_content); var14_content = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_subObjectReference); var15_subObjectReference = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_subObjectReference); var16_subObjectReference = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_first_items); var4_first_items = null;
				}
			}
		}
		class seq3_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_attachments;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq3_join(
				System.Collections.IEnumerable var1_attachments,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_attachments = var1_attachments;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_join closure;
				private IEnumerator var3_attachments;
				private IEnumerator var4_uidWell;
				private IEnumerator var5_uid;
				public Enumerator(seq3_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var3_attachments = (closure.var1_attachments).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_attachments.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("authority", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("version", ""), (Altova.Mapforce.IMFNode)(var3_attachments.Current))))));
							pos++;
							return true;
						case 3:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var3_attachments); var3_attachments = null;
							var4_uidWell = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uidWell", ""), closure.var2_cur)).GetEnumerator();
							goto case 5;
						case 5:
							state = 7;
							if (!var4_uidWell.MoveNext()) { state = 6; goto case 6; }
							var5_uid = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uid", ""), closure.var2_cur)).GetEnumerator();
							goto case 7;
						case 6:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_uidWell); var4_uidWell = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Identifier is created from the uid of the input scheme"));
							pos++;
							return true;
						case 7:
							state = 7;
							if (!var5_uid.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Identifier", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.Functions.Core.Concat(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_uidWell.Current)), Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_uid.Current)))));
							pos++;
							return true;
						case 8:
							state = 5;
							Altova.Mapforce.MFEnumerator.Dispose(var5_uid); var5_uid = null;
							goto case 5;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_attachments); var3_attachments = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_uid); var5_uid = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_uidWell); var4_uidWell = null;
				}
			}
		}
		class seq4_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_box;
			private readonly Altova.Mapforce.IMFNode var2_cur;
			private readonly System.Collections.IEnumerable var3_commonData;

			public seq4_join(
				System.Collections.IEnumerable var1_box,
				Altova.Mapforce.IMFNode var2_cur,
				System.Collections.IEnumerable var3_commonData
			)
			{
				this.var1_box = var1_box;
				this.var2_cur = var2_cur;
				this.var3_commonData = var3_commonData;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_join closure;
				private IEnumerator var4_commonData;
				private IEnumerator var5_dTimCreation;
				private IEnumerator var6_commonData;
				private IEnumerator var7_dTimLastChange;
				public Enumerator(seq4_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("name", "http://www.witsml.org/schemas/1series"), closure.var2_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Originator", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_box);
							pos++;
							return true;
						case 3:
							state = 4;
							var4_commonData = (closure.var3_commonData).GetEnumerator();
							goto case 4;
						case 4:
							state = 6;
							if (!var4_commonData.MoveNext()) { state = 5; goto case 5; }
							var5_dTimCreation = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTimCreation", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var4_commonData.Current))).GetEnumerator();
							goto case 6;
						case 5:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var4_commonData); var4_commonData = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Format", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("Mapforce"));
							pos++;
							return true;
						case 6:
							state = 6;
							if (!var5_dTimCreation.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Creation", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_dTimCreation.Current))))));
							pos++;
							return true;
						case 7:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var5_dTimCreation); var5_dTimCreation = null;
							goto case 4;
						case 9:
							state = 10;
							var6_commonData = (closure.var3_commonData).GetEnumerator();
							goto case 10;
						case 10:
							state = 12;
							if (!var6_commonData.MoveNext()) { state = 11; goto case 11; }
							var7_dTimLastChange = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("dTimLastChange", "http://www.witsml.org/schemas/1series"), (Altova.Mapforce.IMFNode)(var6_commonData.Current))).GetEnumerator();
							goto case 12;
						case 11:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var6_commonData); var6_commonData = null;
							return false;
						case 12:
							state = 12;
							if (!var7_dTimLastChange.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var7_dTimLastChange.Current))))));
							pos++;
							return true;
						case 13:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var7_dTimLastChange); var7_dTimLastChange = null;
							goto case 10;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var5_dTimCreation); var5_dTimCreation = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_commonData); var4_commonData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_dTimLastChange); var7_dTimLastChange = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_commonData); var6_commonData = null;
				}
			}
		}
		class seq5_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq5_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_join closure;
				private IEnumerator var2_datum;
				public Enumerator(seq5_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							var2_datum = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("datum", ""), closure.var1_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var2_datum.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("datum", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_datum.Current))));
							pos++;
							return true;
						case 4:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_datum); var2_datum = null;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_datum); var2_datum = null;
				}
			}
		}
		class seq6_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq6_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_seq_ closure;
				public Enumerator(seq6_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:type", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box(Altova.Functions.Lang.StringAsQName("{http://www.energistics.org/energyml/data/commonv2}AuthorityQualifiedName")));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("object", ""), closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq7_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_box;
			private readonly Altova.Mapforce.IMFNode var2_cur;

			public seq7_join(
				System.Collections.IEnumerable var1_box,
				Altova.Mapforce.IMFNode var2_cur
			)
			{
				this.var1_box = var1_box;
				this.var2_cur = var2_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_join closure;
				private IEnumerator var3_nameWellbore;
				private IEnumerator var4_uidWellbore;
				public Enumerator(seq7_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ContentType", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("wellbore"));
							pos++;
							return true;
						case 2:
							state = 3;
							var3_nameWellbore = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("nameWellbore", "http://www.witsml.org/schemas/1series"), closure.var2_cur)).GetEnumerator();
							goto case 3;
						case 3:
							state = 3;
							if (!var3_nameWellbore.MoveNext()) { state = 4; goto case 4; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_nameWellbore.Current))));
							pos++;
							return true;
						case 4:
							state = 6;
							Altova.Mapforce.MFEnumerator.Dispose(var3_nameWellbore); var3_nameWellbore = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Uuid", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 6:
							state = 7;
							var4_uidWellbore = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uidWellbore", ""), closure.var2_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var4_uidWellbore.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:UuidAuthority", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_uidWellbore.Current))));
							pos++;
							return true;
						case 8:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_uidWellbore); var4_uidWellbore = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:VersionString", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_box);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_nameWellbore); var3_nameWellbore = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_uidWellbore); var4_uidWellbore = null;
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_obj_attachment_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_obj_attachment_Instance
			)
			{
				this.var1_obj_attachment_Instance = var1_obj_attachment_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_attachments;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_attachments = ((new main(closure.var1_obj_attachment_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_attachments.MoveNext()) { state = 3; goto case 3; }
							current = var2_attachments.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_attachments); var2_attachments = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_attachments); var2_attachments = null;
				}
			}
		}

	}
}
