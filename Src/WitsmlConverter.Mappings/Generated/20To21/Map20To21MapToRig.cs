////////////////////////////////////////////////////////////////////////
//
// Map20To21MapToRig.cs
//
// This file was generated by MapForce 2023sp1.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Xml;
using Altova.Types;
using Altova.Xml;
using Altova.Functions;



namespace Map20To21
{

	public class Map20To21MapToRig : Altova.TraceProvider
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_Rig2Instance;
		// members
		#endregion //Members


		public void Run(String Rig2SourceFilename, string Rig4TargetFilename)
		{
			// open source streams
			using (Altova.IO.Input Rig2Source = new Altova.IO.FileInput(Rig2SourceFilename))
			// open target stream
			using (Altova.IO.Output Rig4Target = new Altova.IO.FileOutput(Rig4TargetFilename))
			{
				// run
				Run(Rig2Source, Rig4Target);
			}
		}

		public void Run(Altova.IO.Input Rig2Source, Altova.IO.Output Rig4Target)
		{
			try
			{
				// Open the source(s)
			WriteTrace("Loading " + Rig2Source.Filename + "...\n");
			XmlDocument Rig2DocSourceObject = XmlTreeOperations.LoadDocument(Rig2Source);


			m_Rig2Instance = Rig2DocSourceObject;
			if (runDoesCloseAll)
				Rig2Source.Close();
				// Create the target
				XmlDocument Rig4Doc = (Rig4Target.Type == Altova.IO.Output.OutputType.XmlDocument) ? Rig4Target.Document : new XmlDocument();
				// create processing instruction etc...

				// Execute mapping

			main mapping = new main( 
				new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_Rig2Instance, Rig2Source.Filename));

			Altova.Mapforce.MFDomWriter.Write(mapping, Rig4Doc);

				// Close the target
			XmlTreeOperations.SaveDocument(
				Rig4Doc,
				Rig4Target,
				"UTF-8",
				false,
				false,
				true,
				false,
				"\r\n"
			);


			}
			finally
			{
				// Close the Source Library
				if (runDoesCloseAll)
				{
					Rig2Source.Close();
					Rig4Target.Close();
				}

			}
		}
		class main : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_Rig_Instance;

			public main(
				Altova.Mapforce.IMFNode var1_Rig_Instance
			)
			{
				this.var1_Rig_Instance = var1_Rig_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 2;
				private object current = null;
				private int pos = 0;
				private readonly main closure;
				private System.Collections.IEnumerable var2_Rig;
				public Enumerator(main closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 2:
							state = 0;
							var2_Rig = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Rig", "http://www.energistics.org/energyml/data/witsmlv2"), closure.var1_Rig_Instance));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Rig", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq1_join(var2_Rig)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq1_join : IEnumerable
		{
			private readonly System.Collections.IEnumerable var1_Rig;

			public seq1_join(
				System.Collections.IEnumerable var1_Rig
			)
			{
				this.var1_Rig = var1_Rig;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq1_join closure;
				private IEnumerator var2_Rig;
				private IEnumerator var4_Rig;
				private IEnumerator var3_objectVersion;
				private IEnumerator var5_Aliases;
				private IEnumerator var6_existenceKind;
				private IEnumerator var7_CustomData;
				private IEnumerator var8_ExtensionNameValue;
				private IEnumerator var9_Owner;
				private IEnumerator var10_TypeRig;
				private IEnumerator var11_Manufacturer;
				private IEnumerator var12_YearEntService;
				private IEnumerator var13_ClassRig;
				private IEnumerator var14_Approvals;
				private IEnumerator var15_Registration;
				private IEnumerator var16_TelNumber;
				private IEnumerator var17_FaxNumber;
				private IEnumerator var18_EmailAddress;
				private IEnumerator var19_NameContact;
				private IEnumerator var20_RatingDrillDepth;
				private IEnumerator var21_RatingWaterDepth;
				private IEnumerator var22_IsOffshore;
				private IEnumerator var23_TypeDerrick;
				private IEnumerator var24_RatingDerrick;
				private IEnumerator var25_HtDerrick;
				private IEnumerator var26_CapWindDerrick;
				private IEnumerator var27_NumCranes;
				public Enumerator(seq1_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateNamespace("eml", "http://www.energistics.org/energyml/data/commonv2");
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("xsi:schemaLocation", "http://www.w3.org/2001/XMLSchema-instance"), Altova.Functions.Core.Box("http://www.energistics.org/energyml/data/witsmlv2 file:///C:/Projects/Energistics/Standards/energyML_202205/energyml/data/witsml/v2.1/xsd_schemas/Rig.xsd"));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_Rig = (closure.var1_Rig).GetEnumerator();
							goto case 4;
						case 4:
							state = 6;
							if (!var2_Rig.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uuid", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uuid", ""), (Altova.Mapforce.IMFNode)(var2_Rig.Current))))));
							pos++;
							return true;
						case 5:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Rig); var2_Rig = null;
							var4_Rig = (closure.var1_Rig).GetEnumerator();
							goto case 11;
						case 6:
							state = 7;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("schemaVersion", ""), Altova.Functions.Core.Box("2.1"));
							pos++;
							return true;
						case 7:
							state = 8;
							var3_objectVersion = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("objectVersion", ""), (Altova.Mapforce.IMFNode)(var2_Rig.Current))).GetEnumerator();
							goto case 8;
						case 8:
							state = 8;
							if (!var3_objectVersion.MoveNext()) { state = 9; goto case 9; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("objectVersion", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_objectVersion.Current))));
							pos++;
							return true;
						case 9:
							state = 4;
							Altova.Mapforce.MFEnumerator.Dispose(var3_objectVersion); var3_objectVersion = null;
							goto case 4;
						case 11:
							state = 13;
							if (!var4_Rig.MoveNext()) { state = 12; goto case 12; }
							var5_Aliases = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Aliases", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 13;
						case 12:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var4_Rig); var4_Rig = null;
							return false;
						case 13:
							state = 13;
							if (!var5_Aliases.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Aliases", "http://www.energistics.org/energyml/data/commonv2"), (new seq2_join((Altova.Mapforce.IMFNode)(var5_Aliases.Current))));
							pos++;
							return true;
						case 14:
							state = 16;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Aliases); var5_Aliases = null;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Citation", "http://www.energistics.org/energyml/data/commonv2"), (new seq3_join((Altova.Mapforce.IMFNode)(var4_Rig.Current))));
							pos++;
							return true;
						case 16:
							state = 17;
							var6_existenceKind = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("existenceKind", ""), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 17;
						case 17:
							state = 17;
							if (!var6_existenceKind.MoveNext()) { state = 18; goto case 18; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Existence", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_existenceKind.Current))));
							pos++;
							return true;
						case 18:
							state = 20;
							Altova.Mapforce.MFEnumerator.Dispose(var6_existenceKind); var6_existenceKind = null;
							var7_CustomData = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CustomData", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 20;
						case 20:
							state = 20;
							if (!var7_CustomData.MoveNext()) { state = 21; goto case 21; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:CustomData", "http://www.energistics.org/energyml/data/commonv2"), (new seq4_seq_()));
							pos++;
							return true;
						case 21:
							state = 23;
							Altova.Mapforce.MFEnumerator.Dispose(var7_CustomData); var7_CustomData = null;
							var8_ExtensionNameValue = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ExtensionNameValue", "http://www.energistics.org/energyml/data/commonv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 23;
						case 23:
							state = 23;
							if (!var8_ExtensionNameValue.MoveNext()) { state = 24; goto case 24; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:ExtensionNameValue", "http://www.energistics.org/energyml/data/commonv2"), (new seq5_join((Altova.Mapforce.IMFNode)(var8_ExtensionNameValue.Current))));
							pos++;
							return true;
						case 24:
							state = 26;
							Altova.Mapforce.MFEnumerator.Dispose(var8_ExtensionNameValue); var8_ExtensionNameValue = null;
							var9_Owner = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Owner", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 26;
						case 26:
							state = 26;
							if (!var9_Owner.MoveNext()) { state = 27; goto case 27; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Owner", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq7_seq_((Altova.Mapforce.IMFNode)(var9_Owner.Current))));
							pos++;
							return true;
						case 27:
							state = 29;
							Altova.Mapforce.MFEnumerator.Dispose(var9_Owner); var9_Owner = null;
							var10_TypeRig = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TypeRig", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 29;
						case 29:
							state = 29;
							if (!var10_TypeRig.MoveNext()) { state = 30; goto case 30; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TypeRig", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var10_TypeRig.Current))));
							pos++;
							return true;
						case 30:
							state = 32;
							Altova.Mapforce.MFEnumerator.Dispose(var10_TypeRig); var10_TypeRig = null;
							var11_Manufacturer = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Manufacturer", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 32;
						case 32:
							state = 32;
							if (!var11_Manufacturer.MoveNext()) { state = 33; goto case 33; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Manufacturer", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq7_seq_((Altova.Mapforce.IMFNode)(var11_Manufacturer.Current))));
							pos++;
							return true;
						case 33:
							state = 35;
							Altova.Mapforce.MFEnumerator.Dispose(var11_Manufacturer); var11_Manufacturer = null;
							var12_YearEntService = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("YearEntService", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 35;
						case 35:
							state = 35;
							if (!var12_YearEntService.MoveNext()) { state = 36; goto case 36; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("YearEntService", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.GYearToString(Altova.CoreTypes.ParseGYear(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var12_YearEntService.Current))))));
							pos++;
							return true;
						case 36:
							state = 38;
							Altova.Mapforce.MFEnumerator.Dispose(var12_YearEntService); var12_YearEntService = null;
							var13_ClassRig = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ClassRig", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 38;
						case 38:
							state = 38;
							if (!var13_ClassRig.MoveNext()) { state = 39; goto case 39; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ClassRig", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var13_ClassRig.Current))));
							pos++;
							return true;
						case 39:
							state = 41;
							Altova.Mapforce.MFEnumerator.Dispose(var13_ClassRig); var13_ClassRig = null;
							var14_Approvals = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Approvals", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 41;
						case 41:
							state = 41;
							if (!var14_Approvals.MoveNext()) { state = 42; goto case 42; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Approvals", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var14_Approvals.Current))));
							pos++;
							return true;
						case 42:
							state = 44;
							Altova.Mapforce.MFEnumerator.Dispose(var14_Approvals); var14_Approvals = null;
							var15_Registration = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Registration", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 44;
						case 44:
							state = 44;
							if (!var15_Registration.MoveNext()) { state = 45; goto case 45; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Registration", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var15_Registration.Current))));
							pos++;
							return true;
						case 45:
							state = 47;
							Altova.Mapforce.MFEnumerator.Dispose(var15_Registration); var15_Registration = null;
							var16_TelNumber = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TelNumber", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 47;
						case 47:
							state = 47;
							if (!var16_TelNumber.MoveNext()) { state = 48; goto case 48; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TelNumber", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var16_TelNumber.Current))));
							pos++;
							return true;
						case 48:
							state = 50;
							Altova.Mapforce.MFEnumerator.Dispose(var16_TelNumber); var16_TelNumber = null;
							var17_FaxNumber = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("FaxNumber", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 50;
						case 50:
							state = 50;
							if (!var17_FaxNumber.MoveNext()) { state = 51; goto case 51; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FaxNumber", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var17_FaxNumber.Current))));
							pos++;
							return true;
						case 51:
							state = 53;
							Altova.Mapforce.MFEnumerator.Dispose(var17_FaxNumber); var17_FaxNumber = null;
							var18_EmailAddress = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("EmailAddress", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 53;
						case 53:
							state = 53;
							if (!var18_EmailAddress.MoveNext()) { state = 54; goto case 54; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EmailAddress", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var18_EmailAddress.Current))));
							pos++;
							return true;
						case 54:
							state = 56;
							Altova.Mapforce.MFEnumerator.Dispose(var18_EmailAddress); var18_EmailAddress = null;
							var19_NameContact = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NameContact", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 56;
						case 56:
							state = 56;
							if (!var19_NameContact.MoveNext()) { state = 57; goto case 57; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NameContact", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var19_NameContact.Current))));
							pos++;
							return true;
						case 57:
							state = 59;
							Altova.Mapforce.MFEnumerator.Dispose(var19_NameContact); var19_NameContact = null;
							var20_RatingDrillDepth = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("RatingDrillDepth", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 59;
						case 59:
							state = 59;
							if (!var20_RatingDrillDepth.MoveNext()) { state = 60; goto case 60; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("RatingDrillDepth", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq8_seq_((Altova.Mapforce.IMFNode)(var20_RatingDrillDepth.Current))));
							pos++;
							return true;
						case 60:
							state = 62;
							Altova.Mapforce.MFEnumerator.Dispose(var20_RatingDrillDepth); var20_RatingDrillDepth = null;
							var21_RatingWaterDepth = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("RatingWaterDepth", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 62;
						case 62:
							state = 62;
							if (!var21_RatingWaterDepth.MoveNext()) { state = 63; goto case 63; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("RatingWaterDepth", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq8_seq_((Altova.Mapforce.IMFNode)(var21_RatingWaterDepth.Current))));
							pos++;
							return true;
						case 63:
							state = 65;
							Altova.Mapforce.MFEnumerator.Dispose(var21_RatingWaterDepth); var21_RatingWaterDepth = null;
							var22_IsOffshore = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IsOffshore", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 65;
						case 65:
							state = 65;
							if (!var22_IsOffshore.MoveNext()) { state = 66; goto case 66; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("IsOffshore", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.BooleanToString(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var22_IsOffshore.Current))))));
							pos++;
							return true;
						case 66:
							state = 68;
							Altova.Mapforce.MFEnumerator.Dispose(var22_IsOffshore); var22_IsOffshore = null;
							var23_TypeDerrick = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("TypeDerrick", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 68;
						case 68:
							state = 68;
							if (!var23_TypeDerrick.MoveNext()) { state = 69; goto case 69; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TypeDerrick", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var23_TypeDerrick.Current))));
							pos++;
							return true;
						case 69:
							state = 71;
							Altova.Mapforce.MFEnumerator.Dispose(var23_TypeDerrick); var23_TypeDerrick = null;
							var24_RatingDerrick = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("RatingDerrick", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 71;
						case 71:
							state = 71;
							if (!var24_RatingDerrick.MoveNext()) { state = 72; goto case 72; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("RatingDerrick", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq8_seq_((Altova.Mapforce.IMFNode)(var24_RatingDerrick.Current))));
							pos++;
							return true;
						case 72:
							state = 74;
							Altova.Mapforce.MFEnumerator.Dispose(var24_RatingDerrick); var24_RatingDerrick = null;
							var25_HtDerrick = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("HtDerrick", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 74;
						case 74:
							state = 74;
							if (!var25_HtDerrick.MoveNext()) { state = 75; goto case 75; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("HtDerrick", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq8_seq_((Altova.Mapforce.IMFNode)(var25_HtDerrick.Current))));
							pos++;
							return true;
						case 75:
							state = 77;
							Altova.Mapforce.MFEnumerator.Dispose(var25_HtDerrick); var25_HtDerrick = null;
							var26_CapWindDerrick = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CapWindDerrick", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 77;
						case 77:
							state = 77;
							if (!var26_CapWindDerrick.MoveNext()) { state = 78; goto case 78; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CapWindDerrick", "http://www.energistics.org/energyml/data/witsmlv2"), (new seq8_seq_((Altova.Mapforce.IMFNode)(var26_CapWindDerrick.Current))));
							pos++;
							return true;
						case 78:
							state = 80;
							Altova.Mapforce.MFEnumerator.Dispose(var26_CapWindDerrick); var26_CapWindDerrick = null;
							var27_NumCranes = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NumCranes", "http://www.energistics.org/energyml/data/witsmlv2"), (Altova.Mapforce.IMFNode)(var4_Rig.Current))).GetEnumerator();
							goto case 80;
						case 80:
							state = 80;
							if (!var27_NumCranes.MoveNext()) { state = 81; goto case 81; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NumCranes", "http://www.energistics.org/energyml/data/witsmlv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var27_NumCranes.Current))))))))));
							pos++;
							return true;
						case 81:
							state = 11;
							Altova.Mapforce.MFEnumerator.Dispose(var27_NumCranes); var27_NumCranes = null;
							goto case 11;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_objectVersion); var3_objectVersion = null;
					Altova.Mapforce.MFEnumerator.Dispose(var2_Rig); var2_Rig = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Aliases); var5_Aliases = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_existenceKind); var6_existenceKind = null;
					Altova.Mapforce.MFEnumerator.Dispose(var7_CustomData); var7_CustomData = null;
					Altova.Mapforce.MFEnumerator.Dispose(var8_ExtensionNameValue); var8_ExtensionNameValue = null;
					Altova.Mapforce.MFEnumerator.Dispose(var9_Owner); var9_Owner = null;
					Altova.Mapforce.MFEnumerator.Dispose(var10_TypeRig); var10_TypeRig = null;
					Altova.Mapforce.MFEnumerator.Dispose(var11_Manufacturer); var11_Manufacturer = null;
					Altova.Mapforce.MFEnumerator.Dispose(var12_YearEntService); var12_YearEntService = null;
					Altova.Mapforce.MFEnumerator.Dispose(var13_ClassRig); var13_ClassRig = null;
					Altova.Mapforce.MFEnumerator.Dispose(var14_Approvals); var14_Approvals = null;
					Altova.Mapforce.MFEnumerator.Dispose(var15_Registration); var15_Registration = null;
					Altova.Mapforce.MFEnumerator.Dispose(var16_TelNumber); var16_TelNumber = null;
					Altova.Mapforce.MFEnumerator.Dispose(var17_FaxNumber); var17_FaxNumber = null;
					Altova.Mapforce.MFEnumerator.Dispose(var18_EmailAddress); var18_EmailAddress = null;
					Altova.Mapforce.MFEnumerator.Dispose(var19_NameContact); var19_NameContact = null;
					Altova.Mapforce.MFEnumerator.Dispose(var20_RatingDrillDepth); var20_RatingDrillDepth = null;
					Altova.Mapforce.MFEnumerator.Dispose(var21_RatingWaterDepth); var21_RatingWaterDepth = null;
					Altova.Mapforce.MFEnumerator.Dispose(var22_IsOffshore); var22_IsOffshore = null;
					Altova.Mapforce.MFEnumerator.Dispose(var23_TypeDerrick); var23_TypeDerrick = null;
					Altova.Mapforce.MFEnumerator.Dispose(var24_RatingDerrick); var24_RatingDerrick = null;
					Altova.Mapforce.MFEnumerator.Dispose(var25_HtDerrick); var25_HtDerrick = null;
					Altova.Mapforce.MFEnumerator.Dispose(var26_CapWindDerrick); var26_CapWindDerrick = null;
					Altova.Mapforce.MFEnumerator.Dispose(var27_NumCranes); var27_NumCranes = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_Rig); var4_Rig = null;
				}
			}
		}
		class seq2_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq2_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq2_join closure;
				private IEnumerator var2_Description;
				public Enumerator(seq2_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("authority", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("authority", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Identifier", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Identifier", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var2_Description.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_Description.Current))));
							pos++;
							return true;
						case 5:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Description); var2_Description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Description); var2_Description = null;
				}
			}
		}
		class seq3_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq3_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq3_join closure;
				private Altova.Mapforce.IMFNode var2_Citation;
				private IEnumerator var3_Editor;
				private IEnumerator var4_LastUpdate;
				private IEnumerator var5_Description;
				private IEnumerator var6_DescriptiveKeywords;
				public Enumerator(seq3_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Citation = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Citation", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)));
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Title", "http://www.energistics.org/energyml/data/commonv2"), var2_Citation)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Originator", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Originator", "http://www.energistics.org/energyml/data/commonv2"), var2_Citation)))));
							pos++;
							return true;
						case 3:
							state = 4;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Creation", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Creation", "http://www.energistics.org/energyml/data/commonv2"), var2_Citation)))))));
							pos++;
							return true;
						case 4:
							state = 5;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Format", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Format", "http://www.energistics.org/energyml/data/commonv2"), var2_Citation)))));
							pos++;
							return true;
						case 5:
							state = 6;
							var3_Editor = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Editor", "http://www.energistics.org/energyml/data/commonv2"), var2_Citation)).GetEnumerator();
							goto case 6;
						case 6:
							state = 6;
							if (!var3_Editor.MoveNext()) { state = 7; goto case 7; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Editor", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_Editor.Current))));
							pos++;
							return true;
						case 7:
							state = 9;
							Altova.Mapforce.MFEnumerator.Dispose(var3_Editor); var3_Editor = null;
							var4_LastUpdate = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), var2_Citation)).GetEnumerator();
							goto case 9;
						case 9:
							state = 9;
							if (!var4_LastUpdate.MoveNext()) { state = 10; goto case 10; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:LastUpdate", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_LastUpdate.Current))))));
							pos++;
							return true;
						case 10:
							state = 12;
							Altova.Mapforce.MFEnumerator.Dispose(var4_LastUpdate); var4_LastUpdate = null;
							var5_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/commonv2"), var2_Citation)).GetEnumerator();
							goto case 12;
						case 12:
							state = 12;
							if (!var5_Description.MoveNext()) { state = 13; goto case 13; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_Description.Current))));
							pos++;
							return true;
						case 13:
							state = 15;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
							var6_DescriptiveKeywords = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DescriptiveKeywords", "http://www.energistics.org/energyml/data/commonv2"), var2_Citation)).GetEnumerator();
							goto case 15;
						case 15:
							state = 15;
							if (!var6_DescriptiveKeywords.MoveNext()) { state = 16; goto case 16; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:DescriptiveKeywords", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var6_DescriptiveKeywords.Current))));
							pos++;
							return true;
						case 16:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var6_DescriptiveKeywords); var6_DescriptiveKeywords = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_Editor); var3_Editor = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_LastUpdate); var4_LastUpdate = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
					Altova.Mapforce.MFEnumerator.Dispose(var6_DescriptiveKeywords); var6_DescriptiveKeywords = null;
				}
			}
		}
		class seq4_seq_ : IEnumerable
		{

			public seq4_seq_(
			)
			{
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq4_seq_ closure;
				public Enumerator(seq4_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 0;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq5_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq5_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq5_join closure;
				private IEnumerator var2_MeasureClass;
				private IEnumerator var3_DTim;
				private IEnumerator var4_Index;
				private IEnumerator var5_Description;
				public Enumerator(seq5_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Name", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Value", "http://www.energistics.org/energyml/data/commonv2"), (new seq6_join(closure.var1_cur)));
							pos++;
							return true;
						case 3:
							state = 4;
							var2_MeasureClass = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 4;
						case 4:
							state = 4;
							if (!var2_MeasureClass.MoveNext()) { state = 5; goto case 5; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:MeasureClass", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_MeasureClass.Current))));
							pos++;
							return true;
						case 5:
							state = 7;
							Altova.Mapforce.MFEnumerator.Dispose(var2_MeasureClass); var2_MeasureClass = null;
							var3_DTim = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DTim", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 7;
						case 7:
							state = 7;
							if (!var3_DTim.MoveNext()) { state = 8; goto case 8; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:DTim", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DateTimeToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_DTim.Current))))));
							pos++;
							return true;
						case 8:
							state = 10;
							Altova.Mapforce.MFEnumerator.Dispose(var3_DTim); var3_DTim = null;
							var4_Index = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Index", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 10;
						case 10:
							state = 10;
							if (!var4_Index.MoveNext()) { state = 11; goto case 11; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Index", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var4_Index.Current))))))))));
							pos++;
							return true;
						case 11:
							state = 13;
							Altova.Mapforce.MFEnumerator.Dispose(var4_Index); var4_Index = null;
							var5_Description = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Description", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)).GetEnumerator();
							goto case 13;
						case 13:
							state = 13;
							if (!var5_Description.MoveNext()) { state = 14; goto case 14; }
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Description", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var5_Description.Current))));
							pos++;
							return true;
						case 14:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_MeasureClass); var2_MeasureClass = null;
					Altova.Mapforce.MFEnumerator.Dispose(var3_DTim); var3_DTim = null;
					Altova.Mapforce.MFEnumerator.Dispose(var4_Index); var4_Index = null;
					Altova.Mapforce.MFEnumerator.Dispose(var5_Description); var5_Description = null;
				}
			}
		}
		class seq6_join : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq6_join(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq6_join closure;
				private Altova.Mapforce.IMFNode var2_Value;
				private IEnumerator var3_uom;
				public Enumerator(seq6_join closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Value = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Value", "http://www.energistics.org/energyml/data/commonv2"), closure.var1_cur)));
							var3_uom = (Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), var2_Value)).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var3_uom.MoveNext()) { state = 3; goto case 3; }
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var3_uom.Current))));
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var3_uom); var3_uom = null;
							current = Altova.CoreTypes.NodeToString(var2_Value);
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var3_uom); var3_uom = null;
				}
			}
		}
		class seq7_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq7_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq7_seq_ closure;
				public Enumerator(seq7_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Uuid", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("00000000-0000-0000-0000-000000000000"));
							pos++;
							return true;
						case 2:
							state = 3;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:QualifiedType", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box("eml23.BusinessAssociate"));
							pos++;
							return true;
						case 3:
							state = 0;
							current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("eml:Title", "http://www.energistics.org/energyml/data/commonv2"), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class seq8_seq_ : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_cur;

			public seq8_seq_(
				Altova.Mapforce.IMFNode var1_cur
			)
			{
				this.var1_cur = var1_cur;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly seq8_seq_ closure;
				public Enumerator(seq8_seq_ closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							current = Altova.Functions.Core.CreateAttribute(Altova.Functions.Core.CreateQName("uom", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(Altova.Functions.Core.CreateQName("uom", ""), closure.var1_cur)))));
							pos++;
							return true;
						case 2:
							state = 0;
							current = Altova.CoreTypes.DoubleToString(Altova.CoreTypes.ParseDouble(Altova.CoreTypes.NodeToString(closure.var1_cur)));
							pos++;
							return true;
						}
					}
					return false;
				}

				public void Dispose() 
				{
				}
			}
		}
		class Outer : IEnumerable
		{
			private readonly Altova.Mapforce.IMFNode var1_Rig_Instance;

			public Outer(
				Altova.Mapforce.IMFNode var1_Rig_Instance
			)
			{
				this.var1_Rig_Instance = var1_Rig_Instance;
			}

			public IEnumerator GetEnumerator() { return new Enumerator(this); }

			class Enumerator : Altova.Mapforce.IMFEnumerator
			{
				private int state = 1;
				private object current = null;
				private int pos = 0;
				private readonly Outer closure;
				private IEnumerator var2_Rig;
				public Enumerator(Outer closure) 
				{
					this.closure = closure;
				}

				public void Reset() { state = 0; pos = 0;}
				public int Position { get { return pos; } }
				public object Current { get { return current; } }

				public bool MoveNext()
				{
					while (state != 0)
					{
						switch (state) 
						{
						case 1:
							state = 2;
							var2_Rig = ((new main(closure.var1_Rig_Instance))).GetEnumerator();
							goto case 2;
						case 2:
							state = 2;
							if (!var2_Rig.MoveNext()) { state = 3; goto case 3; }
							current = var2_Rig.Current;
							pos++;
							return true;
						case 3:
							state = 0;
							Altova.Mapforce.MFEnumerator.Dispose(var2_Rig); var2_Rig = null;
							return false;
						}
					}
					return false;
				}

				public void Dispose() 
				{
					Altova.Mapforce.MFEnumerator.Dispose(var2_Rig); var2_Rig = null;
				}
			}
		}

	}
}
